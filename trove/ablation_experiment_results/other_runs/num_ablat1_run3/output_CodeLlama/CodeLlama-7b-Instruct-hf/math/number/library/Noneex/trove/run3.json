# %% from __future__ import division (import)
from __future__ import division


# %% import datetime (import)
import datetime


# %%  (function)

def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a



# %%  (function)

def is_prime(n):
    if n == 2 or n == 3:
        return True
    for i in range(2, int(n ** 0.5) + 1):
        if n % i == 0:
            return False
    return True



# %% import itertools (import)
import itertools


# %% import math (import)
import math


# %% from math import gcd (import)
from math import gcd


# %% import numpy as np (import)
import numpy as np


# %%  (function)

def is_divisor(a, divisor):
    return a % divisor == 0



# %%  (function)

def divisors(a):
    return [divisor for divisor in range(1, a) if is_divisor(a, divisor)]


# %% from sympy.abc import a (import)
from sympy.abc import a


# %% from sympy.abc import b (import)
from sympy.abc import b


# %% Converts a number from one base to another. (function)

def base_converter(n, base_in, base_out):
    """
    Converts a number from one base to another.
    """
    digits = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'
    if n < base_in:
        return digits[n]
    return base_converter(n // base_out, base_in, base_out) + digits[n % base_out]


# %% import binascii (import)
import binascii


# %% from math import factorial (import)
from math import factorial


# %% import sympy (import)
import sympy


