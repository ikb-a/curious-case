{"request_0": {"request_name": "request_0", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma sqrt_properties:\n  fixes a b :: real\n  assumes \"a >= 0\" \"b >= 0\"\n  shows \"sqrt (a + b) = sqrt a + sqrt b \\<longleftrightarrow> b = 0\"", "update_count": 3}, "request_1": {"request_name": "request_1", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma sqrt_equivalence:\n  fixes x :: real\n  assumes \"sqrt (x + 9) = 9\"\n  shows \"x = 72\"", "update_count": 3}, "request_2": {"request_name": "request_2", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma recursive_limit:\n  fixes x :: real\n  assumes \"filterlim (\\<lambda>n. sqrt (x + u n)) at_top (nhds 9)\"\n  shows \"x = 72\"", "update_count": 3}, "request_3": {"request_name": "request_3", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma limit_nested_sqrt:\n  fixes x :: real\n  assumes \"filterlim u at_top (nhds L)\"\n  shows \"L = sqrt (x + L)\"", "update_count": 3}, "request_4": {"request_name": "request_4", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma square_nonneg:\n  fixes a b :: real\n  assumes \"a = b\" \"0 \u2264 a\" \"0 \u2264 b\"\n  shows \"a^2 = b^2\"", "update_count": 3}, "request_5": {"request_name": "request_5", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma limit_of_nested_sqrt:\n  fixes x :: real\n  assumes \"x >= 0\"\n  shows \"filterlim (\\<lambda>n. sqrt (x + u n)) at_top (nhds (sqrt (x + sqrt (x + ...))))\"", "update_count": 3}, "request_6": {"request_name": "request_6", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma square_both_sides:\n  fixes a b :: real\n  assumes \"a = b\"\n  shows \"a^2 = b^2\"", "update_count": 3}, "request_7": {"request_name": "request_7", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma convergence_of_nested_sqrt:\n  fixes x :: real\n  assumes \"x >= 0\"\n  shows \"(\\<lambda>n. sqrt (x + u n)) \\<longlongrightarrow> sqrt (x + sqrt (x + ...))\"", "update_count": 3}, "request_8": {"request_name": "request_8", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma sqrt_eq:\n  fixes x u :: real\n  assumes \"u = 9\"\n  shows \"sqrt (x + u) = 9\"", "update_count": 3}, "request_9": {"request_name": "request_9", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma sqrt_limit:\n  fixes x :: real\n  assumes \"x > 0\"\n  shows \"filterlim (\\<lambda>n. sqrt (x + n)) at_top (nhds (sqrt x))\"", "update_count": 3}, "request_10": {"request_name": "request_10", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma sqrt_positive:\n  fixes a :: real\n  assumes \"a >= 0\"\n  shows \"sqrt a = b \\<longleftrightarrow> b^2 = a\"", "update_count": 3}, "request_11": {"request_name": "request_11", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma nested_sqrt_convergence:\n  fixes x :: real\n  assumes \"x > 0\"\n  shows \"(\\<lambda>n. sqrt (x + n)) \\<longlongrightarrow> sqrt x\"", "update_count": 3}, "request_12": {"request_name": "request_12", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma nested_sqrt_convergence:\n  fixes x :: real\n  assumes \"x >= 0\"\n  shows \"filterlim (\\<lambda>n. sqrt (x + (if n = 0 then 0 else sqrt (x + ...)))) at_top (nhds (sqrt (x + sqrt (x + ...))))\"", "update_count": 3}, "request_13": {"request_name": "request_13", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma nested_sqrt_limit:\n  fixes x :: real\n  assumes \"x >= 0\"\n  shows \"sqrt (x + sqrt (x + sqrt (x + ...))) = sqrt (x + 9)\"", "update_count": 3}, "request_14": {"request_name": "request_14", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma sqrt_limit:\n  fixes x :: real\n  assumes \"x >= 0\"\n  shows \"sqrt x = (x::real) ^ (1/2)\"", "update_count": 3}, "request_15": {"request_name": "request_15", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma nested_radical_limit:\n  fixes x :: real\n  assumes \"u (n + 1) = sqrt (x + u n)\"\n  and \"filterlim u at_top (nhds L)\"\n  shows \"L = sqrt (x + L)\"", "update_count": 3}, "request_16": {"request_name": "request_16", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma algebraic_manipulation:\n  fixes a b c :: real\n  assumes \"a + b = c\"\n  shows \"b = c - a\"", "update_count": 4}, "request_17": {"request_name": "request_17", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma sqrt_eq_square:\n  fixes a b :: real\n  assumes \"b >= 0\"\n  shows \"\\<sqrt>a = b \\<Longrightarrow> a = b^2\"", "update_count": 3}, "request_18": {"request_name": "request_18", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma square_root_equation:\n  fixes x y :: real\n  assumes \"y = sqrt (x + z)\"\n  shows \"y^2 = x + z\"", "update_count": 3}, "request_19": {"request_name": "request_19", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma convergence_of_nested_radicals:\n  fixes x :: real\n  assumes \"x >= 0\"\n  shows \"filterlim (\\<lambda>n. u n) at_top (nhds L) \\<Longrightarrow> L = sqrt (x + L)\"", "update_count": 3}, "request_20": {"request_name": "request_20", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma sqrt_convergence:\n  fixes x :: real\n  assumes \"x >= 0\"\n  shows \"sqrt (x + sqrt (x + sqrt (x + ...)) ) = sqrt (x + 9) \\<longleftrightarrow> x + 9 = 81\"", "update_count": 3}, "request_21": {"request_name": "request_21", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma square_root_property:\n  fixes a b :: real\n  assumes \"a = sqrt b\"\n  shows \"a^2 = b\"\n  by (simp add: assms)", "update_count": 3}, "request_22": {"request_name": "request_22", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma limit_recursion:\n  fixes x :: real\n  assumes \"\\<forall> n. u (n + 1) = sqrt (x + u n)\"\n  shows \"filterlim u at_top (nhds (sqrt (x + 9)))\"", "update_count": 3}, "request_23": {"request_name": "request_23", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma sqrt_recursive:\n  fixes x :: real\n  assumes \"u (n + 1) = sqrt (x + u n)\"\n  and \"filterlim u at_top (nhds 9)\"\n  shows \"x = 72\"", "update_count": 4}, "request_24": {"request_name": "request_24", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma sqrt_limit:\n  fixes x :: real\n  assumes \"u (n + 1) = sqrt (x + u n)\"\n  shows \"filterlim u at_top (nhds (sqrt (x + sqrt (x + sqrt (x + ...))))\"", "update_count": 3}, "request_25": {"request_name": "request_25", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma isolate_variable:\n  fixes x :: real\n  assumes \"x + c = d\"\n  shows \"x = d - c\"", "update_count": 3}, "request_26": {"request_name": "request_26", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma sqrt_eq:\n  fixes a b :: real\n  assumes \"a = b\" \"a >= 0\" \"b >= 0\"\n  shows \"sqrt a = sqrt b\"", "update_count": 4}, "request_27": {"request_name": "request_27", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma square_nonneg:\n  fixes a :: real\n  shows \"a >= 0 \\<Longrightarrow> a^2 >= 0\"", "update_count": 3}, "request_28": {"request_name": "request_28", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma sqrt_recursive_limit:\n  fixes x :: real\n  assumes \"u (n + 1) = sqrt (x + u n)\"\n  shows \"filterlim u at_top (nhds L) \\<Longrightarrow> L = sqrt (x + L)\"", "update_count": 3}, "request_29": {"request_name": "request_29", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma convergence_of_nested_radicals:\n  fixes x :: real\n  assumes \"u (n + 1) = sqrt (x + u n)\"\n  shows \"u n converges to L \\<Longrightarrow> L = sqrt (x + L)\"", "update_count": 3}, "request_30": {"request_name": "request_30", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma limit_substitution:\n  fixes u :: \"nat \\<Rightarrow> real\" and L :: real\n  assumes \"filterlim u at_top (nhds L)\"\n  shows \"u n \\<to> L\"", "update_count": 3}, "request_31": {"request_name": "request_31", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma convergence_of_nested_sqrt:\n  fixes x :: real\n  assumes \"x > 0\"\n  shows \"(\\<lambda>n. sqrt (x + u n)) converges to 9\"", "update_count": 3}, "request_32": {"request_name": "request_32", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma limit_sqrt:\n  fixes u :: \"nat \u21d2 real\"\n  assumes \"filterlim u at_top (nhds L)\"\n  shows \"filterlim (sqrt \u2218 u) at_top (nhds (sqrt L))\"", "update_count": 3}, "request_33": {"request_name": "request_33", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma sqrt_equation:\n  fixes x :: real\n  assumes \"x >= 0\"\n  shows \"sqrt x = y \u27f7 x = y^2\"", "update_count": 3}, "request_34": {"request_name": "request_34", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma continuous_sqrt:\n  fixes x :: real\n  assumes \"x >= 0\"\n  shows \"continuous (sqrt) (at x)\"", "update_count": 4}, "request_35": {"request_name": "request_35", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma nested_radical_convergence:\n  fixes x :: real\n  assumes \"u (n + 1) = sqrt (x + u n)\"\n  shows \"filterlim u at_top (nhds 9) \\<Longrightarrow> x = 72\"", "update_count": 3}, "request_36": {"request_name": "request_36", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma limit_of_nested_radicals:\n  fixes x :: real\n  assumes \"u (n + 1) = sqrt (x + u n)\"\n  shows \"u n \\<to> 9 \\<Longrightarrow> x = 72\"", "update_count": 3}, "request_37": {"request_name": "request_37", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma sqrt_square:\n  fixes a :: real\n  assumes \"a >= 0\"\n  shows \"sqrt a ^ 2 = a\"", "update_count": 3}, "request_38": {"request_name": "request_38", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma unique_solution_sqrt:\n  fixes x :: real\n  assumes \"sqrt (x + 9) = 9\"\n  shows \"x = 72\"", "update_count": 3}, "request_39": {"request_name": "request_39", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma sqrt_convergence:\n  fixes x :: real\n  assumes \"x >= 0\"\n  shows \"sqrt x >= 0\"", "update_count": 3}, "request_40": {"request_name": "request_40", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma limit_sqrt_sequence:\n  fixes x :: real\n  assumes \"\\<forall> n. u (n + 1) = sqrt (x + u n)\"\n  assumes \"filterlim u at_top (nhds 9)\"\n  shows \"u 0 = 9\"", "update_count": 3}, "request_41": {"request_name": "request_41", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma nested_radical_convergence:\n  fixes x :: real\n  assumes \"filterlim u at_top (nhds 9)\"\n  shows \"u 0 = sqrt (x + u 0) \\<Longrightarrow> x = 72\"", "update_count": 3}, "request_42": {"request_name": "request_42", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma square_root_equation:\n  fixes x :: real\n  shows \"sqrt (x + 9) = 9 \\<Longrightarrow> x = 72\"", "update_count": 3}, "request_43": {"request_name": "request_43", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma conclude_x:\n  shows \"x = 72\"", "update_count": 3}, "request_44": {"request_name": "request_44", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma square_root_property:\n  fixes a b :: real\n  assumes \"a = sqrt b\" and \"b >= 0\"\n  shows \"a^2 = b\"", "update_count": 3}, "request_45": {"request_name": "request_45", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma fixed_point_sqrt:\n  fixes x :: real\n  assumes \"x >= 0\"\n  shows \"sqrt (x + 9) = 9 \u27f7 x + 9 = 81\"", "update_count": 3}, "request_46": {"request_name": "request_46", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma sqrt_fixed_point:\n  fixes x :: real\n  assumes \"sqrt (x + y) = y\"\n  shows \"x = y^2 - y\"", "update_count": 3}, "request_47": {"request_name": "request_47", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma sqrt_equation:\n  fixes x :: real\n  assumes \"sqrt (x + 9) = 9\"\n  shows \"x = 72\"\n  using assms by (simp add: power2_eq_square)", "update_count": 3}, "request_48": {"request_name": "request_48", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma limit_sqrt:\n  fixes a b :: real\n  assumes \"a > 0\" \"b > 0\"\n  shows \"sqrt (a + b) = sqrt a + sqrt b\"\n  using assms by (simp add: sqrt_add)", "update_count": 3}, "request_49": {"request_name": "request_49", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma rearrangement_of_real_numbers:\n  fixes a b :: real\n  shows \"a = b + c \\<Longrightarrow> a - c = b\"", "update_count": 3}, "request_50": {"request_name": "request_50", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma nested_radical_equality:\n  fixes x :: real\n  assumes \"u = sqrt (x + u)\"\n  shows \"u = sqrt (x + u) \\<longleftrightarrow> u^2 = x + u\"", "update_count": 3}, "request_51": {"request_name": "request_51", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma sqrt_add:\n  fixes a b :: real\n  assumes \"a \u2265 0\" \"b \u2265 0\"\n  shows \"sqrt (a + b) = sqrt a + sqrt b\"", "update_count": 3}, "request_52": {"request_name": "request_52", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma nested_sqrt_convergence:\n  fixes x :: real\n  assumes \"x >= 0\"\n  shows \"filterlim (\\<lambda>n. sqrt (x + u n)) at_top (nhds (sqrt (x + sqrt (x + sqrt (x + ...))))))\"\n  using assms by (simp add: filterlim_def)", "update_count": 4}, "request_53": {"request_name": "request_53", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma sqrt_equation:\n  fixes x :: real\n  assumes \"x + 9 = 81\"\n  shows \"sqrt (x + 9) = 9\"\n  using assms by (simp add: sqrt_eq_iff_square)", "update_count": 3}, "request_54": {"request_name": "request_54", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma square_root_positive:\n  fixes a :: real\n  assumes \"a >= 0\"\n  shows \"sqrt a >= 0\"", "update_count": 3}, "request_55": {"request_name": "request_55", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma sqrt_eq:\n  fixes a b :: real\n  assumes \"sqrt a = sqrt b\"\n  shows \"a = b\"", "update_count": 4}, "request_56": {"request_name": "request_56", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_31.json", "formal_statement": "lemma square_root_property:\n  fixes a b :: real\n  assumes \"a >= 0\" \"b >= 0\" \"sqrt a = b\"\n  shows \"a = b^2\"\n  using assms by (simp add: power2_eq_square)", "update_count": 0}}