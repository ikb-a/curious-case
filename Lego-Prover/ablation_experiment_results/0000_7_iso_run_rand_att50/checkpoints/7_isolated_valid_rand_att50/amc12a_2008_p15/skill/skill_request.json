{"request_0": {"request_name": "request_0", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma power_mod_cycle:\n  fixes a :: nat and n :: nat\n  assumes \"a > 0\"\n  shows \"((a^n) mod 10) = (a mod 10) ^ (n mod 4) mod 10\"", "update_count": 3}, "request_1": {"request_name": "request_1", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma units_digit_power:\n  fixes a :: nat and n :: nat\n  assumes \"a > 0\"\n  shows \"units_digit (a^n) = (a mod 10) ^ (n mod 4) mod 10\"", "update_count": 4}, "request_2": {"request_name": "request_2", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma mod_add:\n  fixes a b :: nat\n  shows \"(a + b) mod 10 = ((a mod 10) + (b mod 10)) mod 10\"", "update_count": 3}, "request_3": {"request_name": "request_3", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma mod_cycle:\n  fixes n :: nat\n  shows \"n mod 4 = 0 \u27f9 (2^n) mod 10 = 6\"", "update_count": 4}, "request_4": {"request_name": "request_4", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma square_mod:\n  fixes k :: nat\n  assumes \"k mod 10 = 0\"\n  shows \"k^2 mod 10 = 0\"", "update_count": 3}, "request_5": {"request_name": "request_5", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma combine_mod:\n  fixes a b :: nat\n  assumes \"a mod 10 = x\" \"b mod 10 = y\"\n  shows \"(a + b) mod 10 = (x + y) mod 10\"", "update_count": 4}, "request_6": {"request_name": "request_6", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma square_mod_10:\n  fixes n :: nat\n  shows \"(n mod 10)^2 mod 10 = (n^2 mod 10)\"", "update_count": 4}, "request_7": {"request_name": "request_7", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma mod_power_cycle:\n  fixes a :: nat\n  assumes \"a > 0\"\n  shows \"((a^n) mod m) = ((a^(n mod \u03c6(m))) mod m)\"", "update_count": 4}, "request_8": {"request_name": "request_8", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma mod_power_cycle:\n  fixes n :: nat\n  assumes \"n > 0\"\n  shows \"2^n mod 10 = (if n mod 4 = 1 then 2 else if n mod 4 = 2 then 4 else if n mod 4 = 3 then 8 else 6)\"", "update_count": 4}, "request_9": {"request_name": "request_9", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma mod_add:\n  fixes a b :: nat\n  shows \"(a mod 10 + b mod 10) mod 10 = (a + b) mod 10\"", "update_count": 3}, "request_10": {"request_name": "request_10", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma mod_2008_square:\n  shows \"2008^2 mod 10 = 4\"", "update_count": 3}, "request_11": {"request_name": "request_11", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma mod_2_power:\n  shows \"2^2008 mod 10 = 6\"", "update_count": 3}, "request_12": {"request_name": "request_12", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma combine_k_mod:\n  fixes k :: nat\n  assumes \"k = 2008^2 + 2^2008\"\n  shows \"k mod 10 = 0\"", "update_count": 3}, "request_13": {"request_name": "request_13", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma power_zero_mod:\n  shows \"2^0 mod 10 = 1\"", "update_count": 4}, "request_14": {"request_name": "request_14", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma mod_10_calculation:\n  fixes a :: nat\n  assumes \"a = 2008^2 + 2^2008\"\n  shows \"a mod 10 = (4 + 6) mod 10\"", "update_count": 3}, "request_15": {"request_name": "request_15", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma power_cycle_mod_10:\n  fixes n :: nat\n  shows \"n mod 4 = 0 \\<Longrightarrow> 2^n mod 10 = 6\"", "update_count": 3}, "request_16": {"request_name": "request_16", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma power2_mod_10:\n  fixes n :: nat\n  shows \"2^n mod 10 = (if n mod 4 = 0 then 6 else if n mod 4 = 1 then 2 else if n mod 4 = 2 then 4 else 8)\"", "update_count": 3}, "request_17": {"request_name": "request_17", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma power_modulo_cycle:\n  fixes a :: nat\n  assumes \"a > 0\"\n  shows \"(\\<forall>n. a^n mod 10 = (a mod 10)^n mod 10)\"", "update_count": 3}, "request_18": {"request_name": "request_18", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma units_digit_of_powers_of_2:\n  shows \"(\\<forall>n. 2^n mod 10 = (if n mod 4 = 0 then 6 else if n mod 4 = 1 then 2 else if n mod 4 = 2 then 4 else 8))\"", "update_count": 3}, "request_19": {"request_name": "request_19", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma units_digit_power_of_two:\n  fixes n :: nat\n  assumes \"n mod 4 = 0\"\n  shows \"2^n mod 10 = 6\"", "update_count": 3}, "request_20": {"request_name": "request_20", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma mod_10_calculation:\n  fixes a b :: nat\n  assumes \"a mod 10 = 4\" and \"b mod 10 = 6\"\n  shows \"(a + b) mod 10 = 0\"", "update_count": 3}, "request_21": {"request_name": "request_21", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma combine_mod_results:\n  fixes x y :: nat\n  assumes \"x mod 10 = 0\" and \"y mod 10 = 6\"\n  shows \"(x + y) mod 10 = 6\"", "update_count": 3}, "request_22": {"request_name": "request_22", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma power_mod_cycle:\n  fixes a :: nat and n :: nat\n  assumes \"a > 0\"\n  shows \"(\\<forall>k. (a^k) mod m = (a^(k mod cycle_length)) mod m)\"", "update_count": 3}, "request_23": {"request_name": "request_23", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma units_digit_power:\n  fixes a :: nat and n :: nat\n  assumes \"a > 0\"\n  shows \"units_digit (a^n) = units_digit (a^(n mod cycle_length))\"", "update_count": 3}, "request_24": {"request_name": "request_24", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma mod_add:\n  fixes a b c m :: nat\n  assumes \"a mod m = c\" \"b mod m = d\"\n  shows \"(a + b) mod m = (c + d) mod m\"", "update_count": 3}, "request_25": {"request_name": "request_25", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma power_mod:\n  fixes a :: nat\n  assumes \"n > 0\"\n  shows \"(a^n) mod m = (a mod m)^n mod m\"", "update_count": 3}, "request_26": {"request_name": "request_26", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma mod_square:\n  fixes a m :: nat\n  assumes \"a mod m = b\"\n  shows \"(a^2) mod m = (b^2) mod m\"", "update_count": 3}, "request_27": {"request_name": "request_27", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma modular_arithmetic:\n  fixes a b :: nat\n  assumes \"a mod n = b mod n\"\n  shows \"a \u2261 b (mod n)\"", "update_count": 3}, "request_28": {"request_name": "request_28", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma mod_power_cycle:\n  fixes a :: nat and n :: nat and m :: nat\n  assumes \"m > 0\"\n  shows \"(a ^ n) mod m = (a ^ (n mod (m - 1))) mod m\"", "update_count": 3}, "request_29": {"request_name": "request_29", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma mod_square:\n  fixes a m :: nat\n  shows \"(a^2) mod m = ((a mod m) ^ 2) mod m\"", "update_count": 3}, "request_30": {"request_name": "request_30", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma power_mod_cycle:\n  fixes a :: nat\n  assumes \"a > 0\"\n  shows \"(\\<forall>n. a^n mod m = a^(n mod k) mod m)\" for some cycle length k", "update_count": 3}, "request_31": {"request_name": "request_31", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma k_mod_10:\n  fixes k :: nat\n  assumes \"k = 2008^2 + 2^2008\"\n  shows \"k mod 10 = (2008^2 mod 10 + 2^2008 mod 10) mod 10\"", "update_count": 5}, "request_32": {"request_name": "request_32", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma power_mod:\n  fixes a b :: nat\n  assumes \"a mod m = 0\"\n  shows \"(a^b) mod m = 0\"", "update_count": 4}, "request_33": {"request_name": "request_33", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma units_digit_modulo:\n  fixes k :: nat\n  assumes \"k = 2008^2 + 2^2008\"\n  shows \"(k^2 + 2^k) mod 10 = 6\"", "update_count": 4}, "request_34": {"request_name": "request_34", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma units_digit_of_sum:\n  fixes x y :: nat\n  shows \"(x + y) mod 10 = ((x mod 10) + (y mod 10)) mod 10\"", "update_count": 3}, "request_35": {"request_name": "request_35", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma square_2008_mod_10:\n  shows \"2008^2 mod 10 = 4\"", "update_count": 3}, "request_36": {"request_name": "request_36", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma two_pow_2008_mod_10:\n  shows \"2^2008 mod 10 = 6\"", "update_count": 3}, "request_37": {"request_name": "request_37", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma k_mod_10:\n  shows \"((2008^2 + 2^2008) mod 10) = 0\"\n  using power_mod_cycle[of 2 2008] by auto", "update_count": 4}, "request_38": {"request_name": "request_38", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma units_digit_power_of_two:\n  fixes n :: nat\n  shows \"n mod 4 = 0 \u27f9 (2^n) mod 10 = 6\"\n  by (simp add: power_mod)", "update_count": 3}, "request_39": {"request_name": "request_39", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma units_digit_sum:\n  fixes a b :: nat\n  shows \"(a + b) mod 10 = (a mod 10 + b mod 10) mod 10\"\n  by (simp add: mod_add)", "update_count": 3}, "request_40": {"request_name": "request_40", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma last_digit_power_2:\n  fixes n :: nat\n  assumes \"n > 0\"\n  shows \"2^n mod 10 = (2^(n mod 4) mod 10)\"", "update_count": 3}, "request_41": {"request_name": "request_41", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma square_mod:\n  fixes x :: nat\n  shows \"(x^2) mod 10 = (x mod 10)^2 mod 10\"", "update_count": 3}, "request_42": {"request_name": "request_42", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma complex_expansion:\n  fixes a b c d :: complex\n  shows \"(a-d) * (a-c) * (a-b) = -(((a^2 - (b+c) * a) + c * b) * d) + (a^2 - (b+c) * a + c * b) * a)\"", "update_count": 2}, "request_43": {"request_name": "request_43", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma power_divisibility:\n  fixes n :: nat\n  assumes \"n > 0\"\n  shows \"2 dvd 4^n\"", "update_count": 3}, "request_44": {"request_name": "request_44", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma prime_condition:\n  fixes n :: nat\n  assumes \"n > 0\" and \"prime (n^2 - 3*n + 2)\"\n  shows \"n = 3\"", "update_count": 3}, "request_45": {"request_name": "request_45", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma power_mod_10:\n  fixes n :: nat\n  shows \"n mod 10 = (n mod 10) ^ (k mod 4) mod 10\"", "update_count": 3}, "request_46": {"request_name": "request_46", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma units_digit_modulo:\n  fixes a :: nat\n  assumes \"a mod 10 = b\"\n  shows \"a^2 mod 10 = (b^2 mod 10)\"", "update_count": 3}, "request_47": {"request_name": "request_47", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma powers_of_two_units_digit:\n  fixes n :: nat\n  shows \"n mod 4 = 0 \u27f9 (2^n) mod 10 = 6\"", "update_count": 3}, "request_48": {"request_name": "request_48", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma congruence_properties:\n  assumes \"a \u2261 b (mod m)\" and \"c \u2261 d (mod m)\"\n  shows \"(a + c) \u2261 (b + d) (mod m) \u2227 (a * c) \u2261 (b * d) (mod m)\"", "update_count": 4}, "request_49": {"request_name": "request_49", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma mod_k:\n  shows \"k mod 10 = 0\"", "update_count": 3}, "request_50": {"request_name": "request_50", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma mod_k_plus_2k:\n  shows \"(k^2 + 2^k) mod 10 = 1\"", "update_count": 3}, "request_51": {"request_name": "request_51", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma square_mod:\n  fixes a :: nat\n  shows \"(a mod 10)^2 mod 10 = (if a mod 10 = 0 then 0 else if a mod 10 = 1 then 1 else if a mod 10 = 2 then 4 else if a mod 10 = 3 then 9 else if a mod 10 = 4 then 6 else if a mod 10 = 5 then 5 else if a mod 10 = 6 then 6 else if a mod 10 = 7 then 9 else if a mod 10 = 8 then 4 else 1)\"", "update_count": 3}, "request_52": {"request_name": "request_52", "problem_name": "data/full_data/debug/valid_rand/amc12a_2008_p15.json", "formal_statement": "lemma power_cycle:\n  fixes a :: nat and n :: nat\n  assumes \"n > 0\"\n  shows \"(\\<forall>k. a^k mod n = a^(k mod m) mod n) \\<longrightarrow> (a^k mod n) = (a^(k mod m) mod n)\"", "update_count": 4}}