{"request_0": {"request_name": "request_0", "problem_name": "data/full_data/debug/valid_rand/numbertheory_sqmod4in01d.json", "formal_statement": "lemma mod_square:\n  fixes a :: int\n  shows \"(a mod 4 = 0) \\<Longrightarrow> (a^2 mod 4 = 0)\"", "update_count": 3}, "request_1": {"request_name": "request_1", "problem_name": "data/full_data/debug/valid_rand/numbertheory_sqmod4in01d.json", "formal_statement": "lemma mod_square_properties:\n  fixes a :: int\n  shows \"(a mod 4 = 0) \\<Longrightarrow> (a^2 mod 4 = 0)\"\n  and \"(a mod 4 = 1) \\<Longrightarrow> (a^2 mod 4 = 1)\"\n  and \"(a mod 4 = 2) \\<Longrightarrow> (a^2 mod 4 = 0)\"\n  and \"(a mod 4 = 3) \\<Longrightarrow> (a^2 mod 4 = 1)\"", "update_count": 3}, "request_2": {"request_name": "request_2", "problem_name": "data/full_data/debug/valid_rand/numbertheory_sqmod4in01d.json", "formal_statement": "lemma mod_equivalence:\n  fixes a b :: int\n  assumes \"a mod 4 = b mod 4\"\n  shows \"a^2 mod 4 = b^2 mod 4\"", "update_count": 3}, "request_3": {"request_name": "request_3", "problem_name": "data/full_data/debug/valid_rand/numbertheory_sqmod4in01d.json", "formal_statement": "lemma square_modulo_4_cases:\n  fixes a :: int\n  shows \"(a mod 4 = 0) \u27f9 (a^2 mod 4 = 0) \u2227 (a mod 4 = 1) \u27f9 (a^2 mod 4 = 1) \u2227 (a mod 4 = 2) \u27f9 (a^2 mod 4 = 0) \u2227 (a mod 4 = 3) \u27f9 (a^2 mod 4 = 1)\"", "update_count": 2}, "request_4": {"request_name": "request_4", "problem_name": "data/full_data/debug/valid_rand/numbertheory_sqmod4in01d.json", "formal_statement": "lemma case_analysis_modulo_4:\n  fixes a :: int\n  shows \"a mod 4 = 0 \u2228 a mod 4 = 1 \u2228 a mod 4 = 2 \u2228 a mod 4 = 3\"", "update_count": 3}, "request_5": {"request_name": "request_5", "problem_name": "data/full_data/debug/valid_rand/numbertheory_sqmod4in01d.json", "formal_statement": "lemma basic_arithmetic_mod:\n  fixes a b :: int\n  shows \"(a + b) mod m = ((a mod m) + (b mod m)) mod m\"", "update_count": 3}, "request_6": {"request_name": "request_6", "problem_name": "data/full_data/debug/valid_rand/numbertheory_sqmod4in01d.json", "formal_statement": "lemma substitute_and_solve:\n  fixes x y :: real\n  assumes \"x * (1 + y) = 5\" \"y + 1 / x = 29\"\n  shows \"y = 24 \\<and> x = 1 / 5\"", "update_count": 3}, "request_7": {"request_name": "request_7", "problem_name": "data/full_data/debug/valid_rand/numbertheory_sqmod4in01d.json", "formal_statement": "lemma rational_sum:\n  fixes p :: rat\n  assumes \"p = 1 / 4\"\n  shows \"let (m, n) = quotient_of p in m + n = 5\"", "update_count": 3}, "request_8": {"request_name": "request_8", "problem_name": "data/full_data/debug/valid_rand/numbertheory_sqmod4in01d.json", "formal_statement": "lemma cancel_div:\n  fixes x a b c:: real\n  assumes \"x > 0\" \"a + b / x = c\"\n  shows \"a * x + b = c * x\"", "update_count": 3}, "request_9": {"request_name": "request_9", "problem_name": "data/full_data/debug/valid_rand/numbertheory_sqmod4in01d.json", "formal_statement": "lemma mod4_cases:\n  fixes a :: int\n  shows \"a mod 4 = 0 \\<or> a mod 4 = 1 \\<or> a mod 4 = 2 \\<or> a mod 4 = 3\"\n  by auto\n\nlemma square_mod4:\n  fixes a :: int\n  shows \"(a mod 4 = 0) \\<Longrightarrow> (a^2 mod 4 = 0)\"\n  and \"(a mod 4 = 1) \\<Longrightarrow> (a^2 mod 4 = 1)\"\n  and \"(a mod 4 = 2) \\<Longrightarrow> (a^2 mod 4 = 0)\"\n  and \"(a mod 4 = 3) \\<Longrightarrow> (a^2 mod 4 = 1)\"\n  by (simp_all add: power2_eq_square)", "update_count": 0}}