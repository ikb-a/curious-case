{"cal_log_value": {"skill_name": "cal_log_value", "marker": "lemma cal_log_value:\n  assumes \"a > 0\" and \"a \u2260 1\" and \"b > 0\" and \"log a b = c\"\n  shows \"b = a ^ c\"\nby (metis assms(1) assms(2) assms(3) assms(4) powr_log_cancel powr_realpow)", "description": "This skill calculates the value of a number given its logarithm. It is a general mathematical property and can be used in any context where logarithms are involved. The skill takes four arguments: two real numbers 'a' and 'b' which are greater than 0 and 'a' is not equal to 1, and a real number 'c' which is the logarithm base 'a' of 'b'. It returns the value of 'b', which is equal to 'a' raised to the power 'c'.", "full_code": "lemma cal_log_value:\n  assumes \"a > 0\" and \"a \u2260 1\" and \"b > 0\" and \"log a b = c\"\n  shows \"b = a ^ c\"\nby (metis assms(1) assms(2) assms(3) assms(4) powr_log_cancel powr_realpow)", "origin": "", "update_count": 0}, "mod_add_power": {"skill_name": "mod_add_power", "marker": "lemma mod_add_power:\n  fixes x n a b c :: nat\n  assumes \"n > 0\" \"b > 0\" \"c > 0\" \"x mod n = a\"\n  shows \"((x + b)^c) mod n = ((a + b)^c) mod n\"\nproof -\n  have \"(x + b)^c mod n = ((x mod n) + b)^c mod n\"\n    by (smt (verit) mod_add_left_eq power_mod)\n  also have \"... = (a + b)^c mod n\"\n    using assms(4) by auto\n  finally show ?thesis by auto\nqed", "description": "This skill is a mathematical property that states that if `x mod n = a`, then the modulus of the power of `(x + b)` and `(a + b)` with respect to `n` are equal. This skill can be used in any context where the modulus of the power of two numbers is required.", "full_code": "lemma mod_add_power:\n  fixes x n a b c :: nat\n  assumes \"n > 0\" \"b > 0\" \"c > 0\" \"x mod n = a\"\n  shows \"((x + b)^c) mod n = ((a + b)^c) mod n\"\nproof -\n  have \"(x + b)^c mod n = ((x mod n) + b)^c mod n\"\n    by (smt (verit) mod_add_left_eq power_mod)\n  also have \"... = (a + b)^c mod n\"\n    using assms(4) by auto\n  finally show ?thesis by auto\nqed", "origin": "", "update_count": 0}, "cancle_div": {"skill_name": "cancle_div", "marker": "lemma cancle_div:\n  fixes x a b c:: real\n  assumes \"x > 0\" \"a + b / x = c\"\n  shows \"a * x + b = c * x\"\nproof -\n  have \"x * (a + b / x) = c * x\"\n    using assms(2) by auto\n  then have \"x * a + x * (b / x) = c * x\"\n    by (simp add: distrib_left)\n  then show ?thesis\n    using assms(1) by (simp add: mult.commute)\nqed", "description": "This skill is a mathematical property that can be used to simplify expressions involving division and multiplication. If you have an equation of the form \"a + b / x = c\" for some real numbers a, b, c, and x (where x > 0), you can use this skill to transform the equation into \"a * x + b = c * x\". This can be useful in many mathematical proofs where simplification of expressions is required.", "full_code": "lemma cancle_div:\n  fixes x a b c:: real\n  assumes \"x > 0\" \"a + b / x = c\"\n  shows \"a * x + b = c * x\"\nproof -\n  have \"x * (a + b / x) = c * x\"\n    using assms(2) by auto\n  then have \"x * a + x * (b / x) = c * x\"\n    by (simp add: distrib_left)\n  then show ?thesis\n    using assms(1) by (simp add: mult.commute)\nqed", "origin": "", "update_count": 0}, "multi_distrib_complex": {"skill_name": "multi_distrib_complex", "marker": "lemma multi_distrib_complex:\n  fixes a b c d :: complex\n  shows \"(a + b) * (c + d) = a * c + a * d + b * c + b * d\"\n  by (simp add: distrib_left distrib_right)", "description": "This skill is a generalization of the distributive property of multiplication over addition for complex numbers. It can be used in any context where the distributive property of multiplication over addition for complex numbers is needed. To use this skill, you need to provide four complex numbers a, b, c, and d. The skill will then prove that the product of the sum of a and b and the sum of c and d is equal to the sum of the products of each pair of complex numbers.", "full_code": "lemma multi_distrib_complex:\n  fixes a b c d :: complex\n  shows \"(a + b) * (c + d) = a * c + a * d + b * c + b * d\"\n  by (simp add: distrib_left distrib_right)", "origin": "", "update_count": 0}, "cal_log_exp_value": {"skill_name": "cal_log_exp_value", "marker": "lemma cal_log_exp_value:\n  fixes a :: real\n  assumes \"a > 0\" \"a \u2260 1\" \"n > 0\"\n  shows \"log a (a^n) = n\"\nproof -\n  have c0: \"log a a = 1\"\n    by (simp add: assms(1) assms(2))\n  have \"log a (a^n) = n * (log a a)\"\n    using log_nat_power[of a a n] by (simp add: assms(1))\n  then have c1: \"log a (a^n) = n\"\n    using c0 by simp\n  then show ?thesis \n    by (simp add: c1)\nqed", "description": "This skill calculates the logarithm of a number raised to a power. It is a general mathematical property and can be used in any context where logarithms are involved. The skill takes three arguments: a real number 'a' which is greater than 0 and not equal to 1, and a positive integer 'n'. It returns the logarithm base 'a' of 'a' raised to the power 'n', which is equal to 'n'.", "full_code": "lemma cal_log_exp_value:\n  fixes a :: real\n  assumes \"a > 0\" \"a \u2260 1\" \"n > 0\"\n  shows \"log a (a^n) = n\"\nproof -\n  have c0: \"log a a = 1\"\n    by (simp add: assms(1) assms(2))\n  have \"log a (a^n) = n * (log a a)\"\n    using log_nat_power[of a a n] by (simp add: assms(1))\n  then have c1: \"log a (a^n) = n\"\n    using c0 by simp\n  then show ?thesis \n    by (simp add: c1)\nqed", "origin": "", "update_count": 0}, "a_times_vera": {"skill_name": "a_times_vera", "marker": "lemma a_times_vera:\n  fixes a :: real\n  assumes \"a \u2260 0\"\n  shows \" a * (1 / a) = 1\"\n  by (simp add: assms)", "description": "This skill demonstrates the property of any non-zero real number that when it is multiplied by its reciprocal, the result is 1. This is a fundamental property of division and multiplication in the field of real numbers. This skill can be used in any context where this property needs to be proven or used.", "full_code": "lemma a_times_vera:\n  fixes a :: real\n  assumes \"a \u2260 0\"\n  shows \" a * (1 / a) = 1\"\n  by (simp add: assms)", "origin": "", "update_count": 0}, "nonzero_multiplicative_inverse": {"skill_name": "nonzero_multiplicative_inverse", "marker": "lemma nonzero_multiplicative_inverse:\n  fixes a :: real\n  assumes \"a \\<noteq> 0\"\n  shows \"a * (1 / a) = 1\"\nproof -\n  have \"a * (1 / a) = 1\" using assms by simp\n  thus ?thesis by simp\nqed", "description": "-", "full_code": "lemma nonzero_multiplicative_inverse:\n  fixes a :: real\n  assumes \"a \\<noteq> 0\"\n  shows \"a * (1 / a) = 1\"\nproof -\n  have \"a * (1 / a) = 1\" using assms by simp\n  thus ?thesis by simp\nqed", "origin": "a_times_vera", "update_count": 0}, "multiplicative_inverse_properties": {"skill_name": "multiplicative_inverse_properties", "marker": "lemma multiplicative_inverse_properties:\n  fixes a b :: real\n  assumes \"a \\<noteq> 0\" and \"b \\<noteq> 0\"\n  shows \"(1 / a) * (1 / b) = 1 / (a * b)\"\nproof -\n  have \"1 / a * 1 / b = 1 / (a * b)\" \n    by (simp add: field_simps)\n  thus ?thesis by simp\nqed", "description": "-", "full_code": "lemma multiplicative_inverse_properties:\n  fixes a b :: real\n  assumes \"a \\<noteq> 0\" and \"b \\<noteq> 0\"\n  shows \"(1 / a) * (1 / b) = 1 / (a * b)\"\nproof -\n  have \"1 / a * 1 / b = 1 / (a * b)\" \n    by (simp add: field_simps)\n  thus ?thesis by simp\nqed", "origin": "a_times_vera", "update_count": 0}, "nonzero_multiplicative_inverseV2": {"skill_name": "nonzero_multiplicative_inverseV2", "marker": "lemma nonzero_multiplicative_inverse:\n  fixes a :: real\n  assumes \"a \\<noteq> 0\"\n  shows \"a * (1 / a) = 1\"\n  by (simp add: assms)", "description": "-", "full_code": "lemma nonzero_multiplicative_inverse:\n  fixes a :: real\n  assumes \"a \\<noteq> 0\"\n  shows \"a * (1 / a) = 1\"\n  by (simp add: assms)", "origin": "a_times_vera", "update_count": 0}, "multiplicative_inverse_properties_multiple": {"skill_name": "multiplicative_inverse_properties_multiple", "marker": "lemma multiplicative_inverse_properties_multiple:\n  fixes a b c d :: real\n  assumes \"a \\<noteq> 0\" and \"b \\<noteq> 0\" and \"c \\<noteq> 0\" and \"d \\<noteq> 0\"\n  shows \"(1 / a) * (1 / b) * (1 / c) * (1 / d) = 1 / (a * b * c * d)\"\nproof -\n  have \"1 / a * 1 / b * 1 / c * 1 / d = (1 / a * 1 / b) * (1 / c * 1 / d)\"\n    by (simp add: field_simps)\n  also have \"... = (1 / (a * b)) * (1 / (c * d))\" \n    using assms by (simp add: field_simps)\n  also have \"... = 1 / ((a * b) * (c * d))\" by (simp add: field_simps)\n  finally show ?thesis by simp\nqed", "description": "-", "full_code": "lemma multiplicative_inverse_properties_multiple:\n  fixes a b c d :: real\n  assumes \"a \\<noteq> 0\" and \"b \\<noteq> 0\" and \"c \\<noteq> 0\" and \"d \\<noteq> 0\"\n  shows \"(1 / a) * (1 / b) * (1 / c) * (1 / d) = 1 / (a * b * c * d)\"\nproof -\n  have \"1 / a * 1 / b * 1 / c * 1 / d = (1 / a * 1 / b) * (1 / c * 1 / d)\"\n    by (simp add: field_simps)\n  also have \"... = (1 / (a * b)) * (1 / (c * d))\" \n    using assms by (simp add: field_simps)\n  also have \"... = 1 / ((a * b) * (c * d))\" by (simp add: field_simps)\n  finally show ?thesis by simp\nqed", "origin": "multiplicative_inverse_properties", "update_count": 0}, "multiplicative_inverse_sum_properties": {"skill_name": "multiplicative_inverse_sum_properties", "marker": "lemma multiplicative_inverse_sum_properties:\n  fixes a b :: real\n  assumes \"a \\<noteq> 0\" and \"b \\<noteq> 0\"\n  shows \"(1 / a + 1 / b) = (b + a) / (a * b)\"\nproof -\n  have \"1 / a + 1 / b = (b + a) / (a * b)\"\n    by (smt (verit) add_divide_distrib assms(1) assms(2) nonzero_divide_mult_cancel_left nonzero_divide_mult_cancel_right)\n  thus ?thesis by simp\nqed", "description": "-", "full_code": "lemma multiplicative_inverse_sum_properties:\n  fixes a b :: real\n  assumes \"a \\<noteq> 0\" and \"b \\<noteq> 0\"\n  shows \"(1 / a + 1 / b) = (b + a) / (a * b)\"\nproof -\n  have \"1 / a + 1 / b = (b + a) / (a * b)\"\n    by (smt (verit) add_divide_distrib assms(1) assms(2) nonzero_divide_mult_cancel_left nonzero_divide_mult_cancel_right)\n  thus ?thesis by simp\nqed", "origin": "multiplicative_inverse_properties", "update_count": 0}, "nonzero_division": {"skill_name": "nonzero_division", "marker": "lemma nonzero_division:\n  fixes a :: real\n  assumes \"a \\<noteq> 0\"\n  shows \"1 / a * a = 1\"\nproof -\n  have \"1 / a * a = (1 / a) * a\" by simp\n  then show ?thesis by (simp add: assms)\nqed", "description": "-", "full_code": "lemma nonzero_division:\n  fixes a :: real\n  assumes \"a \\<noteq> 0\"\n  shows \"1 / a * a = 1\"\nproof -\n  have \"1 / a * a = (1 / a) * a\" by simp\n  then show ?thesis by (simp add: assms)\nqed", "origin": "a_times_vera", "update_count": 0}, "non_zero_division": {"skill_name": "non_zero_division", "marker": "lemma non_zero_division:\n  fixes a :: real\n  assumes \"a \\<noteq> 0\"\n  shows \"1 / a * a = 1\"\nproof -\n  have \"1 / a * a = (1 * a) / a\" by simp\n  also have \"... = 1\" using assms by (simp add: field_simps)\n  finally show ?thesis .\nqed", "description": "-", "full_code": "lemma non_zero_division:\n  fixes a :: real\n  assumes \"a \\<noteq> 0\"\n  shows \"1 / a * a = 1\"\nproof -\n  have \"1 / a * a = (1 * a) / a\" by simp\n  also have \"... = 1\" using assms by (simp add: field_simps)\n  finally show ?thesis .\nqed", "origin": "a_times_vera", "update_count": 0}, "solve_linear_system": {"skill_name": "solve_linear_system", "marker": "lemma solve_linear_system:\n  fixes x e :: complex\n  assumes \"x + e = 7\" \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have eq1: \"e = 7 - x\" using assms(1) by (auto simp: field_simps)\n  have eq2: \"2 * x + (7 - x) = 3\" using eq1 assms(2) by simp\n  have \"2 * x + 7 - x = 3\" by (smt (verit) eq2 group_cancel.sub1)\n  have \"x + 7 = 3\" by (smt (verit) assms(1) assms(2) left_add_twice)\n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  hence \"x = -4\" by simp\n  then have \"e = 7 - (-4)\" using eq1 by simp\n  thus ?thesis by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_Bit0 numeral_eq_iff numeral_plus_numeral semiring_norm(7))\nqed", "description": "-", "full_code": "lemma solve_linear_system:\n  fixes x e :: complex\n  assumes \"x + e = 7\" \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have eq1: \"e = 7 - x\" using assms(1) by (auto simp: field_simps)\n  have eq2: \"2 * x + (7 - x) = 3\" using eq1 assms(2) by simp\n  have \"2 * x + 7 - x = 3\" by (smt (verit) eq2 group_cancel.sub1)\n  have \"x + 7 = 3\" by (smt (verit) assms(1) assms(2) left_add_twice)\n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  hence \"x = -4\" by simp\n  then have \"e = 7 - (-4)\" using eq1 by simp\n  thus ?thesis by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_Bit0 numeral_eq_iff numeral_plus_numeral semiring_norm(7))\nqed", "origin": "do_request", "update_count": 0}, "solve_linear_systemV2": {"skill_name": "solve_linear_systemV2", "marker": "lemma solve_linear_system:\n  fixes x e :: complex\n  assumes \"x + e = 7\" \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  from assms(1) have e: \"e = 7 - x\" by (auto simp: field_simps)\n  from assms(2) have \"2 * x + (7 - x) = 3\"\n    by (simp add: e)\n  then have \"2 * x + 7 - x = 3\" by simp\n  then have \"x + 7 = 3\" by (simp add: algebra_simps)\n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"x = -4\" by simp\n  from e have \"e = 7 - (-4)\" by (metis \\<open>x = - 4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed", "description": "-", "full_code": "lemma solve_linear_system:\n  fixes x e :: complex\n  assumes \"x + e = 7\" \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  from assms(1) have e: \"e = 7 - x\" by (auto simp: field_simps)\n  from assms(2) have \"2 * x + (7 - x) = 3\"\n    by (simp add: e)\n  then have \"2 * x + 7 - x = 3\" by simp\n  then have \"x + 7 = 3\" by (simp add: algebra_simps)\n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"x = -4\" by simp\n  from e have \"e = 7 - (-4)\" by (metis \\<open>x = - 4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed", "origin": "do_request", "update_count": 0}, "solve_linear_systemV3": {"skill_name": "solve_linear_systemV3", "marker": "lemma solve_linear_system:\n  fixes x e :: complex\n  assumes \"x + e = 7\" \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have \"e = 7 - x\" using assms(1) by (auto simp: field_simps)\n  then have \"2 * x + (7 - x) = 3\" using assms(2) by simp\n  then have \"2 * x + 7 - x = 3\" by simp\n  then have \"x + 7 = 3\" by simp\n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"x = -4\" by simp\n  then have \"e = 7 - (-4)\" using `x = -4` by (metis \\<open>e = 7 - x\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed", "description": "-", "full_code": "lemma solve_linear_system:\n  fixes x e :: complex\n  assumes \"x + e = 7\" \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have \"e = 7 - x\" using assms(1) by (auto simp: field_simps)\n  then have \"2 * x + (7 - x) = 3\" using assms(2) by simp\n  then have \"2 * x + 7 - x = 3\" by simp\n  then have \"x + 7 = 3\" by simp\n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"x = -4\" by simp\n  then have \"e = 7 - (-4)\" using `x = -4` by (metis \\<open>e = 7 - x\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed", "origin": "do_request", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e=11 \\<and> x= (-4)\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (7 - x) = 3\" using h1 eq1 by simp\n  have eq3: \"2 * x - x + 7 = 3\" using eq2 by simp\n  then have \"x + 7 = 3\" by simp \n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"x = -4\" by simp \n  from eq1 have \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed", "description": "", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e=11 \\<and> x= (-4)\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (7 - x) = 3\" using h1 eq1 by simp\n  have eq3: \"2 * x - x + 7 = 3\" using eq2 by simp\n  then have \"x + 7 = 3\" by simp \n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"x = -4\" by simp \n  from eq1 have \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed", "origin": "data/full_data/debug/valid_rand/algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4.json_v2", "update_count": -1}, "algebra_2varlinear_eq_xpeeq7_2xpeeq3_eeq11_xeqn4": {"skill_name": "algebra_2varlinear_eq_xpeeq7_2xpeeq3_eeq11_xeqn4", "marker": "theorem algebra_2varlinear_eq_xpeeq7_2xpeeq3_eeq11_xeqn4:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (7 - x) = 3\" using h1 eq1 by simp\n  have eq3: \"x + 7 = 3\" using eq2 by simp\n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff) \n  then have \"x = -4\" by simp \n  from eq1 have \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed", "description": "-", "full_code": "theorem algebra_2varlinear_eq_xpeeq7_2xpeeq3_eeq11_xeqn4:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (7 - x) = 3\" using h1 eq1 by simp\n  have eq3: \"x + 7 = 3\" using eq2 by simp\n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff) \n  then have \"x = -4\" by simp \n  from eq1 have \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlinear_eq_xpeeq7_2xpeeq3_eeq11_xeqn5": {"skill_name": "algebra_2varlinear_eq_xpeeq7_2xpeeq3_eeq11_xeqn5", "marker": "theorem algebra_2varlinear_eq_xpeeq7_2xpeeq3_eeq11_xeqn5:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e + 2 * x = 3\"\nproof -\n  have \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  then have \"e + 2 * x = (7 - x) + 2 * x\" by simp\n  then show ?thesis by (metis add.commute dbl_def dbl_inc_simps(3) dbl_simps(3) h1 mult_2)\nqed", "description": "-", "full_code": "theorem algebra_2varlinear_eq_xpeeq7_2xpeeq3_eeq11_xeqn5:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e + 2 * x = 3\"\nproof -\n  have \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  then have \"e + 2 * x = (7 - x) + 2 * x\" by simp\n  then show ?thesis by (metis add.commute dbl_def dbl_inc_simps(3) dbl_simps(3) h1 mult_2)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlinear_equations": {"skill_name": "algebra_2varlinear_equations", "marker": "lemma algebra_2varlinear_equations:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (7 - x) = 3\" using h1 eq1 by simp\n  have eq3: \"x + 7 = 3\" using eq2 by simp\n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel minus_equation_iff neg_numeral_neq_numeral numeral_times_minus_swap square_eq_iff uminus_add_conv_diff) \n  then have \"x = -4\" by simp \n  from eq1 have \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> algebra_2varlinear_eq_xpeeq7_2xpeeq3_eeq11_xeqn4 diff_minus_eq_add h0 h1)\nqed", "description": "-", "full_code": "theorem algebra_2varlinear_eq_xpeeq7_2xpeeq3_eeq11_xeqn4:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (7 - x) = 3\" using h1 eq1 by simp\n  have eq3: \"x + 7 = 3\" using eq2 by simp\n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff) \n  then have \"x = -4\" by simp \n  from eq1 have \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed\n\nlemma algebra_2varlinear_equations:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (7 - x) = 3\" using h1 eq1 by simp\n  have eq3: \"x + 7 = 3\" using eq2 by simp\n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel minus_equation_iff neg_numeral_neq_numeral numeral_times_minus_swap square_eq_iff uminus_add_conv_diff) \n  then have \"x = -4\" by simp \n  from eq1 have \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> algebra_2varlinear_eq_xpeeq7_2xpeeq3_eeq11_xeqn4 diff_minus_eq_add h0 h1)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_evolved": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_evolved", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_evolved:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (simp add: field_simps)\n  have eq2: \"2 * x + (7 - x) = 3\" using h1 eq1 by simp\n  have eq3: \"2 * x - x + 7 = 3\" using eq2 by simp\n  have \"x + 7 = 3\" using eq3 by simp \n  have \"x = 3 - 7\" by (metis \\<open>x + 7 = 3\\<close> add.commute add_diff_cancel dbl_inc_simps(3) h0)\n  then have \"x = -4\" by simp \n  from eq1 have \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = -4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_evolved:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (simp add: field_simps)\n  have eq2: \"2 * x + (7 - x) = 3\" using h1 eq1 by simp\n  have eq3: \"2 * x - x + 7 = 3\" using eq2 by simp\n  have \"x + 7 = 3\" using eq3 by simp \n  have \"x = 3 - 7\" by (metis \\<open>x + 7 = 3\\<close> add.commute add_diff_cancel dbl_inc_simps(3) h0)\n  then have \"x = -4\" by simp \n  from eq1 have \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = -4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_evolvedV2": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_evolvedV2", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_evolved:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + e = 3\" using h1 eq1 by simp\n  have eq3: \"2 * x + (7 - x) = 3\" using eq2 by (metis eq1)\n  have eq4: \"2 * x - x + 7 = 3\" using eq3 by simp\n  hence \"x + 7 = 3\" by simp \n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"x = -4\" by simp \n  from eq1 have \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_evolved:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + e = 3\" using h1 eq1 by simp\n  have eq3: \"2 * x + (7 - x) = 3\" using eq2 by (metis eq1)\n  have eq4: \"2 * x - x + 7 = 3\" using eq3 by simp\n  hence \"x + 7 = 3\" by simp \n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"x = -4\" by simp \n  from eq1 have \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_general": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_general", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_general:\n  fixes x e :: real\n  assumes h0 : \"x + e = a\"  \n    and h1 : \"2 * x + e = b\"  \n    and a: \"a = 7\"  \n    and b: \"b = 3\"  \n  shows \"e = a + 4 \\<and> x = -4\"  \nproof -\n  have eq1: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (a - x) = b\" using h1 eq1 by simp\n  have eq3: \"2 * x - x + a = b\" using eq2 by simp\n  then have \"x + a = b\" by simp \n  then have \"x = b - a\" using a b by simp\n  then have \"x = 3 - 7\" by (metis a b one_plus_BitM or_not_num_neg.simps(2)) \n  then have \"x = -4\" by simp \n  from eq1 have \"e = a - (-4)\" using \\<open>x = -4\\<close> by (metis)\n  then have \"e = a + 4\" by simp\n  then show \"e = a + 4 \\<and> x = -4\" by (metis \\<open>x = -4\\<close> add.commute)\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_general:\n  fixes x e :: real\n  assumes h0 : \"x + e = a\"  \n    and h1 : \"2 * x + e = b\"  \n    and a: \"a = 7\"  \n    and b: \"b = 3\"  \n  shows \"e = a + 4 \\<and> x = -4\"  \nproof -\n  have eq1: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (a - x) = b\" using h1 eq1 by simp\n  have eq3: \"2 * x - x + a = b\" using eq2 by simp\n  then have \"x + a = b\" by simp \n  then have \"x = b - a\" using a b by simp\n  then have \"x = 3 - 7\" by (metis a b one_plus_BitM or_not_num_neg.simps(2)) \n  then have \"x = -4\" by simp \n  from eq1 have \"e = a - (-4)\" using \\<open>x = -4\\<close> by (metis)\n  then have \"e = a + 4\" by simp\n  then show \"e = a + 4 \\<and> x = -4\" by (metis \\<open>x = -4\\<close> add.commute)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_evolvedV3": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_evolvedV3", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_evolved:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (7 - x) = 3\" using h1 eq1 by simp\n  have eq3: \"x + 7 = 3\" using eq2 by simp \n  hence \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq)\n  hence \"x = -4\" by simp \n  from eq1 have \"e = 7 - (-4)\" using \\<open>x = -4\\<close> by simp\n  hence \"e = 7 + 4\" by simp\n  thus \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_evolved:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (7 - x) = 3\" using h1 eq1 by simp\n  have eq3: \"x + 7 = 3\" using eq2 by simp \n  hence \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq)\n  hence \"x = -4\" by simp \n  from eq1 have \"e = 7 - (-4)\" using \\<open>x = -4\\<close> by simp\n  hence \"e = 7 + 4\" by simp\n  thus \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_n_var_linear_eq": {"skill_name": "algebra_n_var_linear_eq", "marker": "theorem algebra_n_var_linear_eq:\n  fixes x1 x2 e1 e2 :: complex\n  assumes h0 : \"x1 + e1 = c1\"\n    and h1 : \"x2 + e2 = c2\"\n    and h2 : \"a * x1 + b * e1 = d\"\n    and h3 : \"a * x2 + b * e2 = d\"\n  shows \"e1 = c1 - x1 \\<and> e2 = c2 - x2 \\<and> (a * (c1 - e1) + b * e1 = d) \\<and> (a * (c2 - e2) + b * e2 = d)\"\nproof -\n  have eq1: \"e1 = c1 - x1\" using h0 by (auto simp: field_simps)\n  have eq2: \"e2 = c2 - x2\" using h1 by (auto simp: field_simps)\n  have eq3: \"a * x1 + b * (c1 - x1) = d\" using h2 eq1 by simp\n  have eq4: \"a * x2 + b * (c2 - x2) = d\" using h3 eq2 by simp\n  show \"e1 = c1 - x1 \\<and> e2 = c2 - x2 \\<and> (a * (c1 - e1) + b * e1 = d) \\<and> (a * (c2 - e2) + b * e2 = d)\"\n    using eq1 eq2 eq3 eq4 by auto\nqed", "description": "-", "full_code": "theorem algebra_n_var_linear_eq:\n  fixes x1 x2 e1 e2 :: complex\n  assumes h0 : \"x1 + e1 = c1\"\n    and h1 : \"x2 + e2 = c2\"\n    and h2 : \"a * x1 + b * e1 = d\"\n    and h3 : \"a * x2 + b * e2 = d\"\n  shows \"e1 = c1 - x1 \\<and> e2 = c2 - x2 \\<and> (a * (c1 - e1) + b * e1 = d) \\<and> (a * (c2 - e2) + b * e2 = d)\"\nproof -\n  have eq1: \"e1 = c1 - x1\" using h0 by (auto simp: field_simps)\n  have eq2: \"e2 = c2 - x2\" using h1 by (auto simp: field_simps)\n  have eq3: \"a * x1 + b * (c1 - x1) = d\" using h2 eq1 by simp\n  have eq4: \"a * x2 + b * (c2 - x2) = d\" using h3 eq2 by simp\n  show \"e1 = c1 - x1 \\<and> e2 = c2 - x2 \\<and> (a * (c1 - e1) + b * e1 = d) \\<and> (a * (c2 - e2) + b * e2 = d)\"\n    using eq1 eq2 eq3 eq4 by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_nvar_linear_eq": {"skill_name": "algebra_nvar_linear_eq", "marker": "theorem algebra_nvar_linear_eq:\n  fixes x :: \"complex\" and e :: \"complex\"\n  assumes \"n > 0\" \"k > 0\" \"A = {i. i < n}\" \"B = {j. j < k}\"\n  assumes h0: \"x + e = 7\"\n      and h1: \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = (-4)\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (7 - x) = 3\" using h1 eq1 by simp\n  have eq3: \"2 * x - x + 7 = 3\" using eq2 by simp\n  then have \"x + 7 = 3\" by simp \n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"x = -4\" by simp \n  from eq1 have \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed", "description": "-", "full_code": "theorem algebra_nvar_linear_eq:\n  fixes x :: \"complex\" and e :: \"complex\"\n  assumes \"n > 0\" \"k > 0\" \"A = {i. i < n}\" \"B = {j. j < k}\"\n  assumes h0: \"x + e = 7\"\n      and h1: \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = (-4)\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (7 - x) = 3\" using h1 eq1 by simp\n  have eq3: \"2 * x - x + 7 = 3\" using eq2 by simp\n  then have \"x + 7 = 3\" by simp \n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"x = -4\" by simp \n  from eq1 have \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "substitute_in_linear_eq": {"skill_name": "substitute_in_linear_eq", "marker": "lemma substitute_in_linear_eq:\n  fixes x e :: real\n  assumes h0: \"x + e = a\"\n    and h1: \"2 * x + e = b\"\n  shows \"e = a - x \\<and> x = (b - a) / 1\"\nproof -\n  have eq1: \"e = a - x\" using h0 by (simp add: field_simps)\n  have eq2: \"2 * x + (a - x) = b\" using h1 eq1 by simp\n  then have \"x + a = b\" by (simp add: field_simps)\n  then show ?thesis using eq1 by auto\nqed", "description": "-", "full_code": "lemma substitute_in_linear_eq:\n  fixes x e :: real\n  assumes h0: \"x + e = a\"\n    and h1: \"2 * x + e = b\"\n  shows \"e = a - x \\<and> x = (b - a) / 1\"\nproof -\n  have eq1: \"e = a - x\" using h0 by (simp add: field_simps)\n  have eq2: \"2 * x + (a - x) = b\" using h1 eq1 by simp\n  then have \"x + a = b\" by (simp add: field_simps)\n  then show ?thesis using eq1 by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq": {"skill_name": "algebra_2varlineareq", "marker": "theorem algebra_2varlineareq:\n  fixes x e :: real\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  then have \"2 * x + (7 - x) = 3\" using h1 by simp\n  then have \"x + 7 = 3\" by (simp add: field_simps)\n  then have \"x = 3 - 7\" by (simp)\n  then have \"x = -4\" by simp\n  then show \"e = 11 \\<and> x = -4\" using `e = 7 - x` by (simp add: `x = -4`)\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq:\n  fixes x e :: real\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  then have \"2 * x + (7 - x) = 3\" using h1 by simp\n  then have \"x + 7 = 3\" by (simp add: field_simps)\n  then have \"x = 3 - 7\" by (simp)\n  then have \"x = -4\" by simp\n  then show \"e = 11 \\<and> x = -4\" using `e = 7 - x` by (simp add: `x = -4`)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "linear_combination": {"skill_name": "linear_combination", "marker": "lemma linear_combination:\n  fixes a b :: real\n  assumes h0: \"a + b = c\"\n  shows \"b = c - a\"\nproof -\n  show ?thesis using h0 by (simp add: field_simps)\nqed", "description": "-", "full_code": "lemma linear_combination:\n  fixes a b :: real\n  assumes h0: \"a + b = c\"\n  shows \"b = c - a\"\nproof -\n  show ?thesis using h0 by (simp add: field_simps)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "absolute_value_inequality": {"skill_name": "absolute_value_inequality", "marker": "theorem absolute_value_inequality:\n  fixes a b c :: real\n  assumes h0: \"abs(a - b) < c\"\n  shows \"b - c < a \\<and> a < b + c\"\nproof -\n  have \"a - b < c\" and \"-(a - b) < c\" using assms by auto\n  then show ?thesis by (auto simp: add.commute)\nqed", "description": "-", "full_code": "theorem absolute_value_inequality:\n  fixes a b c :: real\n  assumes h0: \"abs(a - b) < c\"\n  shows \"b - c < a \\<and> a < b + c\"\nproof -\n  have \"a - b < c\" and \"-(a - b) < c\" using assms by auto\n  then show ?thesis by (auto simp: add.commute)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeqc_eeq11_xeqn4": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeqc_eeq11_xeqn4", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeqc_eeq11_xeqn4:\n  fixes x e c :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = c\"\n  shows \"e = 7 - x \\<and> x + 7 = c\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (7 - x) = c\" using h1 eq1 by simp\n  have eq3: \"x + 7 = c\" using eq2 by (simp add: field_simps)\n  thus \"e = 7 - x \\<and> x + 7 = c\" by (simp add: eq1 eq3)\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeqc_eeq11_xeqn4:\n  fixes x e c :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = c\"\n  shows \"e = 7 - x \\<and> x + 7 = c\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (7 - x) = c\" using h1 eq1 by simp\n  have eq3: \"x + 7 = c\" using eq2 by (simp add: field_simps)\n  thus \"e = 7 - x \\<and> x + 7 = c\" by (simp add: eq1 eq3)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v3": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v3", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v3:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = (-4)\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"e = 3 - 2 * x\" using h1 by (auto simp: field_simps)\n  have \"7 - x = 3 - 2 * x\" using eq1 eq2 by simp\n  then have \"x + 7 = 3\" by (auto simp: field_simps)\n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral)\n  then have \"x = -4\" by simp \n  from eq1 have \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v2 diff_minus_eq_add h0 h1)\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v2:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = (-4)\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (7 - x) = 3\" using h1 eq1 by simp\n  have eq3: \"2 * x - x + 7 = 3\" using eq2 by simp\n  have \"x + 7 = 3\" using eq3 by simp \n  have \"x = 3 - 7\" by (metis \\<open>x + 7 = 3\\<close> add.commute add_diff_cancel dbl_inc_simps(3) h0)\n  then have \"x = -4\" by simp \n  from eq1 have \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed\n\ntheorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v3:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = (-4)\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"e = 3 - 2 * x\" using h1 by (auto simp: field_simps)\n  have \"7 - x = 3 - 2 * x\" using eq1 eq2 by simp\n  then have \"x + 7 = 3\" by (auto simp: field_simps)\n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral)\n  then have \"x = -4\" by simp \n  from eq1 have \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v2 diff_minus_eq_add h0 h1)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v3V2": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v3V2", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v3:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + e = 3\" using h1 by simp\n  have \"2 * x + (7 - x) = 3\" using eq1 eq2 by simp\n  have \"x + 7 = 3\" by (smt (verit) h0 h1 left_add_twice)\n  then have \"x = -4\" by (metis add.commute add_minus_cancel algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v2 diff_add_eq diff_minus_eq_add mult.commute mult_2_right verit_minus_simplify(4)) \n  from eq1 have \"e = 7 - (-4)\" using \\<open>x = -4\\<close> by auto\n  then have \"e = 7 + 4\" by simp\n  thus \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v2 diff_minus_eq_add h0 h1)\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v2:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (7 - x) = 3\" using h1 eq1 by simp\n  have eq3: \"x + 7 = 3\" using eq2 by (simp add: algebra_simps)\n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  then have \"x = -4\" by simp \n  from eq1 have \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed\n\ntheorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v3:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + e = 3\" using h1 by simp\n  have \"2 * x + (7 - x) = 3\" using eq1 eq2 by simp\n  have \"x + 7 = 3\" by (smt (verit) h0 h1 left_add_twice)\n  then have \"x = -4\" by (metis add.commute add_minus_cancel algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v2 diff_add_eq diff_minus_eq_add mult.commute mult_2_right verit_minus_simplify(4)) \n  from eq1 have \"e = 7 - (-4)\" using \\<open>x = -4\\<close> by auto\n  then have \"e = 7 + 4\" by simp\n  thus \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v2 diff_minus_eq_add h0 h1)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v4": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v4", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v4:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have \"2 * x + (7 - x) = 3\" using h1 by (metis \\<open>e = 7 - x\\<close>)\n  then have \"x + 7 = 3\" by (simp add: algebra_simps)\n  then have \"x = -4\" by (metis add.commute add_minus_cancel algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v3 diff_add_eq diff_minus_eq_add mult.commute mult_2_right verit_minus_simplify(4)) \n  then have \"e = 7 - (-4)\" by (metis \\<open>e = 7 - x\\<close>)\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v3 diff_minus_eq_add h0 h1)\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v2:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (7 - x) = 3\" using h1 eq1 by simp\n  have eq3: \"x + 7 = 3\" using eq2 by (simp add: algebra_simps)\n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  then have \"x = -4\" by simp \n  from eq1 have \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed\n\ntheorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v3:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + e = 3\" using h1 by simp\n  have \"2 * x + (7 - x) = 3\" using eq1 eq2 by simp\n  have \"x + 7 = 3\" by (smt (verit) h0 h1 left_add_twice)\n  then have \"x = -4\" by (metis add.commute add_minus_cancel algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v2 diff_add_eq diff_minus_eq_add mult.commute mult_2_right verit_minus_simplify(4)) \n  from eq1 have \"e = 7 - (-4)\" using \\<open>x = -4\\<close> by auto\n  then have \"e = 7 + 4\" by simp\n  thus \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v2 diff_minus_eq_add h0 h1)\nqed\n\ntheorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v4:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have \"2 * x + (7 - x) = 3\" using h1 by (metis \\<open>e = 7 - x\\<close>)\n  then have \"x + 7 = 3\" by (simp add: algebra_simps)\n  then have \"x = -4\" by (metis add.commute add_minus_cancel algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v3 diff_add_eq diff_minus_eq_add mult.commute mult_2_right verit_minus_simplify(4)) \n  then have \"e = 7 - (-4)\" by (metis \\<open>e = 7 - x\\<close>)\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v3 diff_minus_eq_add h0 h1)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_equality": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_equality", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_equality:\n  fixes x e :: real\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by simp\n  have eq2: \"2 * x + (7 - x) = 3\" using h1 eq1 by simp\n  have eq3: \"2 * x - x + 7 = 3\" using eq2 by simp\n  then have \"x + 7 = 3\" by simp \n  then have \"x = 3 - 7\" by simp \n  then have \"x = -4\" by simp \n  from eq1 have \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (smt (verit) \\<open>x = - 4\\<close>)\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_equality:\n  fixes x e :: real\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by simp\n  have eq2: \"2 * x + (7 - x) = 3\" using h1 eq1 by simp\n  have eq3: \"2 * x - x + 7 = 3\" using eq2 by simp\n  then have \"x + 7 = 3\" by simp \n  then have \"x = 3 - 7\" by simp \n  then have \"x = -4\" by simp \n  from eq1 have \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (smt (verit) \\<open>x = - 4\\<close>)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "linear_combination_unique_solution": {"skill_name": "linear_combination_unique_solution", "marker": "lemma linear_combination_unique_solution:\n  fixes a b c d :: real\n  assumes h0 : \"a + b = 7\"\n    and h1 : \"2 * a + b = 3\"\n  shows \"b = 11 \\<and> a = -4\"\nproof -\n  have eq1: \"b = 7 - a\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * a + (7 - a) = 3\" using h1 eq1 by simp\n  have eq3: \"a + 7 = 3\" by (metis dbl_def dbl_inc_simps(3) dbl_simps(3) h0 h1 left_add_twice mult_2)\n  then have \"a = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"a = -4\" by simp \n  from eq1 have \"b = 7 - (-4)\" by (metis \\<open>a = -4\\<close>)\n  then have \"b = 7 + 4\" by simp\n  then show \"b = 11 \\<and> a = -4\" by (smt (verit) \\<open>a = - 4\\<close>)\nqed", "description": "-", "full_code": "lemma linear_combination_unique_solution:\n  fixes a b c d :: real\n  assumes h0 : \"a + b = 7\"\n    and h1 : \"2 * a + b = 3\"\n  shows \"b = 11 \\<and> a = -4\"\nproof -\n  have eq1: \"b = 7 - a\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * a + (7 - a) = 3\" using h1 eq1 by simp\n  have eq3: \"a + 7 = 3\" by (metis dbl_def dbl_inc_simps(3) dbl_simps(3) h0 h1 left_add_twice mult_2)\n  then have \"a = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"a = -4\" by simp \n  from eq1 have \"b = 7 - (-4)\" by (metis \\<open>a = -4\\<close>)\n  then have \"b = 7 + 4\" by simp\n  then show \"b = 11 \\<and> a = -4\" by (smt (verit) \\<open>a = - 4\\<close>)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v2": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v2", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v2:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  let ?e = \"7 - x\"  \n  have eq1: \"?e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + ?e = 3\" using h1 eq1 by (metis add_diff_eq add_minus_cancel h0 one_plus_BitM or_not_num_neg.simps(2) uminus_add_conv_diff)\n  have eq3: \"2 * x + (7 - x) = 3\" using eq2 by simp\n  have eq4: \"x + 7 = 3\" using eq3 by simp\n  have \"x = 3 - 7\" using eq4 by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"x = -4\" by simp\n  from eq1 have \"?e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"?e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add_minus_cancel h0 numeral_Bit0 numeral_eq_iff numeral_plus_numeral semiring_norm(7) uminus_add_conv_diff)\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v2:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  let ?e = \"7 - x\"  \n  have eq1: \"?e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + ?e = 3\" using h1 eq1 by (metis add_diff_eq add_minus_cancel h0 one_plus_BitM or_not_num_neg.simps(2) uminus_add_conv_diff)\n  have eq3: \"2 * x + (7 - x) = 3\" using eq2 by simp\n  have eq4: \"x + 7 = 3\" using eq3 by simp\n  have \"x = 3 - 7\" using eq4 by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"x = -4\" by simp\n  from eq1 have \"?e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"?e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add_minus_cancel h0 numeral_Bit0 numeral_eq_iff numeral_plus_numeral semiring_norm(7) uminus_add_conv_diff)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "absolute_value_inequalityV2": {"skill_name": "absolute_value_inequalityV2", "marker": "lemma absolute_value_inequality:\n  fixes a b c :: real\n  assumes h0: \"abs(a - b) < c\"\n  shows \"b - c < a \\<and> a < b + c\"\nproof -\n  have \"a - b < c\" and \"-(a - b) < c\" using h0 by auto\n  then have \"b - c < a\" and \"a < b + c\" by auto\n  then show ?thesis by auto\nqed", "description": "-", "full_code": "lemma absolute_value_inequality:\n  fixes a b c :: real\n  assumes h0: \"abs(a - b) < c\"\n  shows \"b - c < a \\<and> a < b + c\"\nproof -\n  have \"a - b < c\" and \"-(a - b) < c\" using h0 by auto\n  then have \"b - c < a\" and \"a < b + c\" by auto\n  then show ?thesis by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareqV2": {"skill_name": "algebra_2varlineareqV2", "marker": "theorem algebra_2varlineareq:\n  fixes x e :: complex\n  assumes h0 : \"x + e = a\"\n    and h1 : \"2 * x + e = b\"\n  shows \"e = a - x \\<and> x = (b - a) / 1\"\nproof -\n  have eq1: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (a - x) = b\" using h1 eq1 by simp\n  have eq3: \"2 * x - x + a = b\" using eq2 by simp\n  then have \"x + a = b\" by simp \n  then have \"x = b - a\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  then show \"e = a - x \\<and> x = (b - a) / 1\" by (metis div_by_1 eq1)\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq:\n  fixes x e :: complex\n  assumes h0 : \"x + e = a\"\n    and h1 : \"2 * x + e = b\"\n  shows \"e = a - x \\<and> x = (b - a) / 1\"\nproof -\n  have eq1: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (a - x) = b\" using h1 eq1 by simp\n  have eq3: \"2 * x - x + a = b\" using eq2 by simp\n  then have \"x + a = b\" by simp \n  then have \"x = b - a\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  then show \"e = a - x \\<and> x = (b - a) / 1\" by (metis div_by_1 eq1)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareqV3": {"skill_name": "algebra_2varlineareqV3", "marker": "theorem algebra_2varlineareq:\n  fixes x e :: complex\n  assumes h0 : \"x + e = a\"\n    and h1 : \"2 * x + e = b\"\n  shows \"e = a - x \\<and> x = (b - a)/1\"\nproof -\n  have eq1: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (a - x) = b\" using h1 eq1 by simp\n  have eq3: \"x + a = b\" using eq2 by simp \n  then have \"x = b - a\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  from eq1 have \"e = a - (b - a)\" by (metis \\<open>x = b - a\\<close>)\n  then show \"e = a - x \\<and> x = (b - a)/1\" by (metis \\<open>x = b - a\\<close> div_by_1 eq1)\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq:\n  fixes x e :: complex\n  assumes h0 : \"x + e = a\"\n    and h1 : \"2 * x + e = b\"\n  shows \"e = a - x \\<and> x = (b - a)/1\"\nproof -\n  have eq1: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (a - x) = b\" using h1 eq1 by simp\n  have eq3: \"x + a = b\" using eq2 by simp \n  then have \"x = b - a\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  from eq1 have \"e = a - (b - a)\" by (metis \\<open>x = b - a\\<close>)\n  then show \"e = a - x \\<and> x = (b - a)/1\" by (metis \\<open>x = b - a\\<close> div_by_1 eq1)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_extended": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_extended", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_extended:\n  fixes x e :: complex\n  assumes h0 : \"x + e = c\"\n    and h1 : \"2 * x + e = d\"\n  shows \"e = c - x \\<and> x = (d - c)/(2 - 1)\"\nproof -\n  have eq1: \"e = c - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (c - x) = d\" using h1 eq1 by simp\n  have eq3: \"x + c = d\" using eq2 by simp\n  then have \"x = d - c\" by (metis add.commute add_diff_cancel)\n  from eq1 have \"e = c - (d - c)\" by (metis \\<open>x = d - c\\<close>)\n  then have \"e = 2*c - d\" by simp\n  thus \"e = c - x \\<and> x = (d - c)/(2 - 1)\" by (metis \\<open>x = d - c\\<close> div_by_1 eq1 eq_diff_eq one_add_one)\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_extended:\n  fixes x e :: complex\n  assumes h0 : \"x + e = c\"\n    and h1 : \"2 * x + e = d\"\n  shows \"e = c - x \\<and> x = (d - c)/(2 - 1)\"\nproof -\n  have eq1: \"e = c - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (c - x) = d\" using h1 eq1 by simp\n  have eq3: \"x + c = d\" using eq2 by simp\n  then have \"x = d - c\" by (metis add.commute add_diff_cancel)\n  from eq1 have \"e = c - (d - c)\" by (metis \\<open>x = d - c\\<close>)\n  then have \"e = 2*c - d\" by simp\n  thus \"e = c - x \\<and> x = (d - c)/(2 - 1)\" by (metis \\<open>x = d - c\\<close> div_by_1 eq1 eq_diff_eq one_add_one)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_extendedV2": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_extendedV2", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_extended:\n  fixes x e :: complex\n  assumes h0 : \"x + e = c\" \n    and h1 : \"2 * x + e = d\"\n  shows \"e = c - x \\<and> x = (d - c) / 1\"\nproof -\n  have eq1: \"e = c - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (c - x) = d\" using h1 eq1 by simp\n  have eq3: \"x + c = d\" using eq2 by simp\n  then have \"x = d - c\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  from eq1 have \"e = c - (d - c)\" by (metis \\<open>x = d - c\\<close>)\n  then have \"e = 2*c - d\" by simp\n  then show \"e = c - x \\<and> x = (d - c) / 1\" by (metis \\<open>x = d - c\\<close> div_by_1 eq1)\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_extended:\n  fixes x e :: complex\n  assumes h0 : \"x + e = c\" \n    and h1 : \"2 * x + e = d\"\n  shows \"e = c - x \\<and> x = (d - c) / 1\"\nproof -\n  have eq1: \"e = c - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (c - x) = d\" using h1 eq1 by simp\n  have eq3: \"x + c = d\" using eq2 by simp\n  then have \"x = d - c\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  from eq1 have \"e = c - (d - c)\" by (metis \\<open>x = d - c\\<close>)\n  then have \"e = 2*c - d\" by simp\n  then show \"e = c - x \\<and> x = (d - c) / 1\" by (metis \\<open>x = d - c\\<close> div_by_1 eq1)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2var_linear_eq_x_plus_e_eq_7_2x_plus_e_eq_3": {"skill_name": "algebra_2var_linear_eq_x_plus_e_eq_7_2x_plus_e_eq_3", "marker": "theorem algebra_2var_linear_eq_x_plus_e_eq_7_2x_plus_e_eq_3:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (simp add: field_simps)\n  have eq2: \"2 * x + (7 - x) = 3\" using h1 eq1 by simp\n  have eq3: \"2 * x - x + 7 = 3\" using eq2 by simp\n  then have \"x + 7 = 3\" by simp \n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"x = -4\" by simp \n  from eq1 have \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed", "description": "-", "full_code": "theorem algebra_2var_linear_eq_x_plus_e_eq_7_2x_plus_e_eq_3:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (simp add: field_simps)\n  have eq2: \"2 * x + (7 - x) = 3\" using h1 eq1 by simp\n  have eq3: \"2 * x - x + 7 = 3\" using eq2 by simp\n  then have \"x + 7 = 3\" by simp \n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"x = -4\" by simp \n  from eq1 have \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "double_equation": {"skill_name": "double_equation", "marker": "lemma double_equation:\n  fixes x e :: complex\n  assumes \"x + e = a\" \"2 * x + e = b\"\n  shows \"e = (2 * a - b) \\<and> x = (b - a) / 1\"\nproof -\n  have eq1: \"e = a - x\" using assms(1) by (simp add: field_simps)\n  have eq2: \"2 * x + (a - x) = b\" using assms(2) eq1 by simp\n  have eq3: \"2 * x - x + a = b\" using eq2 by simp\n  then have \"x + a = b\" by simp\n  then have \"x = b - a\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"e = a - (b - a)\" using eq1 by (metis \\<open>x = b - a\\<close>)\n  then show ?thesis by (metis \\<open>x = b - a\\<close> diff_diff_eq2 div_by_1 mult.commute mult_2_right)\nqed", "description": "-", "full_code": "lemma double_equation:\n  fixes x e :: complex\n  assumes \"x + e = a\" \"2 * x + e = b\"\n  shows \"e = (2 * a - b) \\<and> x = (b - a) / 1\"\nproof -\n  have eq1: \"e = a - x\" using assms(1) by (simp add: field_simps)\n  have eq2: \"2 * x + (a - x) = b\" using assms(2) eq1 by simp\n  have eq3: \"2 * x - x + a = b\" using eq2 by simp\n  then have \"x + a = b\" by simp\n  then have \"x = b - a\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"e = a - (b - a)\" using eq1 by (metis \\<open>x = b - a\\<close>)\n  then show ?thesis by (metis \\<open>x = b - a\\<close> diff_diff_eq2 div_by_1 mult.commute mult_2_right)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v2V2": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v2V2", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v2:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e=11 \\<and> x= (-4)\"\nproof -\n  obtain e' where eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  obtain eq2: \"2 * x + (7 - x) = 3\" using h1 eq1 by simp\n  obtain eq3: \"x + 7 = 3\" using eq2 by (simp add: algebra_simps)\n  have \"x + 7 = 3\" by (metis eq3)\n  then have \"x = 3 - 7\" by (metis \\<open>\\<And>thesis. (x + 7 = 3 \\<Longrightarrow> thesis) \\<Longrightarrow> thesis\\<close> add.commute add_diff_cancel_right' diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"x = -4\" by simp \n  from eq1 obtain e_value where \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v2:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e=11 \\<and> x= (-4)\"\nproof -\n  obtain e' where eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  obtain eq2: \"2 * x + (7 - x) = 3\" using h1 eq1 by simp\n  obtain eq3: \"x + 7 = 3\" using eq2 by (simp add: algebra_simps)\n  have \"x + 7 = 3\" by (metis eq3)\n  then have \"x = 3 - 7\" by (metis \\<open>\\<And>thesis. (x + 7 = 3 \\<Longrightarrow> thesis) \\<Longrightarrow> thesis\\<close> add.commute add_diff_cancel_right' diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"x = -4\" by simp \n  from eq1 obtain e_value where \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v3V3": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v3V3", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v3:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<longleftrightarrow> x = -4\"\nproof -\n  have \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have \"2 * x + (7 - x) = 3\" using h1 by (metis \\<open>e = 7 - x\\<close>)\n  hence \"x + 7 = 3\" by (simp add: algebra_simps)\n  thus \"e = 11 \\<longleftrightarrow> x = -4\" \n    by (smt (verit) algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v2 h0 h1)\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v2:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e=11 \\<and> x= (-4)\"\nproof -\n  obtain e' where eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  obtain eq2: \"2 * x + (7 - x) = 3\" using h1 eq1 by simp\n  obtain eq3: \"x + 7 = 3\" using eq2 by (simp add: algebra_simps)\n  have \"x + 7 = 3\" by (metis eq3)\n  then have \"x = 3 - 7\" by (metis \\<open>\\<And>thesis. (x + 7 = 3 \\<Longrightarrow> thesis) \\<Longrightarrow> thesis\\<close> add.commute add_diff_cancel_right' diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"x = -4\" by simp \n  from eq1 obtain e_value where \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed\n\ntheorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v3:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<longleftrightarrow> x = -4\"\nproof -\n  have \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have \"2 * x + (7 - x) = 3\" using h1 by (metis \\<open>e = 7 - x\\<close>)\n  hence \"x + 7 = 3\" by (simp add: algebra_simps)\n  thus \"e = 11 \\<longleftrightarrow> x = -4\" \n    by (smt (verit) algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v2 h0 h1)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4V2": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4V2", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + e = 3\" using h1 eq1 by simp\n  have eq3: \"2 * x + (7 - x) = 3\" using eq2 by (metis eq1)\n  have \"2 * x - x + 7 = 3\" using eq3 by simp\n  hence \"x + 7 = 3\" by simp \n  hence \"x = 3 - 7\" by (metis \\<open>2 * x - x + 7 = 3\\<close> add.commute add_diff_cancel add_minus_cancel diff_add_eq group_cancel.add2 group_cancel.sub1 minus_add_cancel mult.commute mult_2_right numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  hence \"x = -4\" by simp \n  from eq1 have \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  hence \"e = 7 + 4\" by simp\n  thus \"e = 11 \\<and> x = -4\" by (simp add: \\<open>x = -4\\<close>)\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + e = 3\" using h1 eq1 by simp\n  have eq3: \"2 * x + (7 - x) = 3\" using eq2 by (metis eq1)\n  have \"2 * x - x + 7 = 3\" using eq3 by simp\n  hence \"x + 7 = 3\" by simp \n  hence \"x = 3 - 7\" by (metis \\<open>2 * x - x + 7 = 3\\<close> add.commute add_diff_cancel add_minus_cancel diff_add_eq group_cancel.add2 group_cancel.sub1 minus_add_cancel mult.commute mult_2_right numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  hence \"x = -4\" by simp \n  from eq1 have \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  hence \"e = 7 + 4\" by simp\n  thus \"e = 11 \\<and> x = -4\" by (simp add: \\<open>x = -4\\<close>)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_multi": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_multi", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_multi:\n  fixes x e :: \"complex \\<Rightarrow> complex\"\n  assumes h0 : \"\\<And>z. x z + e z = 7\"\n    and h1 : \"\\<And>z. 2 * x z + e z = 3\"\n  shows \"\\<And>z. e z = 11 \\<and> x z = (-4)\"\nproof -\n  let ?e = \"\\<lambda>z. 7 - x z\"\n  have \"\\<And>z. e z = ?e z\" using h0 by (auto simp: field_simps)\n  then have \"\\<And>z. 2 * x z + (7 - x z) = 3\" using h1 by simp\n  then have \"\\<And>z. 2 * x z - x z + 7 = 3\" by simp\n  then have \"\\<And>z. x z + 7 = 3\" by simp\n  then have \"\\<And>z. x z = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"\\<And>z. x z = -4\" by simp\n  from this have \"\\<And>z. e z = 7 - (-4)\" by (metis \\<open>\\<And>z. e z = 7 - x z\\<close> \\<open>\\<And>z. x z = 3 - 7\\<close>)\n  then have \"\\<And>z. e z = 7 + 4\" by simp\n  then show \"\\<And>z. e z = 11 \\<and> x z = -4\" by (metis \\<open>\\<And>z. x z = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_multi:\n  fixes x e :: \"complex \\<Rightarrow> complex\"\n  assumes h0 : \"\\<And>z. x z + e z = 7\"\n    and h1 : \"\\<And>z. 2 * x z + e z = 3\"\n  shows \"\\<And>z. e z = 11 \\<and> x z = (-4)\"\nproof -\n  let ?e = \"\\<lambda>z. 7 - x z\"\n  have \"\\<And>z. e z = ?e z\" using h0 by (auto simp: field_simps)\n  then have \"\\<And>z. 2 * x z + (7 - x z) = 3\" using h1 by simp\n  then have \"\\<And>z. 2 * x z - x z + 7 = 3\" by simp\n  then have \"\\<And>z. x z + 7 = 3\" by simp\n  then have \"\\<And>z. x z = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"\\<And>z. x z = -4\" by simp\n  from this have \"\\<And>z. e z = 7 - (-4)\" by (metis \\<open>\\<And>z. e z = 7 - x z\\<close> \\<open>\\<And>z. x z = 3 - 7\\<close>)\n  then have \"\\<And>z. e z = 7 + 4\" by simp\n  then show \"\\<And>z. e z = 11 \\<and> x z = -4\" by (metis \\<open>\\<And>z. x z = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "linear_system_solver": {"skill_name": "linear_system_solver", "marker": "lemma linear_system_solver:\n  fixes x e :: complex\n  assumes h0: \"x + e = a\" \n    and h1: \"2 * x + e = b\"\n  shows \"e = (2 * a - b) / 1 \\<and> x = (b - a) / 1\"\nproof -\n  have eq1: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (a - x) = b\" using h1 eq1 by simp\n  have eq3: \"x + a = b\" using eq2 by simp\n  then have \"x = b - a\" by (metis add.commute add_diff_cancel diff_add_eq)\n  from eq1 have \"e = a - (b - a)\" by (metis \\<open>x = b - a\\<close>)\n  then have \"e = 2 * a - b\" by simp\n  thus \"e = (2 * a - b) / 1 \\<and> x = (b - a) / 1\" by (metis \\<open>x = b - a\\<close> div_by_1)\nqed", "description": "-", "full_code": "lemma linear_system_solver:\n  fixes x e :: complex\n  assumes h0: \"x + e = a\" \n    and h1: \"2 * x + e = b\"\n  shows \"e = (2 * a - b) / 1 \\<and> x = (b - a) / 1\"\nproof -\n  have eq1: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (a - x) = b\" using h1 eq1 by simp\n  have eq3: \"x + a = b\" using eq2 by simp\n  then have \"x = b - a\" by (metis add.commute add_diff_cancel diff_add_eq)\n  from eq1 have \"e = a - (b - a)\" by (metis \\<open>x = b - a\\<close>)\n  then have \"e = 2 * a - b\" by simp\n  thus \"e = (2 * a - b) / 1 \\<and> x = (b - a) / 1\" by (metis \\<open>x = b - a\\<close> div_by_1)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_complicated": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_complicated", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_complicated:\n  fixes x e a b :: real\n  assumes h0 : \"x + e = a\"\n    and h1 : \"2 * x + e = b\"\n    and h2 : \"a = 7\" \n    and h3 : \"b = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have eq1: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (a - x) = b\" using h1 eq1 by simp\n  have eq3: \"2 * x - x + a = b\" using eq2 by simp\n  then have \"x + a = b\" by simp \n  then have \"x = b - a\" using h2 h3 by simp\n  then have \"x = 3 - 7\" by (metis h2 h3 one_plus_BitM or_not_num_neg.simps(2))\n  then have \"x = -4\" by simp \n  from eq1 have \"e = a - (-4)\" by (metis \\<open>x = -4\\<close> h2)\n  then have \"e = 7 + 4\" by (metis BitM_plus_one \\<open>x = - 4\\<close> diff_minus_eq_add eq1 h2 semiring_norm(5))\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_complicated:\n  fixes x e a b :: real\n  assumes h0 : \"x + e = a\"\n    and h1 : \"2 * x + e = b\"\n    and h2 : \"a = 7\" \n    and h3 : \"b = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have eq1: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (a - x) = b\" using h1 eq1 by simp\n  have eq3: \"2 * x - x + a = b\" using eq2 by simp\n  then have \"x + a = b\" by simp \n  then have \"x = b - a\" using h2 h3 by simp\n  then have \"x = 3 - 7\" by (metis h2 h3 one_plus_BitM or_not_num_neg.simps(2))\n  then have \"x = -4\" by simp \n  from eq1 have \"e = a - (-4)\" by (metis \\<open>x = -4\\<close> h2)\n  then have \"e = 7 + 4\" by (metis BitM_plus_one \\<open>x = - 4\\<close> diff_minus_eq_add eq1 h2 semiring_norm(5))\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_simpler": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_simpler", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_simpler:\n  fixes x e :: real\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11\"\nproof -\n  have \"2 * x + (7 - x) = 3\" using h1 h0 by simp\n  then have \"2 * x - x + 7 = 3\" by simp\n  then have \"x + 7 = 3\" by simp \n  then have \"x = -4\" by auto\n  then have \"e = 7 - (-4)\" using h0 by auto\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11\" by simp\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_simpler:\n  fixes x e :: real\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11\"\nproof -\n  have \"2 * x + (7 - x) = 3\" using h1 h0 by simp\n  then have \"2 * x - x + 7 = 3\" by simp\n  then have \"x + 7 = 3\" by simp \n  then have \"x = -4\" by auto\n  then have \"e = 7 - (-4)\" using h0 by auto\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11\" by simp\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_nvarlineareq": {"skill_name": "algebra_nvarlineareq", "marker": "theorem algebra_nvarlineareq:\n  fixes x e :: \"complex list\"\n  assumes h0: \"\\<forall>i. x ! i + e ! i = 7\"\n    and h1: \"\\<forall>i. 2 * x ! i + e ! i = 3\"\n  shows \"\\<forall>i. e ! i = 11 \\<and> x ! i = -4\"\nproof -\n  have eq1: \"\\<forall>i. e ! i = 7 - x ! i\" using h0 by (auto simp: field_simps)\n  have eq2: \"\\<forall>i. 2 * x ! i + (7 - x ! i) = 3\" using h1 eq1 by auto\n  have eq3: \"\\<forall>i. x ! i + 7 = 3\" using eq2 by auto\n  then have \"\\<forall>i. x ! i = 3 - 7\" by (metis add.commute add_diff_cancel_right' diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"\\<forall>i. x ! i = -4\" by simp\n  from eq1 have \"\\<forall>i. e ! i = 7 - (-4)\" by (metis \\<open>\\<forall>i. x ! i = - 4\\<close>)\n  then have \"\\<forall>i. e ! i = 7 + 4\" by simp\n  then show \"\\<forall>i. e ! i = 11 \\<and> x ! i = -4\" by (metis \\<open>\\<forall>i. x ! i = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed", "description": "-", "full_code": "theorem algebra_nvarlineareq:\n  fixes x e :: \"complex list\"\n  assumes h0: \"\\<forall>i. x ! i + e ! i = 7\"\n    and h1: \"\\<forall>i. 2 * x ! i + e ! i = 3\"\n  shows \"\\<forall>i. e ! i = 11 \\<and> x ! i = -4\"\nproof -\n  have eq1: \"\\<forall>i. e ! i = 7 - x ! i\" using h0 by (auto simp: field_simps)\n  have eq2: \"\\<forall>i. 2 * x ! i + (7 - x ! i) = 3\" using h1 eq1 by auto\n  have eq3: \"\\<forall>i. x ! i + 7 = 3\" using eq2 by auto\n  then have \"\\<forall>i. x ! i = 3 - 7\" by (metis add.commute add_diff_cancel_right' diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"\\<forall>i. x ! i = -4\" by simp\n  from eq1 have \"\\<forall>i. e ! i = 7 - (-4)\" by (metis \\<open>\\<forall>i. x ! i = - 4\\<close>)\n  then have \"\\<forall>i. e ! i = 7 + 4\" by simp\n  then show \"\\<forall>i. e ! i = 11 \\<and> x ! i = -4\" by (metis \\<open>\\<forall>i. x ! i = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v4V2": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v4V2", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v4:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"x = -4\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (7 - x) = 3\" using h1 eq1 by simp\n  have eq3: \"2 * x - x + 7 = 3\" using eq2 by simp\n  then have \"x + 7 = 3\" by simp \n  then show \"x = -4\" by (metis add.commute add.inverse_inverse add_minus_cancel algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v2 diff_add_eq diff_minus_eq_add mult.commute mult_2_right)\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v2:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = (-4)\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (7 - x) = 3\" using h1 eq1 by simp\n  have eq3: \"2 * x - x + 7 = 3\" using eq2 by simp\n  then have \"x + 7 = 3\" by simp \n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"x = -4\" by simp \n  from eq1 have \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  then show \"e = 11 \\<and> x = -4\" by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_plus_numeral semiring_norm(2) semiring_norm(7))\nqed\n\ntheorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v4:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"x = -4\"\nproof -\n  have eq1: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have eq2: \"2 * x + (7 - x) = 3\" using h1 eq1 by simp\n  have eq3: \"2 * x - x + 7 = 3\" using eq2 by simp\n  then have \"x + 7 = 3\" by simp \n  then show \"x = -4\" by (metis add.commute add.inverse_inverse add_minus_cancel algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_v2 diff_add_eq diff_minus_eq_add mult.commute mult_2_right)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_simple": {"skill_name": "algebra_2varlineareq_simple", "marker": "theorem algebra_2varlineareq_simple:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have e_sub: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  then have eq: \"2 * x + (7 - x) = 3\" using h1 by simp\n  have \"2 * x + 7 - x = 3\" using eq by simp\n  hence \"x + 7 = 3\" by (simp add: field_simps)\n  have \"x = 3 - 7\" by (metis \\<open>x + 7 = 3\\<close> add.commute add_diff_cancel dbl_inc_simps(3) h0)\n  then have \"x = -4\" by simp\n  from e_sub have \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  thus \"e = 11 \\<and> x = -4\" by (simp add: \\<open>x = -4\\<close>)\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_simple:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have e_sub: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  then have eq: \"2 * x + (7 - x) = 3\" using h1 by simp\n  have \"2 * x + 7 - x = 3\" using eq by simp\n  hence \"x + 7 = 3\" by (simp add: field_simps)\n  have \"x = 3 - 7\" by (metis \\<open>x + 7 = 3\\<close> add.commute add_diff_cancel dbl_inc_simps(3) h0)\n  then have \"x = -4\" by simp\n  from e_sub have \"e = 7 - (-4)\" by (metis \\<open>x = -4\\<close>)\n  then have \"e = 7 + 4\" by simp\n  thus \"e = 11 \\<and> x = -4\" by (simp add: \\<open>x = -4\\<close>)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}}