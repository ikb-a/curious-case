{"request_0": {"request_name": "request_0", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma quadratic_simplification:\n  fixes a b c x :: real\n  assumes \"a * x^2 + b * x + c = 0\"\n  shows \"x = (-b \u00b1 sqrt(b^2 - 4*a*c)) / (2*a)\"", "update_count": 4}, "request_1": {"request_name": "request_1", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma sqrt_properties:\n  fixes x y :: real\n  assumes \"x >= 0\" \"y >= 0\"\n  shows \"sqrt(x) + sqrt(y) >= sqrt(x + y)\"", "update_count": 4}, "request_2": {"request_name": "request_2", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma quadratic_formula:\n  fixes a b c :: real\n  assumes \"a \u2260 0\"\n  shows \"x = (-b \u00b1 sqrt(b^2 - 4*a*c)) / (2*a) \u27f9 a*x^2 + b*x + c = 0\"", "update_count": 4}, "request_3": {"request_name": "request_3", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma square_root_properties:\n  fixes a b :: real\n  assumes \"a \u2265 0\" \"b \u2265 0\"\n  shows \"sqrt(a) + sqrt(b) = sqrt(a + b + 2*sqrt(a*b))\"", "update_count": 4}, "request_4": {"request_name": "request_4", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma algebraic_identity:\n  fixes a b :: real\n  shows \"(a - b)^2 = a^2 - 2*a*b + b^2\"", "update_count": 4}, "request_5": {"request_name": "request_5", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma simplify_square_root_expression:\n  fixes a b :: real\n  assumes \"a > 0\" \"b > 0\"\n  shows \"(a - sqrt b)^2 = a^2 - 2*a*sqrt b + b\"", "update_count": 5}, "request_6": {"request_name": "request_6", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma sqrt_non_negative:\n  fixes x :: real\n  assumes \"x \u2265 0\"\n  shows \"sqrt x \u2265 0\"", "update_count": 4}, "request_7": {"request_name": "request_7", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma sqrt_diff:\n  fixes a b :: real\n  assumes \"a \u2265 b\"\n  shows \"sqrt a - sqrt b = (a - b) / (sqrt a + sqrt b)\"", "update_count": 4}, "request_8": {"request_name": "request_8", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma simplify_rational:\n  fixes a b c d :: real\n  assumes \"b \u2260 0\" \"d \u2260 0\"\n  shows \"(a / b) + (c / d) = (ad + bc) / (bd)\"", "update_count": 4}, "request_9": {"request_name": "request_9", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma substitute_quadratic:\n  fixes a b c x k :: real\n  assumes \"a * x^2 + b * x + c = 0\"\n  shows \"c = - (a * x^2 + b * x)\"", "update_count": 4}, "request_10": {"request_name": "request_10", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma expand_square:\n  fixes a b :: real\n  shows \"(a - b)^2 = a^2 - 2*a*b + b^2\"", "update_count": 4}, "request_11": {"request_name": "request_11", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma quadratic_root:\n  fixes k x :: real\n  assumes \"x = (13 - sqrt 131) / 4\" \n    and \"2 * x^2 - 13 * x + k = 0\"\n  shows \"k = 19 / 4\"", "update_count": 4}, "request_12": {"request_name": "request_12", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma square_of_fraction:\n  fixes a b :: real\n  assumes \"b > 0\"\n  shows \"(a / b)^2 = a^2 / b^2\"", "update_count": 4}, "request_13": {"request_name": "request_13", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma sqrt_divide:\n  fixes a b :: real\n  assumes \"b > 0\"\n  shows \"sqrt(a / b) = sqrt(a) / sqrt(b)\"", "update_count": 4}, "request_14": {"request_name": "request_14", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma combine_fractions:\n  fixes a b c d :: real\n  shows \"(a / c) + (b / d) = (a * d + b * c) / (c * d)\"", "update_count": 4}, "request_15": {"request_name": "request_15", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma quadratic_formula:\n  fixes a b c x :: real\n  assumes \"a \u2260 0\"\n  shows \"a * x^2 + b * x + c = 0 \u27f7 x \u2208 {(-b - sqrt (b^2 - 4 * a * c)) / (2 * a), (-b + sqrt (b^2 - 4 * a * c)) / (2 * a)}\"", "update_count": 4}, "request_16": {"request_name": "request_16", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma sqrt_expansion:\n  fixes a b :: real\n  shows \"(a - sqrt b)^2 = a^2 - 2*a*sqrt b + b\"", "update_count": 4}, "request_17": {"request_name": "request_17", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma square_of_binomial:\n  fixes a b :: real\n  shows \"(a + b)^2 = a^2 + 2 * a * b + b^2\"", "update_count": 5}, "request_18": {"request_name": "request_18", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma solve_linear_equation:\n  fixes a b :: real\n  assumes \"a \u2260 0\"\n  shows \"a * x = b \u27f9 x = b / a\"", "update_count": 4}, "request_19": {"request_name": "request_19", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma sqrt_properties:\n  fixes a b :: real\n  assumes \"a >= 0\" \"b >= 0\"\n  shows \"sqrt (a + b) = sqrt a + sqrt b \\<longleftrightarrow> a = 0 \\<and> b = 0\"", "update_count": 4}, "request_20": {"request_name": "request_20", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma algebraic_manipulation:\n  fixes a b c d :: real\n  assumes \"a = (13 - sqrt 131) / 4\"\n  shows \"2 * a^2 - 13 * a = -19/4\"", "update_count": 4}, "request_21": {"request_name": "request_21", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma simplify_square_root:\n  fixes a b :: real\n  shows \"sqrt(a) / b = sqrt(a / (b^2))\"", "update_count": 5}, "request_22": {"request_name": "request_22", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma quadratic_root_conditions:\n  fixes a b c :: real\n  assumes \"a > 0\"\n  shows \"b^2 - 4*a*c >= 0 \\<longleftrightarrow> \\text{the quadratic } ax^2 + bx + c \\text{ has real roots}\"", "update_count": 4}, "request_23": {"request_name": "request_23", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma simplify_sqrt_expression:\n  fixes a b :: real\n  shows \"sqrt(a^2 + b^2) = sqrt(a^2) + sqrt(b^2) \u27f9 a = 0 \u2227 b = 0\"", "update_count": 4}, "request_24": {"request_name": "request_24", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma calculate_expression:\n  fixes x :: real\n  assumes \"x = (13 - sqrt 131) / 4\"\n  shows \"2 * x^2 - 13 * x = -19 / 4\"", "update_count": 4}, "request_25": {"request_name": "request_25", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma quadratic_root_properties:\n  fixes a b c :: real\n  assumes \"a \u2260 0\"\n  shows \"x1 + x2 = -b/a\" \"x1 * x2 = c/a\"", "update_count": 4}, "request_26": {"request_name": "request_26", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma sqrt_simplification:\n  fixes x y :: real\n  assumes \"x \u2265 0\" \"y \u2265 0\"\n  shows \"sqrt(x + y) = sqrt x + sqrt y \u27f9 x + y = (sqrt x + sqrt y)^2\"", "update_count": 5}, "request_27": {"request_name": "request_27", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma simplify_square_root:\n  fixes a b :: real\n  assumes \"a \u2265 0\" \"b \u2265 0\"\n  shows \"sqrt(a) * sqrt(b) = sqrt(a * b)\"", "update_count": 5}, "request_28": {"request_name": "request_28", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma quadratic_formula:\n  fixes a b c :: real\n  assumes \"a \u2260 0\"\n  shows \"(-b \u00b1 sqrt (b^2 - 4*a*c)) / (2*a) = (if b^2 - 4*a*c < 0 then None else Some ((-b + sqrt (b^2 - 4*a*c)) / (2*a), (-b - sqrt (b^2 - 4*a*c)) / (2*a)))\"", "update_count": 5}, "request_29": {"request_name": "request_29", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma square_root_properties:\n  fixes x y :: real\n  assumes \"x \u2265 0\" \"y \u2265 0\"\n  shows \"sqrt x = sqrt y \u27f7 x = y\"", "update_count": 4}, "request_30": {"request_name": "request_30", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma solve_sqrt_equation:\n  fixes a b :: real\n  assumes \"a \u2265 0\" \"b \u2265 0\"\n  shows \"sqrt a = b \u27f7 a = b^2\"", "update_count": 5}, "request_31": {"request_name": "request_31", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma discriminant_zero:\n  fixes a b c :: real\n  assumes \"a \u2260 0\"\n  shows \"b^2 - 4*a*c = 0 \u27f9 (b / (2*a)) = \u00b1 sqrt(c / a)\"", "update_count": 4}, "request_32": {"request_name": "request_32", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma square_expression:\n  fixes x :: real\n  assumes \"x = (13 - sqrt 131) / 4\"\n  shows \"2 * x^2 = (600 - 52 * sqrt 131) / 16\"", "update_count": 4}, "request_33": {"request_name": "request_33", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma quadratic_formula:\n  fixes a b c :: real\n  assumes \"a \\<noteq> 0\"\n  shows \"2 * x^2 - b * x + c = 0 \\<longleftrightarrow> x = (b \u00b1 sqrt(b^2 - 4 * a * c)) / (2 * a)\"", "update_count": 5}, "request_34": {"request_name": "request_34", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma square_root_equation:\n  fixes a b :: real\n  assumes \"a = b\"\n  shows \"sqrt a = sqrt b\"", "update_count": 4}, "request_35": {"request_name": "request_35", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma rearrange_terms:\n  fixes a b c :: real\n  assumes \"a = b + c\"\n  shows \"b = a - c\"", "update_count": 4}, "request_36": {"request_name": "request_36", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma quadratic_root_properties:\n  fixes a b c :: real\n  assumes \"a \u2260 0\"\n  shows \"roots of ax^2 + bx + c = 0 are given by (-b \u00b1 sqrt(b^2 - 4ac)) / (2a)\"", "update_count": 4}, "request_37": {"request_name": "request_37", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma simplify_square_root_expression:\n  fixes k :: real\n  shows \"sqrt(169 - 8*k) = sqrt(38) \u27f7 169 - 8*k = 38\"", "update_count": 4}, "request_38": {"request_name": "request_38", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma simplify_expression:\n  fixes a b c d :: real\n  shows \"a + b + c + d = 0 \u27f7 (a + b = - (c + d))\"", "update_count": 5}, "request_39": {"request_name": "request_39", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma quadratic_root_substitution:\n  fixes a b c x k :: real\n  assumes \"a \u2260 0\" \"x = (-b \u00b1 sqrt(b^2 - 4*a*c)) / (2*a)\"\n  shows \"a*x^2 + b*x + c = 0 \u27f7 (b^2 - 4*a*c = 0 \u2228 b^2 - 4*a*c > 0)\"", "update_count": 4}, "request_40": {"request_name": "request_40", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma rational_expression_simplification:\n  fixes a b c d :: real\n  assumes \"b \u2260 0\" \"d \u2260 0\"\n  shows \"(a/b) + (c/d) = (ad + bc) / (bd)\"", "update_count": 5}, "request_41": {"request_name": "request_41", "problem_name": "data/full_data/debug/valid_rand/mathd_algebra_116.json", "formal_statement": "lemma real_arithmetic:\n  fixes a b c :: real\n  shows \"a + b + c = (a + b) + c\"", "update_count": 4}}