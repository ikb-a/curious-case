{"cal_log_value": {"skill_name": "cal_log_value", "marker": "lemma cal_log_value:\n  assumes \"a > 0\" and \"a \u2260 1\" and \"b > 0\" and \"log a b = c\"\n  shows \"b = a ^ c\"\nby (metis assms(1) assms(2) assms(3) assms(4) powr_log_cancel powr_realpow)", "description": "This skill calculates the value of a number given its logarithm. It is a general mathematical property and can be used in any context where logarithms are involved. The skill takes four arguments: two real numbers 'a' and 'b' which are greater than 0 and 'a' is not equal to 1, and a real number 'c' which is the logarithm base 'a' of 'b'. It returns the value of 'b', which is equal to 'a' raised to the power 'c'.", "full_code": "lemma cal_log_value:\n  assumes \"a > 0\" and \"a \u2260 1\" and \"b > 0\" and \"log a b = c\"\n  shows \"b = a ^ c\"\nby (metis assms(1) assms(2) assms(3) assms(4) powr_log_cancel powr_realpow)", "origin": "", "update_count": 0}, "mod_add_power": {"skill_name": "mod_add_power", "marker": "lemma mod_add_power:\n  fixes x n a b c :: nat\n  assumes \"n > 0\" \"b > 0\" \"c > 0\" \"x mod n = a\"\n  shows \"((x + b)^c) mod n = ((a + b)^c) mod n\"\nproof -\n  have \"(x + b)^c mod n = ((x mod n) + b)^c mod n\"\n    by (smt (verit) mod_add_left_eq power_mod)\n  also have \"... = (a + b)^c mod n\"\n    using assms(4) by auto\n  finally show ?thesis by auto\nqed", "description": "This skill is a mathematical property that states that if `x mod n = a`, then the modulus of the power of `(x + b)` and `(a + b)` with respect to `n` are equal. This skill can be used in any context where the modulus of the power of two numbers is required.", "full_code": "lemma mod_add_power:\n  fixes x n a b c :: nat\n  assumes \"n > 0\" \"b > 0\" \"c > 0\" \"x mod n = a\"\n  shows \"((x + b)^c) mod n = ((a + b)^c) mod n\"\nproof -\n  have \"(x + b)^c mod n = ((x mod n) + b)^c mod n\"\n    by (smt (verit) mod_add_left_eq power_mod)\n  also have \"... = (a + b)^c mod n\"\n    using assms(4) by auto\n  finally show ?thesis by auto\nqed", "origin": "", "update_count": 0}, "cancle_div": {"skill_name": "cancle_div", "marker": "lemma cancle_div:\n  fixes x a b c:: real\n  assumes \"x > 0\" \"a + b / x = c\"\n  shows \"a * x + b = c * x\"\nproof -\n  have \"x * (a + b / x) = c * x\"\n    using assms(2) by auto\n  then have \"x * a + x * (b / x) = c * x\"\n    by (simp add: distrib_left)\n  then show ?thesis\n    using assms(1) by (simp add: mult.commute)\nqed", "description": "This skill is a mathematical property that can be used to simplify expressions involving division and multiplication. If you have an equation of the form \"a + b / x = c\" for some real numbers a, b, c, and x (where x > 0), you can use this skill to transform the equation into \"a * x + b = c * x\". This can be useful in many mathematical proofs where simplification of expressions is required.", "full_code": "lemma cancle_div:\n  fixes x a b c:: real\n  assumes \"x > 0\" \"a + b / x = c\"\n  shows \"a * x + b = c * x\"\nproof -\n  have \"x * (a + b / x) = c * x\"\n    using assms(2) by auto\n  then have \"x * a + x * (b / x) = c * x\"\n    by (simp add: distrib_left)\n  then show ?thesis\n    using assms(1) by (simp add: mult.commute)\nqed", "origin": "", "update_count": 0}, "multi_distrib_complex": {"skill_name": "multi_distrib_complex", "marker": "lemma multi_distrib_complex:\n  fixes a b c d :: complex\n  shows \"(a + b) * (c + d) = a * c + a * d + b * c + b * d\"\n  by (simp add: distrib_left distrib_right)", "description": "This skill is a generalization of the distributive property of multiplication over addition for complex numbers. It can be used in any context where the distributive property of multiplication over addition for complex numbers is needed. To use this skill, you need to provide four complex numbers a, b, c, and d. The skill will then prove that the product of the sum of a and b and the sum of c and d is equal to the sum of the products of each pair of complex numbers.", "full_code": "lemma multi_distrib_complex:\n  fixes a b c d :: complex\n  shows \"(a + b) * (c + d) = a * c + a * d + b * c + b * d\"\n  by (simp add: distrib_left distrib_right)", "origin": "", "update_count": 0}, "cal_log_exp_value": {"skill_name": "cal_log_exp_value", "marker": "lemma cal_log_exp_value:\n  fixes a :: real\n  assumes \"a > 0\" \"a \u2260 1\" \"n > 0\"\n  shows \"log a (a^n) = n\"\nproof -\n  have c0: \"log a a = 1\"\n    by (simp add: assms(1) assms(2))\n  have \"log a (a^n) = n * (log a a)\"\n    using log_nat_power[of a a n] by (simp add: assms(1))\n  then have c1: \"log a (a^n) = n\"\n    using c0 by simp\n  then show ?thesis \n    by (simp add: c1)\nqed", "description": "This skill calculates the logarithm of a number raised to a power. It is a general mathematical property and can be used in any context where logarithms are involved. The skill takes three arguments: a real number 'a' which is greater than 0 and not equal to 1, and a positive integer 'n'. It returns the logarithm base 'a' of 'a' raised to the power 'n', which is equal to 'n'.", "full_code": "lemma cal_log_exp_value:\n  fixes a :: real\n  assumes \"a > 0\" \"a \u2260 1\" \"n > 0\"\n  shows \"log a (a^n) = n\"\nproof -\n  have c0: \"log a a = 1\"\n    by (simp add: assms(1) assms(2))\n  have \"log a (a^n) = n * (log a a)\"\n    using log_nat_power[of a a n] by (simp add: assms(1))\n  then have c1: \"log a (a^n) = n\"\n    using c0 by simp\n  then show ?thesis \n    by (simp add: c1)\nqed", "origin": "", "update_count": 0}, "a_times_vera": {"skill_name": "a_times_vera", "marker": "lemma a_times_vera:\n  fixes a :: real\n  assumes \"a \u2260 0\"\n  shows \" a * (1 / a) = 1\"\n  by (simp add: assms)", "description": "This skill demonstrates the property of any non-zero real number that when it is multiplied by its reciprocal, the result is 1. This is a fundamental property of division and multiplication in the field of real numbers. This skill can be used in any context where this property needs to be proven or used.", "full_code": "lemma a_times_vera:\n  fixes a :: real\n  assumes \"a \u2260 0\"\n  shows \" a * (1 / a) = 1\"\n  by (simp add: assms)", "origin": "", "update_count": 0}, "multi_distrib_complex_general": {"skill_name": "multi_distrib_complex_general", "marker": "lemma multi_distrib_complex_general:\n  fixes zs :: \"complex list\"\n  shows \"(\\<Sum>z \\<in> set zs. z) * (\\<Sum>z \\<in> set zs. z) = (\\<Sum>z1 \\<in> set zs. z1) * (\\<Sum>z2 \\<in> set zs. z2)\"\nproof -\n  have \"(\\<Sum>z \\<in> set zs. z) * (\\<Sum>z \\<in> set zs. z) = (\\<Sum>z1 \\<in> set zs. z1) * (\\<Sum>z2 \\<in> set zs. z2)\"\n    unfolding sum_list_def by auto\n  thus ?thesis by simp\nqed", "description": "-", "full_code": "lemma multi_distrib_complex_general:\n  fixes zs :: \"complex list\"\n  shows \"(\\<Sum>z \\<in> set zs. z) * (\\<Sum>z \\<in> set zs. z) = (\\<Sum>z1 \\<in> set zs. z1) * (\\<Sum>z2 \\<in> set zs. z2)\"\nproof -\n  have \"(\\<Sum>z \\<in> set zs. z) * (\\<Sum>z \\<in> set zs. z) = (\\<Sum>z1 \\<in> set zs. z1) * (\\<Sum>z2 \\<in> set zs. z2)\"\n    unfolding sum_list_def by auto\n  thus ?thesis by simp\nqed", "origin": "multi_distrib_complex", "update_count": 0}, "cancle_div_multi_correct": {"skill_name": "cancle_div_multi_correct", "marker": "lemma cancle_div_multi_correct:\n  fixes x :: real\n  assumes \"x > 0\" \"xs = a # b # cs\"\n  shows \"cancle_div_multi (x#xs) xs = (let c = a + b / x in \n    (c * x - b) # cancle_div_multi xs (c#cs))\"\nproof -\n  have \"cancle_div_multi (x#xs) (a # b # cs) = (let c = a + b / x in \n    (c * x - b) # cancle_div_multi xs (c#cs))\" \n    by (simp add: assms)\n  then show ?thesis by (metis assms(2) mult_delta_right)\nqed", "description": "-", "full_code": "lemma cancle_div:\n  fixes x a b c:: real\n  assumes \"x > 0\" \"a + b / x = c\"\n  shows \"a * x + b = c * x\"\nproof -\n  have \"x * (a + b / x) = c * x\"\n    using assms(2) by auto\n  then have \"x * a + x * (b / x) = c * x\"\n    by (simp add: distrib_left)\n  then show ?thesis\n    using assms(1) by (simp add: mult.commute)\nqed\n\nfun cancle_div_multi :: \"real list \\<Rightarrow> real list \\<Rightarrow> real list\" where\n  \"cancle_div_multi [] _ = []\" |\n  \"cancle_div_multi _ [] = []\" |\n  \"cancle_div_multi (x#xs) (a#b#cs) = \n    (let c = a + b / x in \n    (c * x - b) # cancle_div_multi xs (c#cs))\"\n\nlemma cancle_div_multi_correct:\n  fixes x :: real\n  assumes \"x > 0\" \"xs = a # b # cs\"\n  shows \"cancle_div_multi (x#xs) xs = (let c = a + b / x in \n    (c * x - b) # cancle_div_multi xs (c#cs))\"\nproof -\n  have \"cancle_div_multi (x#xs) (a # b # cs) = (let c = a + b / x in \n    (c * x - b) # cancle_div_multi xs (c#cs))\" \n    by (simp add: assms)\n  then show ?thesis by (metis assms(2) mult_delta_right)\nqed", "origin": "cancle_div", "update_count": 0}, "cancle_div_multi": {"skill_name": "cancle_div_multi", "marker": "fun cancle_div_multi :: \"real list \\<Rightarrow> real list \\<Rightarrow> real list\" where\n  \"cancle_div_multi [] _ = []\" |\n  \"cancle_div_multi _ [] = []\" |\n  \"cancle_div_multi (x#xs) (a#b#cs) = \n    (let c = a + b / x in \n    (c * x - b) # cancle_div_multi xs (c#cs))\"", "description": "-", "full_code": "lemma cancle_div:\n  fixes x a b c:: real\n  assumes \"x > 0\" \"a + b / x = c\"\n  shows \"a * x + b = c * x\"\nproof -\n  have \"x * (a + b / x) = c * x\"\n    using assms(2) by auto\n  then have \"x * a + x * (b / x) = c * x\"\n    by (simp add: distrib_left)\n  then show ?thesis\n    using assms(1) by (simp add: mult.commute)\nqed\n\nfun cancle_div_multi :: \"real list \\<Rightarrow> real list \\<Rightarrow> real list\" where\n  \"cancle_div_multi [] _ = []\" |\n  \"cancle_div_multi _ [] = []\" |\n  \"cancle_div_multi (x#xs) (a#b#cs) = \n    (let c = a + b / x in \n    (c * x - b) # cancle_div_multi xs (c#cs))\"", "origin": "cancle_div", "update_count": 0}, "product_of_non_zero_and_inverse": {"skill_name": "product_of_non_zero_and_inverse", "marker": "lemma product_of_non_zero_and_inverse:\n  fixes a b :: real\n  assumes \"a \\<noteq> 0\" \"b \\<noteq> 0\"\n  shows \"a * (1 / a) * b * (1 / b) = 1\"\nproof -\n  have \"a * (1 / a) = 1\" using non_zero_times_inverse[of a] assms(1) by simp\n  then have \"a * (1 / a) * b * (1 / b) = 1 * (b * (1 / b))\" by simp\n  also have \"... = 1 * 1\" using non_zero_times_inverse[of b] assms(2) by simp\n  finally show ?thesis by simp\nqed", "description": "-", "full_code": "lemma non_zero_times_inverse:\n  fixes a :: real\n  assumes \"a \\<noteq> 0\"\n  shows \"a * (1 / a) = 1\"\n  by (simp add: assms)\n\nlemma product_of_non_zero_and_inverse:\n  fixes a b :: real\n  assumes \"a \\<noteq> 0\" \"b \\<noteq> 0\"\n  shows \"a * (1 / a) * b * (1 / b) = 1\"\nproof -\n  have \"a * (1 / a) = 1\" using non_zero_times_inverse[of a] assms(1) by simp\n  then have \"a * (1 / a) * b * (1 / b) = 1 * (b * (1 / b))\" by simp\n  also have \"... = 1 * 1\" using non_zero_times_inverse[of b] assms(2) by simp\n  finally show ?thesis by simp\nqed", "origin": "a_times_vera", "update_count": 0}, "product_of_reciprocals": {"skill_name": "product_of_reciprocals", "marker": "lemma product_of_reciprocals:\n  fixes a b :: real\n  assumes \"a \\<noteq> 0\" and \"b \\<noteq> 0\"\n  shows \"(1 / a) * (1 / b) = 1 / (a * b)\"\nproof -\n  have \"(1 / a) * (1 / b) = (1 * 1) / (a * b)\" by simp\n  thus ?thesis by simp\nqed", "description": "-", "full_code": "lemma product_of_reciprocals:\n  fixes a b :: real\n  assumes \"a \\<noteq> 0\" and \"b \\<noteq> 0\"\n  shows \"(1 / a) * (1 / b) = 1 / (a * b)\"\nproof -\n  have \"(1 / a) * (1 / b) = (1 * 1) / (a * b)\" by simp\n  thus ?thesis by simp\nqed", "origin": "a_times_vera", "update_count": 0}, "reciprocal_property": {"skill_name": "reciprocal_property", "marker": "lemma reciprocal_property:\n  fixes a b :: real\n  assumes \"a \\<noteq> 0\"\n  shows \"b * (1 / a) = b / a\"\nproof -\n  have \"b * (1 / a) = b * (1 / a) * (a / a)\" by (simp add: assms)\n  then show ?thesis by simp\nqed", "description": "-", "full_code": "lemma reciprocal_property:\n  fixes a b :: real\n  assumes \"a \\<noteq> 0\"\n  shows \"b * (1 / a) = b / a\"\nproof -\n  have \"b * (1 / a) = b * (1 / a) * (a / a)\" by (simp add: assms)\n  then show ?thesis by simp\nqed", "origin": "a_times_vera", "update_count": 0}, "cal_log_exp_value_general": {"skill_name": "cal_log_exp_value_general", "marker": "lemma cal_log_exp_value_general:\n  fixes a :: real\n  assumes \"a > 0\" \"a \\<noteq> 1\" \"n > 0\" \"b > 0\" \"b \\<noteq> 1\"\n  shows \"log a (a^n) = n\"\n    and \"log b (b^n) = n\"\nproof -\n  have c0: \"log a a = 1\" using assms(1) assms(2) by simp\n  have \"log a (a^n) = n * (log a a)\" using log_nat_power[of a a n] assms(1) by simp\n  then have c1: \"log a (a^n) = n\" using c0 by simp\n  have c2: \"log b b = 1\" using assms(4) assms(5) by simp\n  have \"log b (b^n) = n * (log b b)\" using log_nat_power[of b b n] assms(4) by simp\n  then have c3: \"log b (b^n) = n\" using c2 by simp\n  show \"log a (a^n) = n\" and \"log b (b^n) = n\" \n    using c1 c3 by auto\nqed", "description": "-", "full_code": "lemma cal_log_exp_value_general:\n  fixes a :: real\n  assumes \"a > 0\" \"a \\<noteq> 1\" \"n > 0\" \"b > 0\" \"b \\<noteq> 1\"\n  shows \"log a (a^n) = n\"\n    and \"log b (b^n) = n\"\nproof -\n  have c0: \"log a a = 1\" using assms(1) assms(2) by simp\n  have \"log a (a^n) = n * (log a a)\" using log_nat_power[of a a n] assms(1) by simp\n  then have c1: \"log a (a^n) = n\" using c0 by simp\n  have c2: \"log b b = 1\" using assms(4) assms(5) by simp\n  have \"log b (b^n) = n * (log b b)\" using log_nat_power[of b b n] assms(4) by simp\n  then have c3: \"log b (b^n) = n\" using c2 by simp\n  show \"log a (a^n) = n\" and \"log b (b^n) = n\" \n    using c1 c3 by auto\nqed", "origin": "cal_log_exp_value", "update_count": 0}, "log_base_change": {"skill_name": "log_base_change", "marker": "lemma log_base_change:\n  fixes a b :: real\n  assumes \"a > 0\" \"a \\<noteq> 1\" \"b > 0\" \"b \\<noteq> 1\"\n  shows \"log b (a) = log a (a) / log a (b)\"\nproof -\n  have \"log b (a) = log a (a) / log a (b)\"\n    by (metis assms(1) assms(2) log_base_change)\n  then show ?thesis by simp\nqed", "description": "-", "full_code": "lemma log_base_change:\n  fixes a b :: real\n  assumes \"a > 0\" \"a \\<noteq> 1\" \"b > 0\" \"b \\<noteq> 1\"\n  shows \"log b (a) = log a (a) / log a (b)\"\nproof -\n  have \"log b (a) = log a (a) / log a (b)\"\n    by (metis assms(1) assms(2) log_base_change)\n  then show ?thesis by simp\nqed", "origin": "cal_log_exp_value", "update_count": 0}, "log_power_identity": {"skill_name": "log_power_identity", "marker": "lemma log_power_identity:\n  fixes a :: real\n  assumes \"a > 0\" \"a \\<noteq> 1\" \"k > 0\" \"n > 0\"\n  shows \"log a (a^(k*n)) = k*n\"\nproof -\n  have c0: \"log a a = 1\" by (simp add: assms(1) assms(2))\n  have \"log a (a^(k*n)) = (k*n) * (log a a)\"\n    using log_nat_power[of a a \"k*n\"] by (simp add: assms(1))\n  then have c1: \"log a (a^(k*n)) = k*n\"\n    using c0 by simp\n  then show ?thesis \n    by (simp add: c1)\nqed", "description": "-", "full_code": "lemma log_power_identity:\n  fixes a :: real\n  assumes \"a > 0\" \"a \\<noteq> 1\" \"k > 0\" \"n > 0\"\n  shows \"log a (a^(k*n)) = k*n\"\nproof -\n  have c0: \"log a a = 1\" by (simp add: assms(1) assms(2))\n  have \"log a (a^(k*n)) = (k*n) * (log a a)\"\n    using log_nat_power[of a a \"k*n\"] by (simp add: assms(1))\n  then have c1: \"log a (a^(k*n)) = k*n\"\n    using c0 by simp\n  then show ?thesis \n    by (simp add: c1)\nqed", "origin": "cal_log_exp_value", "update_count": 0}, "amc12b_2003_p9": {"skill_name": "amc12b_2003_p9", "marker": "theorem amc12b_2003_p9:\n  fixes a b ::real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \" f 6 - f 2 = 12\"\n  shows \"f 12 - f 2 = 30\"\nproof -\n  have \"f 6 - f 2 = (a * 6 + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f 6 - f 2 = 4 * a\" by simp\n  have \"4 * a = 12\" using assms(2) by (metis \\<open>f 6 - f 2 = 4 * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f 12 - f 2 = (a * 12 + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f 12 - f 2 = 10 * a\" by simp\n  have \"10 * a = 10 * 3\" using `a = 3` by simp\n  thus \"f 12 - f 2 = 30\" by (smt (verit) \\<open>f 12 - f 2 = 10 * a\\<close>)\nqed", "description": "", "full_code": "theorem amc12b_2003_p9:\n  fixes a b ::real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \" f 6 - f 2 = 12\"\n  shows \"f 12 - f 2 = 30\"\nproof -\n  have \"f 6 - f 2 = (a * 6 + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f 6 - f 2 = 4 * a\" by simp\n  have \"4 * a = 12\" using assms(2) by (metis \\<open>f 6 - f 2 = 4 * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f 12 - f 2 = (a * 12 + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f 12 - f 2 = 10 * a\" by simp\n  have \"10 * a = 10 * 3\" using `a = 3` by simp\n  thus \"f 12 - f 2 = 30\" by (smt (verit) \\<open>f 12 - f 2 = 10 * a\\<close>)\nqed", "origin": "data/full_data/debug/valid_rand/amc12b_2003_p9.json_v0", "update_count": -1}, "linear_function_difference": {"skill_name": "linear_function_difference", "marker": "lemma linear_function_difference:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall>x. f x = a * x + b\"\n  shows \"f x - f y = a * (x - y)\"\nproof -\n  have \"f x - f y = (a * x + b) - (a * y + b)\" using assms by auto\n  then show ?thesis by (simp add: algebra_simps)\nqed", "description": "-", "full_code": "lemma linear_function_difference:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall>x. f x = a * x + b\"\n  shows \"f x - f y = a * (x - y)\"\nproof -\n  have \"f x - f y = (a * x + b) - (a * y + b)\" using assms by auto\n  then show ?thesis by (simp add: algebra_simps)\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "amc12b_2003_generalized": {"skill_name": "amc12b_2003_generalized", "marker": "theorem amc12b_2003_generalized:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\" and x1 x2 :: real\n  assumes \"\\<forall> x. f x = a * x + b\"\n  shows \"f x1 - f x2 = a * (x1 - x2)\"\nproof -\n  have \"f x1 - f x2 = (a * x1 + b) - (a * x2 + b)\"\n    using assms by auto\n  then have \"f x1 - f x2 = a * x1 - a * x2\" by simp\n  thus \"f x1 - f x2 = a * (x1 - x2)\" by (simp add: field_simps)\nqed", "description": "-", "full_code": "theorem amc12b_2003_generalized:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\" and x1 x2 :: real\n  assumes \"\\<forall> x. f x = a * x + b\"\n  shows \"f x1 - f x2 = a * (x1 - x2)\"\nproof -\n  have \"f x1 - f x2 = (a * x1 + b) - (a * x2 + b)\"\n    using assms by auto\n  then have \"f x1 - f x2 = a * x1 - a * x2\" by simp\n  thus \"f x1 - f x2 = a * (x1 - x2)\" by (simp add: field_simps)\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "amc12b_2003_p9_generalized": {"skill_name": "amc12b_2003_p9_generalized", "marker": "theorem amc12b_2003_p9_generalized:\n  fixes a b c d :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f c - f d = e\"\n  shows \"f (c + 6) - f d = (6 * a) + e\"\nproof -\n  have \"f c - f d = (a * c + b) - (a * d + b)\"\n    using assms(1) by auto\n  then have \"f c - f d = a * (c - d)\" by (auto simp: field_simps)\n  have \"a * (c - d) = e\" using assms(2) by (metis \\<open>f c - f d = a * (c - d)\\<close> dbl_simps(3))\n  have \"f (c + 6) - f d = (a * (c + 6) + b) - (a * d + b)\"\n    using assms(1) by auto\n  then have \"f (c + 6) - f d = a * (c + 6 - d)\" by (auto simp: field_simps)\n  have \"c + 6 - d = (c - d) + 6\" by simp\n  then show \"f (c + 6) - f d = (6 * a) + e\" \n    using `a * (c - d) = e` by (metis \\<open>f (c + 6) - f d = a * (c + 6 - d)\\<close> add.commute diff_add_eq group_cancel.sub1 mult.commute ring_class.ring_distribs(1))\nqed", "description": "-", "full_code": "theorem amc12b_2003_p9_generalized:\n  fixes a b c d :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f c - f d = e\"\n  shows \"f (c + 6) - f d = (6 * a) + e\"\nproof -\n  have \"f c - f d = (a * c + b) - (a * d + b)\"\n    using assms(1) by auto\n  then have \"f c - f d = a * (c - d)\" by (auto simp: field_simps)\n  have \"a * (c - d) = e\" using assms(2) by (metis \\<open>f c - f d = a * (c - d)\\<close> dbl_simps(3))\n  have \"f (c + 6) - f d = (a * (c + 6) + b) - (a * d + b)\"\n    using assms(1) by auto\n  then have \"f (c + 6) - f d = a * (c + 6 - d)\" by (auto simp: field_simps)\n  have \"c + 6 - d = (c - d) + 6\" by simp\n  then show \"f (c + 6) - f d = (6 * a) + e\" \n    using `a * (c - d) = e` by (metis \\<open>f (c + 6) - f d = a * (c + 6 - d)\\<close> add.commute diff_add_eq group_cancel.sub1 mult.commute ring_class.ring_distribs(1))\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "amc12b_2003_p9_2d": {"skill_name": "amc12b_2003_p9_2d", "marker": "theorem amc12b_2003_p9_2d:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real \\<Rightarrow> real\"\n  assumes \"\\<forall>x y. f x y = a * x + b * y\"\n    and \"f 6 (-2) - f 2 (-2) = 12\"\n  shows \"f 12 (-2) - f 2 (-2) = 30\"\nproof -\n  have \"f 6 (-2) - f 2 (-2) = (a * 6 + b * (-2)) - (a * 2 + b * (-2))\"\n    using assms(1) by auto\n  then have \"f 6 (-2) - f 2 (-2) = 4 * a\" by simp\n  have \"4 * a = 12\" using assms(2) by (metis \\<open>f 6 (-2) - f 2 (-2) = 4 * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f 12 (-2) - f 2 (-2) = (a * 12 + b * (-2)) - (a * 2 + b * (-2))\"\n    using assms(1) by auto\n  then have \"f 12 (-2) - f 2 (-2) = 10 * a\" by simp\n  have \"10 * a = 10 * 3\" using `a = 3` by simp\n  thus \"f 12 (-2) - f 2 (-2) = 30\" by (smt (verit) \\<open>f 12 (-2) - f 2 (-2) = 10 * a\\<close>)\nqed", "description": "-", "full_code": "theorem amc12b_2003_p9_2d:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real \\<Rightarrow> real\"\n  assumes \"\\<forall>x y. f x y = a * x + b * y\"\n    and \"f 6 (-2) - f 2 (-2) = 12\"\n  shows \"f 12 (-2) - f 2 (-2) = 30\"\nproof -\n  have \"f 6 (-2) - f 2 (-2) = (a * 6 + b * (-2)) - (a * 2 + b * (-2))\"\n    using assms(1) by auto\n  then have \"f 6 (-2) - f 2 (-2) = 4 * a\" by simp\n  have \"4 * a = 12\" using assms(2) by (metis \\<open>f 6 (-2) - f 2 (-2) = 4 * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f 12 (-2) - f 2 (-2) = (a * 12 + b * (-2)) - (a * 2 + b * (-2))\"\n    using assms(1) by auto\n  then have \"f 12 (-2) - f 2 (-2) = 10 * a\" by simp\n  have \"10 * a = 10 * 3\" using `a = 3` by simp\n  thus \"f 12 (-2) - f 2 (-2) = 30\" by (smt (verit) \\<open>f 12 (-2) - f 2 (-2) = 10 * a\\<close>)\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "amc12b_2003_p9_extended": {"skill_name": "amc12b_2003_p9_extended", "marker": "theorem amc12b_2003_p9_extended:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f 6 - f 2 = 12\"\n  shows \"f x - f 2 = (x - 2) * a\" \nproof -\n  have \"f x - f 2 = (a * x + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then show ?thesis by (auto simp: field_simps)\nqed", "description": "-", "full_code": "theorem amc12b_2003_p9_extended:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f 6 - f 2 = 12\"\n  shows \"f x - f 2 = (x - 2) * a\" \nproof -\n  have \"f x - f 2 = (a * x + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then show ?thesis by (auto simp: field_simps)\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "linear_function_property": {"skill_name": "linear_function_property", "marker": "theorem linear_function_property:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f (x1) - f (x2) = k\"\n  shows \"f (x3) - f (x2) = k' \\<Longrightarrow> k' = a * (x3 - x2)\"\n  using assms\nproof -\n  let ?diff = \"f (x1) - f (x2)\"\n  have \"?diff = (a * x1 + b) - (a * x2 + b)\" using assms(1) by simp\n  then have \"?diff = a * (x1 - x2)\" by (auto simp: field_simps)\n  assume \"f (x3) - f (x2) = k'\"\n  hence \"f (x3) - f (x2) = (a * x3 + b) - (a * x2 + b)\" using assms(1) by simp\n  thus \"k' = a * (x3 - x2)\" by (smt (verit) \\<open>f x3 - f x2 = k'\\<close> add_implies_diff diff_add_eq_diff_diff_swap right_diff_distrib')\nqed", "description": "-", "full_code": "theorem linear_function_property:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f (x1) - f (x2) = k\"\n  shows \"f (x3) - f (x2) = k' \\<Longrightarrow> k' = a * (x3 - x2)\"\n  using assms\nproof -\n  let ?diff = \"f (x1) - f (x2)\"\n  have \"?diff = (a * x1 + b) - (a * x2 + b)\" using assms(1) by simp\n  then have \"?diff = a * (x1 - x2)\" by (auto simp: field_simps)\n  assume \"f (x3) - f (x2) = k'\"\n  hence \"f (x3) - f (x2) = (a * x3 + b) - (a * x2 + b)\" using assms(1) by simp\n  thus \"k' = a * (x3 - x2)\" by (smt (verit) \\<open>f x3 - f x2 = k'\\<close> add_implies_diff diff_add_eq_diff_diff_swap right_diff_distrib')\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "linear_function_differenceV2": {"skill_name": "linear_function_differenceV2", "marker": "theorem linear_function_difference:\n  fixes a b c d :: real and f g :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\" \n      and \"\\<forall> x. g x = c * x + d\"\n      and \"f x1 - f x2 = g x1 - g x2\"\n  shows \"a * (x1 - x2) = c * (x1 - x2)\"\nproof -\n  have \"f x1 - f x2 = (a * x1 + b) - (a * x2 + b)\" using assms(1) by auto\n  then have \"f x1 - f x2 = a * (x1 - x2)\" by (auto simp: field_simps)\n  have \"g x1 - g x2 = (c * x1 + d) - (c * x2 + d)\" using assms(2) by auto\n  then have \"g x1 - g x2 = c * (x1 - x2)\" by (auto simp: field_simps)\n  have \"a * (x1 - x2) = c * (x1 - x2)\" using assms(3) by (metis \\<open>f x1 - f x2 = a * (x1 - x2)\\<close> \\<open>g x1 - g x2 = c * (x1 - x2)\\<close> mult_delta_right)\n  thus ?thesis by simp\nqed", "description": "-", "full_code": "theorem linear_function_difference:\n  fixes a b c d :: real and f g :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\" \n      and \"\\<forall> x. g x = c * x + d\"\n      and \"f x1 - f x2 = g x1 - g x2\"\n  shows \"a * (x1 - x2) = c * (x1 - x2)\"\nproof -\n  have \"f x1 - f x2 = (a * x1 + b) - (a * x2 + b)\" using assms(1) by auto\n  then have \"f x1 - f x2 = a * (x1 - x2)\" by (auto simp: field_simps)\n  have \"g x1 - g x2 = (c * x1 + d) - (c * x2 + d)\" using assms(2) by auto\n  then have \"g x1 - g x2 = c * (x1 - x2)\" by (auto simp: field_simps)\n  have \"a * (x1 - x2) = c * (x1 - x2)\" using assms(3) by (metis \\<open>f x1 - f x2 = a * (x1 - x2)\\<close> \\<open>g x1 - g x2 = c * (x1 - x2)\\<close> mult_delta_right)\n  thus ?thesis by simp\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "amc12b_2003_p9_extendedV2": {"skill_name": "amc12b_2003_p9_extendedV2", "marker": "theorem amc12b_2003_p9_extended:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f 6 - f 2 = 12\"\n  shows \"f (k + 6) - f (k + 2) = 4 * a\"\nproof -\n  have \"f 6 - f 2 = (a * 6 + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f 6 - f 2 = 4 * a\" by simp\n  have \"4 * a = 12\" using assms(2) by (metis \\<open>f 6 - f 2 = 4 * a\\<close> dbl_simps(3))\n  thus \"f (k + 6) - f (k + 2) = 4 * a\" \n    using assms(1) by (auto simp: algebra_simps)\nqed", "description": "-", "full_code": "theorem amc12b_2003_p9_extended:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f 6 - f 2 = 12\"\n  shows \"f (k + 6) - f (k + 2) = 4 * a\"\nproof -\n  have \"f 6 - f 2 = (a * 6 + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f 6 - f 2 = 4 * a\" by simp\n  have \"4 * a = 12\" using assms(2) by (metis \\<open>f 6 - f 2 = 4 * a\\<close> dbl_simps(3))\n  thus \"f (k + 6) - f (k + 2) = 4 * a\" \n    using assms(1) by (auto simp: algebra_simps)\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "amc12b_2003_p9_extendedV3": {"skill_name": "amc12b_2003_p9_extendedV3", "marker": "theorem amc12b_2003_p9_extended:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f 6 - f 2 = 12\"\n  shows \"f x - f 2 = (x - 2) * a\"\nproof -\n  have \"f 6 - f 2 = (a * 6 + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f 6 - f 2 = 4 * a\" by simp\n  have \"4 * a = 12\" using assms(2) by (metis \\<open>f 6 - f 2 = 4 * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f x - f 2 = (a * x + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f x - f 2 = (a * x - a * 2)\" by simp\n  then have \"f x - f 2 = (x - 2) * a\" by (simp add: algebra_simps)\n  thus ?thesis using `a = 3` by simp\nqed", "description": "-", "full_code": "theorem amc12b_2003_p9_extended:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f 6 - f 2 = 12\"\n  shows \"f x - f 2 = (x - 2) * a\"\nproof -\n  have \"f 6 - f 2 = (a * 6 + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f 6 - f 2 = 4 * a\" by simp\n  have \"4 * a = 12\" using assms(2) by (metis \\<open>f 6 - f 2 = 4 * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f x - f 2 = (a * x + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f x - f 2 = (a * x - a * 2)\" by simp\n  then have \"f x - f 2 = (x - 2) * a\" by (simp add: algebra_simps)\n  thus ?thesis using `a = 3` by simp\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "amc12b_2003_p9V2": {"skill_name": "amc12b_2003_p9V2", "marker": "theorem amc12b_2003_p9:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \" f 6 - f 2 = 12\"\n  shows \"f 12 - f 2 = 30\"\nproof -\n  have \"f 6 - f 2 = a * (6 - 2)\" using linear_function_difference assms by simp\n  then have \"4 * a = 12\" using assms(2) by auto\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f 12 - f 2 = a * (12 - 2)\" using linear_function_difference assms by simp\n  then have \"f 12 - f 2 = 10 * a\" by simp\n  have \"10 * a = 10 * 3\" using `a = 3` by simp\n  thus \"f 12 - f 2 = 30\" by (smt (verit) \\<open>f 12 - f 2 = 10 * a\\<close>)\nqed", "description": "-", "full_code": "lemma linear_function_difference:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n  shows \"f x - f y = a * (x - y)\"\nproof -\n  have \"f x - f y = (a * x + b) - (a * y + b)\" using assms by auto\n  then show ?thesis by (auto simp: field_simps)\nqed\n\ntheorem amc12b_2003_p9:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \" f 6 - f 2 = 12\"\n  shows \"f 12 - f 2 = 30\"\nproof -\n  have \"f 6 - f 2 = a * (6 - 2)\" using linear_function_difference assms by simp\n  then have \"4 * a = 12\" using assms(2) by auto\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f 12 - f 2 = a * (12 - 2)\" using linear_function_difference assms by simp\n  then have \"f 12 - f 2 = 10 * a\" by simp\n  have \"10 * a = 10 * 3\" using `a = 3` by simp\n  thus \"f 12 - f 2 = 30\" by (smt (verit) \\<open>f 12 - f 2 = 10 * a\\<close>)\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "absolute_value_difference": {"skill_name": "absolute_value_difference", "marker": "lemma absolute_value_difference:\n  fixes a b c :: real\n  assumes \"abs(a - b) < c\"\n  shows \"b - c < a \\<and> a < b + c\"\nproof -\n  have \"a - b < c\" and \"-(a - b) < c\" using assms by auto\n  then show ?thesis by (auto simp: algebra_simps)\nqed", "description": "-", "full_code": "lemma absolute_value_difference:\n  fixes a b c :: real\n  assumes \"abs(a - b) < c\"\n  shows \"b - c < a \\<and> a < b + c\"\nproof -\n  have \"a - b < c\" and \"-(a - b) < c\" using assms by auto\n  then show ?thesis by (auto simp: algebra_simps)\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "square_difference": {"skill_name": "square_difference", "marker": "lemma square_difference:\n  fixes a b :: real\n  shows \"(-a + -b)^2 = a^2 + 2*a*b + b^2\"\nproof -\n  have \"(-a + -b)^2 = (-a)^2 + 2 * (-a) * (-b) + (-b)^2\" by (simp add: power2_eq_square algebra_simps)\n  also have \"... = a^2 + 2 * a * b + b^2\" by (simp add: power2_eq_square algebra_simps)\n  finally show ?thesis by simp\nqed", "description": "-", "full_code": "lemma square_difference:\n  fixes a b :: real\n  shows \"(-a + -b)^2 = a^2 + 2*a*b + b^2\"\nproof -\n  have \"(-a + -b)^2 = (-a)^2 + 2 * (-a) * (-b) + (-b)^2\" by (simp add: power2_eq_square algebra_simps)\n  also have \"... = a^2 + 2 * a * b + b^2\" by (simp add: power2_eq_square algebra_simps)\n  finally show ?thesis by simp\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "amc12b_2003_p9V3": {"skill_name": "amc12b_2003_p9V3", "marker": "theorem amc12b_2003_p9:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall>x. f x = a * x + b\"\n    and \"f 6 - f 2 = 12\"\n  shows \"f 12 - f 2 = 30\"\nproof -\n  have \"f 6 - f 2 = a * (6 - 2)\" using linear_function_difference assms by auto\n  then have \"4 * a = 12\" using assms(2) by auto\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f 12 - f 2 = a * (12 - 2)\" using linear_function_difference assms by auto\n  then have \"f 12 - f 2 = 10 * a\" by simp\n  thus \"f 12 - f 2 = 30\" using `a = 3` by simp\nqed", "description": "-", "full_code": "lemma linear_function_difference:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall>x. f x = a * x + b\"\n  shows \"f x - f y = a * (x - y)\"\nproof -\n  have \"f x - f y = (a * x + b) - (a * y + b)\" using assms by auto\n  then show ?thesis by (auto simp: field_simps)\nqed\n\ntheorem amc12b_2003_p9:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall>x. f x = a * x + b\"\n    and \"f 6 - f 2 = 12\"\n  shows \"f 12 - f 2 = 30\"\nproof -\n  have \"f 6 - f 2 = a * (6 - 2)\" using linear_function_difference assms by auto\n  then have \"4 * a = 12\" using assms(2) by auto\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f 12 - f 2 = a * (12 - 2)\" using linear_function_difference assms by auto\n  then have \"f 12 - f 2 = 10 * a\" by simp\n  thus \"f 12 - f 2 = 30\" using `a = 3` by simp\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "amc12b_2003_p9_extendedV4": {"skill_name": "amc12b_2003_p9_extendedV4", "marker": "theorem amc12b_2003_p9_extended:\n  fixes a b c :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f 6 - f 2 = 12\"\n    and \"f 10 - f 4 = 24\"\n  shows \"f 12 - f 2 = 30\"\nproof -\n  have \"f 6 - f 2 = (a * 6 + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f 6 - f 2 = 4 * a\" by simp\n  have \"4 * a = 12\" using assms(2) by (metis \\<open>f 6 - f 2 = 4 * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f 10 - f 4 = (a * 10 + b) - (a * 4 + b)\"\n    using assms(1) by auto\n  then have \"f 10 - f 4 = 6 * a\" by simp\n  have \"6 * a = 24\" using assms(3) by (metis \\<open>f 10 - f 4 = 6 * a\\<close> dbl_simps(3))\n  then have \"a = 4\" by (simp add: divide_simps)\n  have \"f 12 - f 2 = (a * 12 + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f 12 - f 2 = 10 * a\" by simp\n  have \"10 * a = 10 * 3\" using `a = 3` by simp\n  thus \"f 12 - f 2 = 30\" by (smt (verit) \\<open>f 12 - f 2 = 10 * a\\<close>)\nqed", "description": "-", "full_code": "theorem amc12b_2003_p9_extended:\n  fixes a b c :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f 6 - f 2 = 12\"\n    and \"f 10 - f 4 = 24\"\n  shows \"f 12 - f 2 = 30\"\nproof -\n  have \"f 6 - f 2 = (a * 6 + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f 6 - f 2 = 4 * a\" by simp\n  have \"4 * a = 12\" using assms(2) by (metis \\<open>f 6 - f 2 = 4 * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f 10 - f 4 = (a * 10 + b) - (a * 4 + b)\"\n    using assms(1) by auto\n  then have \"f 10 - f 4 = 6 * a\" by simp\n  have \"6 * a = 24\" using assms(3) by (metis \\<open>f 10 - f 4 = 6 * a\\<close> dbl_simps(3))\n  then have \"a = 4\" by (simp add: divide_simps)\n  have \"f 12 - f 2 = (a * 12 + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f 12 - f 2 = 10 * a\" by simp\n  have \"10 * a = 10 * 3\" using `a = 3` by simp\n  thus \"f 12 - f 2 = 30\" by (smt (verit) \\<open>f 12 - f 2 = 10 * a\\<close>)\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "amc12b_2003_p9_general": {"skill_name": "amc12b_2003_p9_general", "marker": "theorem amc12b_2003_p9_general:\n  fixes a b c :: real and f :: \"real \\<Rightarrow> real \\<Rightarrow> real\"\n  assumes \"\\<forall> x y. f x y = a * x + b * y + c\"\n    and \"f 6 0 - f 2 0 = 12\"\n  shows \"f 12 0 - f 2 0 = 30\"\nproof -\n  have \"f 6 0 - f 2 0 = (a * 6 + b * 0 + c) - (a * 2 + b * 0 + c)\"\n    using assms(1) by auto\n  then have \"f 6 0 - f 2 0 = 4 * a\" by simp\n  have \"4 * a = 12\" using assms(2) by (metis \\<open>f 6 0 - f 2 0 = 4 * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f 12 0 - f 2 0 = (a * 12 + b * 0 + c) - (a * 2 + b * 0 + c)\"\n    using assms(1) by auto\n  then have \"f 12 0 - f 2 0 = 10 * a\" by simp\n  have \"10 * a = 10 * 3\" using `a = 3` by simp\n  thus \"f 12 0 - f 2 0 = 30\" by (smt (verit) \\<open>f 12 0 - f 2 0 = 10 * a\\<close>)\nqed", "description": "-", "full_code": "theorem amc12b_2003_p9_general:\n  fixes a b c :: real and f :: \"real \\<Rightarrow> real \\<Rightarrow> real\"\n  assumes \"\\<forall> x y. f x y = a * x + b * y + c\"\n    and \"f 6 0 - f 2 0 = 12\"\n  shows \"f 12 0 - f 2 0 = 30\"\nproof -\n  have \"f 6 0 - f 2 0 = (a * 6 + b * 0 + c) - (a * 2 + b * 0 + c)\"\n    using assms(1) by auto\n  then have \"f 6 0 - f 2 0 = 4 * a\" by simp\n  have \"4 * a = 12\" using assms(2) by (metis \\<open>f 6 0 - f 2 0 = 4 * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f 12 0 - f 2 0 = (a * 12 + b * 0 + c) - (a * 2 + b * 0 + c)\"\n    using assms(1) by auto\n  then have \"f 12 0 - f 2 0 = 10 * a\" by simp\n  have \"10 * a = 10 * 3\" using `a = 3` by simp\n  thus \"f 12 0 - f 2 0 = 30\" by (smt (verit) \\<open>f 12 0 - f 2 0 = 10 * a\\<close>)\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "linear_function_differenceV3": {"skill_name": "linear_function_differenceV3", "marker": "lemma linear_function_difference:\n  fixes m b x1 x2 :: real\n  assumes \"\\<forall>x. f x = m * x + b\"\n  shows \"f x1 - f x2 = m * (x1 - x2)\"\nproof -\n  have \"f x1 - f x2 = (m * x1 + b) - (m * x2 + b)\"\n    using assms by simp\n  also have \"... = m * x1 - m * x2\" by simp\n  also have \"... = m * (x1 - x2)\" by (simp add: field_simps)\n  finally show ?thesis .\nqed", "description": "-", "full_code": "lemma linear_function_difference:\n  fixes m b x1 x2 :: real\n  assumes \"\\<forall>x. f x = m * x + b\"\n  shows \"f x1 - f x2 = m * (x1 - x2)\"\nproof -\n  have \"f x1 - f x2 = (m * x1 + b) - (m * x2 + b)\"\n    using assms by simp\n  also have \"... = m * x1 - m * x2\" by simp\n  also have \"... = m * (x1 - x2)\" by (simp add: field_simps)\n  finally show ?thesis .\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "linear_function_differenceV4": {"skill_name": "linear_function_differenceV4", "marker": "lemma linear_function_difference:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"x1 < x2\"\n  shows \"f x2 - f x1 = a * (x2 - x1)\"\nproof -\n  have \"f x2 - f x1 = (a * x2 + b) - (a * x1 + b)\"\n    using assms(1) by auto\n  then show ?thesis by (auto simp: field_simps)\nqed", "description": "-", "full_code": "lemma linear_function_difference:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"x1 < x2\"\n  shows \"f x2 - f x1 = a * (x2 - x1)\"\nproof -\n  have \"f x2 - f x1 = (a * x2 + b) - (a * x1 + b)\"\n    using assms(1) by auto\n  then show ?thesis by (auto simp: field_simps)\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "linear_function_properties": {"skill_name": "linear_function_properties", "marker": "theorem linear_function_properties:\n  fixes m1 m2 b x1 x2 y1 y2 :: real\n  assumes \"\\<forall> x y. f x y = m1 * x + m2 * y + b\"\n  shows \"f x1 y1 - f x2 y2 = m1 * (x1 - x2) + m2 * (y1 - y2)\"\n  and \"f x1 y1 = f x2 y2 \\<longleftrightarrow> (x1 - x2) * m1 + (y1 - y2) * m2 = 0\"\nproof -\n  have \"f x1 y1 - f x2 y2 = (m1 * x1 + m2 * y1 + b) - (m1 * x2 + m2 * y2 + b)\"\n    using assms by simp\n  also have \"... = m1 * (x1 - x2) + m2 * (y1 - y2)\" \n    by (simp add: algebra_simps)\n  ultimately show \"f x1 y1 - f x2 y2 = m1 * (x1 - x2) + m2 * (y1 - y2)\" by simp\n  show \"f x1 y1 = f x2 y2 \\<longleftrightarrow> (x1 - x2) * m1 + (y1 - y2) * m2 = 0\"\n  proof\n    assume \"f x1 y1 = f x2 y2\"\n    then have \"m1 * x1 + m2 * y1 + b = m1 * x2 + m2 * y2 + b\" by (simp add: assms)\n    thus \"(x1 - x2) * m1 + (y1 - y2) * m2 = 0\" by (simp add: algebra_simps)\n  next\n    assume \"(x1 - x2) * m1 + (y1 - y2) * m2 = 0\"\n    then have \"m1 * x1 + m2 * y1 = m1 * x2 + m2 * y2\" by (simp add: algebra_simps)\n    thus \"f x1 y1 = f x2 y2\" by (simp add: assms)\n  qed\nqed", "description": "-", "full_code": "theorem linear_function_properties:\n  fixes m1 m2 b x1 x2 y1 y2 :: real\n  assumes \"\\<forall> x y. f x y = m1 * x + m2 * y + b\"\n  shows \"f x1 y1 - f x2 y2 = m1 * (x1 - x2) + m2 * (y1 - y2)\"\n  and \"f x1 y1 = f x2 y2 \\<longleftrightarrow> (x1 - x2) * m1 + (y1 - y2) * m2 = 0\"\nproof -\n  have \"f x1 y1 - f x2 y2 = (m1 * x1 + m2 * y1 + b) - (m1 * x2 + m2 * y2 + b)\"\n    using assms by simp\n  also have \"... = m1 * (x1 - x2) + m2 * (y1 - y2)\" \n    by (simp add: algebra_simps)\n  ultimately show \"f x1 y1 - f x2 y2 = m1 * (x1 - x2) + m2 * (y1 - y2)\" by simp\n  show \"f x1 y1 = f x2 y2 \\<longleftrightarrow> (x1 - x2) * m1 + (y1 - y2) * m2 = 0\"\n  proof\n    assume \"f x1 y1 = f x2 y2\"\n    then have \"m1 * x1 + m2 * y1 + b = m1 * x2 + m2 * y2 + b\" by (simp add: assms)\n    thus \"(x1 - x2) * m1 + (y1 - y2) * m2 = 0\" by (simp add: algebra_simps)\n  next\n    assume \"(x1 - x2) * m1 + (y1 - y2) * m2 = 0\"\n    then have \"m1 * x1 + m2 * y1 = m1 * x2 + m2 * y2\" by (simp add: algebra_simps)\n    thus \"f x1 y1 = f x2 y2\" by (simp add: assms)\n  qed\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "amc12b_2003_p9_generalizedV2": {"skill_name": "amc12b_2003_p9_generalizedV2", "marker": "theorem amc12b_2003_p9_generalized:\n  fixes a b x y z :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f x - f y = z\"\n  shows \"f (x + 6) - f y = (x + 6 - y) * a\"\nproof -\n  have \"f (x + 6) - f y = (a * (x + 6) + b) - (a * y + b)\"\n    using assms(1) by auto\n  then have \"f (x + 6) - f y = a * (x + 6 - y)\" by (auto simp: field_simps)\n  thus ?thesis by simp\nqed", "description": "-", "full_code": "theorem amc12b_2003_p9_generalized:\n  fixes a b x y z :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f x - f y = z\"\n  shows \"f (x + 6) - f y = (x + 6 - y) * a\"\nproof -\n  have \"f (x + 6) - f y = (a * (x + 6) + b) - (a * y + b)\"\n    using assms(1) by auto\n  then have \"f (x + 6) - f y = a * (x + 6 - y)\" by (auto simp: field_simps)\n  thus ?thesis by simp\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "linear_function_differenceV5": {"skill_name": "linear_function_differenceV5", "marker": "theorem linear_function_difference:\n  fixes a b x1 x2 :: real\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"x2 - x1 = d\"\n  shows \"f x2 - f x1 = a * d\"\nproof -\n  have \"f x2 - f x1 = (a * x2 + b) - (a * x1 + b)\" \n    using assms(1) by auto\n  then have \"f x2 - f x1 = a * (x2 - x1)\" by (auto simp: field_simps)\n  then show ?thesis using assms(2) by simp\nqed", "description": "-", "full_code": "theorem linear_function_difference:\n  fixes a b x1 x2 :: real\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"x2 - x1 = d\"\n  shows \"f x2 - f x1 = a * d\"\nproof -\n  have \"f x2 - f x1 = (a * x2 + b) - (a * x1 + b)\" \n    using assms(1) by auto\n  then have \"f x2 - f x1 = a * (x2 - x1)\" by (auto simp: field_simps)\n  then show ?thesis using assms(2) by simp\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "amc12b_2003_p9_multidimensional": {"skill_name": "amc12b_2003_p9_multidimensional", "marker": "theorem amc12b_2003_p9_multidimensional:\n  fixes a :: real and b :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall>x. b x = a * x + f\"\n    and \"b (6::real) - b (2::real) = 12\"\n  shows \"b (12::real) - b (2::real) = 30\"\nproof -\n  have \"b (6::real) - b (2::real) = (a * 6 + f) - (a * 2 + f)\"\n    using assms(1) by auto\n  then have \"b (6::real) - b (2::real) = 4 * a\" by simp\n  have \"4 * a = 12\" using assms(2) by (metis \\<open>b (6::real) - b (2::real) = 4 * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"b (12::real) - b (2::real) = (a * 12 + f) - (a * 2 + f)\"\n    using assms(1) by auto\n  then have \"b (12::real) - b (2::real) = 10 * a\" by simp\n  have \"10 * a = 30\" using `a = 3` by simp\n  thus \"b (12::real) - b (2::real) = 30\" by (smt (verit) \\<open>b (12::real) - b (2::real) = 10 * a\\<close>)\nqed", "description": "-", "full_code": "theorem amc12b_2003_p9_multidimensional:\n  fixes a :: real and b :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall>x. b x = a * x + f\"\n    and \"b (6::real) - b (2::real) = 12\"\n  shows \"b (12::real) - b (2::real) = 30\"\nproof -\n  have \"b (6::real) - b (2::real) = (a * 6 + f) - (a * 2 + f)\"\n    using assms(1) by auto\n  then have \"b (6::real) - b (2::real) = 4 * a\" by simp\n  have \"4 * a = 12\" using assms(2) by (metis \\<open>b (6::real) - b (2::real) = 4 * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"b (12::real) - b (2::real) = (a * 12 + f) - (a * 2 + f)\"\n    using assms(1) by auto\n  then have \"b (12::real) - b (2::real) = 10 * a\" by simp\n  have \"10 * a = 30\" using `a = 3` by simp\n  thus \"b (12::real) - b (2::real) = 30\" by (smt (verit) \\<open>b (12::real) - b (2::real) = 10 * a\\<close>)\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "linear_function_differenceV6": {"skill_name": "linear_function_differenceV6", "marker": "lemma linear_function_difference:\n  fixes a b x y :: real\n  assumes \"f x = a * x + b\" and \"f y = a * y + b\"\n  shows \"f x - f y = a * (x - y)\"\nproof -\n  have \"f x - f y = (a * x + b) - (a * y + b)\" using assms by auto\n  then show ?thesis by (auto simp: field_simps)\nqed", "description": "-", "full_code": "lemma linear_function_difference:\n  fixes a b x y :: real\n  assumes \"f x = a * x + b\" and \"f y = a * y + b\"\n  shows \"f x - f y = a * (x - y)\"\nproof -\n  have \"f x - f y = (a * x + b) - (a * y + b)\" using assms by auto\n  then show ?thesis by (auto simp: field_simps)\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "amc12b_2003_p9_evolved": {"skill_name": "amc12b_2003_p9_evolved", "marker": "theorem amc12b_2003_p9_evolved:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f 6 - f 2 = 12\"\n  shows \"f 12 - f 2 = 30\"\nproof -\n  have \"f 6 - f 2 = (a * 6 + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f 6 - f 2 = 4 * a\" by simp\n  then have \"4 * a = 12\" using assms(2) by (metis)\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f 12 - f 2 = (a * 12 + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f 12 - f 2 = 10 * a\" by simp\n  have \"10 * a = 10 * 3\" using `a = 3` by simp\n  thus \"f 12 - f 2 = 30\" by (smt (verit) \\<open>f 12 - f 2 = 10 * a\\<close>)\nqed", "description": "-", "full_code": "theorem amc12b_2003_p9_evolved:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f 6 - f 2 = 12\"\n  shows \"f 12 - f 2 = 30\"\nproof -\n  have \"f 6 - f 2 = (a * 6 + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f 6 - f 2 = 4 * a\" by simp\n  then have \"4 * a = 12\" using assms(2) by (metis)\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f 12 - f 2 = (a * 12 + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f 12 - f 2 = 10 * a\" by simp\n  have \"10 * a = 10 * 3\" using `a = 3` by simp\n  thus \"f 12 - f 2 = 30\" by (smt (verit) \\<open>f 12 - f 2 = 10 * a\\<close>)\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "amc12b_2003_p9_evolvedV2": {"skill_name": "amc12b_2003_p9_evolvedV2", "marker": "theorem amc12b_2003_p9_evolved:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f 6 - f 2 = 12\"\n    and \"f 10 - f 2 = 24\"\n  shows \"f 12 - f 2 = 30\"\nproof -\n  have \"f 6 - f 2 = (a * 6 + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f 6 - f 2 = 4 * a\" by simp\n  have \"4 * a = 12\" using assms(2) by (metis \\<open>f 6 - f 2 = 4 * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f 10 - f 2 = (a * 10 + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f 10 - f 2 = 8 * a\" by simp\n  have \"8 * a = 8 * 3\" using `a = 3` by simp\n  thus \"f 12 - f 2 = 30\"\n  proof -\n    have \"f 12 - f 2 = (a * 12 + b) - (a * 2 + b)\" using assms(1) by auto\n    then have \"f 12 - f 2 = 10 * a\" by simp\n    have \"10 * a = 10 * 3\" using `a = 3` by simp\n    thus \"f 12 - f 2 = 30\" by (smt (verit) \\<open>f 12 - f 2 = 10 * a\\<close>)\n  qed\nqed", "description": "-", "full_code": "theorem amc12b_2003_p9_evolved:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f 6 - f 2 = 12\"\n    and \"f 10 - f 2 = 24\"\n  shows \"f 12 - f 2 = 30\"\nproof -\n  have \"f 6 - f 2 = (a * 6 + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f 6 - f 2 = 4 * a\" by simp\n  have \"4 * a = 12\" using assms(2) by (metis \\<open>f 6 - f 2 = 4 * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f 10 - f 2 = (a * 10 + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f 10 - f 2 = 8 * a\" by simp\n  have \"8 * a = 8 * 3\" using `a = 3` by simp\n  thus \"f 12 - f 2 = 30\"\n  proof -\n    have \"f 12 - f 2 = (a * 12 + b) - (a * 2 + b)\" using assms(1) by auto\n    then have \"f 12 - f 2 = 10 * a\" by simp\n    have \"10 * a = 10 * 3\" using `a = 3` by simp\n    thus \"f 12 - f 2 = 30\" by (smt (verit) \\<open>f 12 - f 2 = 10 * a\\<close>)\n  qed\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "amc12b_2003_p9_evolvedV3": {"skill_name": "amc12b_2003_p9_evolvedV3", "marker": "theorem amc12b_2003_p9_evolved:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f 6 - f 2 = 12\"\n  shows \"f (x + 10) - f (x) = 5 * (f (x + 2) - f (x))\"\nproof -\n  have \"f 6 - f 2 = (a * 6 + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f 6 - f 2 = 4 * a\" by simp\n  have \"4 * a = 12\" using assms(2) by (metis \\<open>f 6 - f 2 = 4 * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f (x + 10) - f (x) = (a * (x + 10) + b) - (a * x + b)\"\n    using assms(1) by auto\n  then have \"f (x + 10) - f (x) = a * 10\" by (auto simp: field_simps)\n  have \"f (x + 2) - f (x) = (a * (x + 2) + b) - (a * x + b)\"\n    using assms(1) by auto\n  then have \"f (x + 2) - f (x) = a * 2\" by (auto simp: field_simps)\n  have \"5 * (f (x + 2) - f (x)) = 5 * (a * 2)\" by (metis \\<open>f (x + 2) - f x = a * 2\\<close> uminus_add_conv_diff)\n  have \"5 * (f (x + 2) - f (x)) = 10 * a\" by (smt (verit) \\<open>f (x + 2) - f x = a * 2\\<close>)\n  thus \"f (x + 10) - f (x) = 5 * (f (x + 2) - f (x))\" \n    using `a = 3` by (metis \\<open>f (x + 10) - f x = a * 10\\<close> \\<open>f (x + 2) - f x = a * 2\\<close> dbl_def dbl_inc_simps(5) dbl_simps(3) dbl_simps(5) mult.commute mult_2_right)\nqed", "description": "-", "full_code": "theorem amc12b_2003_p9_evolved:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f 6 - f 2 = 12\"\n  shows \"f (x + 10) - f (x) = 5 * (f (x + 2) - f (x))\"\nproof -\n  have \"f 6 - f 2 = (a * 6 + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f 6 - f 2 = 4 * a\" by simp\n  have \"4 * a = 12\" using assms(2) by (metis \\<open>f 6 - f 2 = 4 * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f (x + 10) - f (x) = (a * (x + 10) + b) - (a * x + b)\"\n    using assms(1) by auto\n  then have \"f (x + 10) - f (x) = a * 10\" by (auto simp: field_simps)\n  have \"f (x + 2) - f (x) = (a * (x + 2) + b) - (a * x + b)\"\n    using assms(1) by auto\n  then have \"f (x + 2) - f (x) = a * 2\" by (auto simp: field_simps)\n  have \"5 * (f (x + 2) - f (x)) = 5 * (a * 2)\" by (metis \\<open>f (x + 2) - f x = a * 2\\<close> uminus_add_conv_diff)\n  have \"5 * (f (x + 2) - f (x)) = 10 * a\" by (smt (verit) \\<open>f (x + 2) - f x = a * 2\\<close>)\n  thus \"f (x + 10) - f (x) = 5 * (f (x + 2) - f (x))\" \n    using `a = 3` by (metis \\<open>f (x + 10) - f x = a * 10\\<close> \\<open>f (x + 2) - f x = a * 2\\<close> dbl_def dbl_inc_simps(5) dbl_simps(3) dbl_simps(5) mult.commute mult_2_right)\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "linear_function_differenceV7": {"skill_name": "linear_function_differenceV7", "marker": "theorem linear_function_difference:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f x1 - f x2 = delta\"\n  shows \"f x3 - f x2 = (x3 - x2) * a\"\nproof -\n  have \"f x1 - f x2 = (a * x1 + b) - (a * x2 + b)\"\n    using assms(1) by auto\n  then have \"f x1 - f x2 = (x1 - x2) * a\" by (auto simp: field_simps)\n  then have \"delta = (x1 - x2) * a\" using assms(2) by (metis)\n  have \"f x3 - f x2 = (a * x3 + b) - (a * x2 + b)\"\n    using assms(1) by auto\n  then have \"f x3 - f x2 = (x3 - x2) * a\" by (auto simp: field_simps)\n  thus ?thesis by simp\nqed", "description": "-", "full_code": "theorem linear_function_difference:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f x1 - f x2 = delta\"\n  shows \"f x3 - f x2 = (x3 - x2) * a\"\nproof -\n  have \"f x1 - f x2 = (a * x1 + b) - (a * x2 + b)\"\n    using assms(1) by auto\n  then have \"f x1 - f x2 = (x1 - x2) * a\" by (auto simp: field_simps)\n  then have \"delta = (x1 - x2) * a\" using assms(2) by (metis)\n  have \"f x3 - f x2 = (a * x3 + b) - (a * x2 + b)\"\n    using assms(1) by auto\n  then have \"f x3 - f x2 = (x3 - x2) * a\" by (auto simp: field_simps)\n  thus ?thesis by simp\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "amc12b_2003_p9_evolvedV4": {"skill_name": "amc12b_2003_p9_evolvedV4", "marker": "theorem amc12b_2003_p9_evolved:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f 6 - f 2 = 12\"\n  shows \"f 12 - f 2 = 30\"\nproof -\n  have \"f 6 - f 2 = (a * 6 + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f 6 - f 2 = 4 * a\" by simp\n  have \"4 * a = 12\" using assms(2) by (metis \\<open>f 6 - f 2 = 4 * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f x = 3 * x + b\" for x by (simp add: assms(1) `a = 3`)\n  have \"f 12 - f 2 = (3 * 12 + b) - (3 * 2 + b)\"\n    using assms(1) by (metis \\<open>\\<And>x. f x = 3 * x + b\\<close> uminus_add_conv_diff)\n  then have \"f 12 - f 2 = 30\" by simp\n  thus \"f 12 - f 2 = 30\" by simp\nqed", "description": "-", "full_code": "theorem amc12b_2003_p9_evolved:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f 6 - f 2 = 12\"\n  shows \"f 12 - f 2 = 30\"\nproof -\n  have \"f 6 - f 2 = (a * 6 + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f 6 - f 2 = 4 * a\" by simp\n  have \"4 * a = 12\" using assms(2) by (metis \\<open>f 6 - f 2 = 4 * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f x = 3 * x + b\" for x by (simp add: assms(1) `a = 3`)\n  have \"f 12 - f 2 = (3 * 12 + b) - (3 * 2 + b)\"\n    using assms(1) by (metis \\<open>\\<And>x. f x = 3 * x + b\\<close> uminus_add_conv_diff)\n  then have \"f 12 - f 2 = 30\" by simp\n  thus \"f 12 - f 2 = 30\" by simp\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "amc12b_2003_p9_generalizedV3": {"skill_name": "amc12b_2003_p9_generalizedV3", "marker": "theorem amc12b_2003_p9_generalized:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = m * x + n\"  \n    and \"f x1 - f x2 = d\"  \n  shows \"f x3 - f x2 = (x3 - x2) * m\"  \nproof -\n  have \"f x1 - f x2 = (m * x1 + n) - (m * x2 + n)\"\n    using assms(1) by auto\n  then have \"f x1 - f x2 = m * (x1 - x2)\" by (auto simp: field_simps)\n  have \"m * (x1 - x2) = d\" using assms(2) by (metis \\<open>f x1 - f x2 = m * (x1 - x2)\\<close> dbl_simps(3))\n  have \"f x3 - f x2 = (m * x3 + n) - (m * x2 + n)\"\n    using assms(1) by auto\n  then have \"f x3 - f x2 = m * (x3 - x2)\" by (auto simp: field_simps)\n  thus \"f x3 - f x2 = (x3 - x2) * m\" by simp\nqed", "description": "-", "full_code": "theorem amc12b_2003_p9_generalized:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = m * x + n\"  \n    and \"f x1 - f x2 = d\"  \n  shows \"f x3 - f x2 = (x3 - x2) * m\"  \nproof -\n  have \"f x1 - f x2 = (m * x1 + n) - (m * x2 + n)\"\n    using assms(1) by auto\n  then have \"f x1 - f x2 = m * (x1 - x2)\" by (auto simp: field_simps)\n  have \"m * (x1 - x2) = d\" using assms(2) by (metis \\<open>f x1 - f x2 = m * (x1 - x2)\\<close> dbl_simps(3))\n  have \"f x3 - f x2 = (m * x3 + n) - (m * x2 + n)\"\n    using assms(1) by auto\n  then have \"f x3 - f x2 = m * (x3 - x2)\" by (auto simp: field_simps)\n  thus \"f x3 - f x2 = (x3 - x2) * m\" by simp\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "amc12b_2003_p9_multi": {"skill_name": "amc12b_2003_p9_multi", "marker": "theorem amc12b_2003_p9_multi:\n  fixes a b :: \"real\" and f :: \"real list \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * (hd x) + b\"  \n    and \"f [6] - f [2] = 12\"  \n  shows \"f [12] - f [2] = 30\"\nproof -\n  have \"f [6] - f [2] = (a * (hd [6]) + b) - (a * (hd [2]) + b)\"\n    using assms(1) by auto\n  then have \"f [6] - f [2] = 4 * a\" by simp\n  have \"4 * a = 12\" using assms(2) by (metis \\<open>f [6] - f [2] = 4 * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f [12] - f [2] = (a * (hd [12]) + b) - (a * (hd [2]) + b)\"\n    using assms(1) by auto\n  then have \"f [12] - f [2] = 10 * a\" by simp\n  have \"10 * a = 10 * 3\" using `a = 3` by simp\n  thus \"f [12] - f [2] = 30\" by (smt (verit) \\<open>f [12] - f [2] = 10 * a\\<close>)\nqed", "description": "-", "full_code": "theorem amc12b_2003_p9_multi:\n  fixes a b :: \"real\" and f :: \"real list \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * (hd x) + b\"  \n    and \"f [6] - f [2] = 12\"  \n  shows \"f [12] - f [2] = 30\"\nproof -\n  have \"f [6] - f [2] = (a * (hd [6]) + b) - (a * (hd [2]) + b)\"\n    using assms(1) by auto\n  then have \"f [6] - f [2] = 4 * a\" by simp\n  have \"4 * a = 12\" using assms(2) by (metis \\<open>f [6] - f [2] = 4 * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f [12] - f [2] = (a * (hd [12]) + b) - (a * (hd [2]) + b)\"\n    using assms(1) by auto\n  then have \"f [12] - f [2] = 10 * a\" by simp\n  have \"10 * a = 10 * 3\" using `a = 3` by simp\n  thus \"f [12] - f [2] = 30\" by (smt (verit) \\<open>f [12] - f [2] = 10 * a\\<close>)\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "linear_function_differenceV8": {"skill_name": "linear_function_differenceV8", "marker": "theorem linear_function_difference:\n  fixes a b x y :: real\n  assumes \"\\<forall> z. f z = a * z + b\"\n    and \"f x - f y = (x - y) * a\"\n  shows \"f z - f y = (z - y) * a\"\nproof -\n  have \"f z - f y = (a * z + b) - (a * y + b)\"\n    using assms(1) by auto\n  then have \"f z - f y = a * (z - y)\" by (auto simp: field_simps)\n  thus ?thesis by simp\nqed", "description": "-", "full_code": "theorem linear_function_difference:\n  fixes a b x y :: real\n  assumes \"\\<forall> z. f z = a * z + b\"\n    and \"f x - f y = (x - y) * a\"\n  shows \"f z - f y = (z - y) * a\"\nproof -\n  have \"f z - f y = (a * z + b) - (a * y + b)\"\n    using assms(1) by auto\n  then have \"f z - f y = a * (z - y)\" by (auto simp: field_simps)\n  thus ?thesis by simp\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "linear_difference": {"skill_name": "linear_difference", "marker": "lemma linear_difference:\n  fixes a b x y :: real\n  assumes \"f x = a * x + b\" and \"f y = a * y + b\"\n  shows \"f x - f y = a * (x - y)\"\nproof -\n  have \"f x - f y = (a * x + b) - (a * y + b)\" using assms by auto\n  then show ?thesis by (auto simp: field_simps)\nqed", "description": "-", "full_code": "lemma linear_difference:\n  fixes a b x y :: real\n  assumes \"f x = a * x + b\" and \"f y = a * y + b\"\n  shows \"f x - f y = a * (x - y)\"\nproof -\n  have \"f x - f y = (a * x + b) - (a * y + b)\" using assms by auto\n  then show ?thesis by (auto simp: field_simps)\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "amc12b_2003_p9V4": {"skill_name": "amc12b_2003_p9V4", "marker": "theorem amc12b_2003_p9:\n  fixes a b ::real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f 6 - f 2 = 12\"\n  shows \"f 12 - f 2 = 30\"\nproof -\n  have \"f 6 - f 2 = a * (6 - 2)\" using linear_difference assms by auto\n  then have \"4 * a = 12\" using assms(2) by simp\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f 12 - f 2 = a * (12 - 2)\" using linear_difference assms by auto\n  then have \"f 12 - f 2 = 10 * a\" by simp\n  have \"10 * a = 10 * 3\" using `a = 3` by simp\n  thus \"f 12 - f 2 = 30\" by (smt (verit) \\<open>f 12 - f 2 = 10 * a\\<close>)\nqed", "description": "-", "full_code": "lemma linear_difference:\n  fixes a b x y :: real\n  assumes \"f x = a * x + b\" and \"f y = a * y + b\"\n  shows \"f x - f y = a * (x - y)\"\nproof -\n  have \"f x - f y = (a * x + b) - (a * y + b)\" using assms by auto\n  then show ?thesis by (auto simp: field_simps)\nqed\n\ntheorem amc12b_2003_p9:\n  fixes a b ::real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f 6 - f 2 = 12\"\n  shows \"f 12 - f 2 = 30\"\nproof -\n  have \"f 6 - f 2 = a * (6 - 2)\" using linear_difference assms by auto\n  then have \"4 * a = 12\" using assms(2) by simp\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f 12 - f 2 = a * (12 - 2)\" using linear_difference assms by auto\n  then have \"f 12 - f 2 = 10 * a\" by simp\n  have \"10 * a = 10 * 3\" using `a = 3` by simp\n  thus \"f 12 - f 2 = 30\" by (smt (verit) \\<open>f 12 - f 2 = 10 * a\\<close>)\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "amc12b_2003_p9_multiV2": {"skill_name": "amc12b_2003_p9_multiV2", "marker": "theorem amc12b_2003_p9_multi:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f m - f n = k\" \n    and \"k = a * (m - n)\"\n  shows \"f p - f n = a * (p - n)\"\nproof -\n  have \"f m - f n = (a * m + b) - (a * n + b)\"\n    using assms(1) by auto\n  then have \"f m - f n = a * (m - n)\" by (auto simp: field_simps)\n  then have \"a * (m - n) = k\" using assms(2) by (metis)\n  have \"f p - f n = (a * p + b) - (a * n + b)\"\n    using assms(1) by auto\n  then have \"f p - f n = a * (p - n)\" by (auto simp: field_simps)\n  thus ?thesis by simp\nqed", "description": "-", "full_code": "theorem amc12b_2003_p9_multi:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f m - f n = k\" \n    and \"k = a * (m - n)\"\n  shows \"f p - f n = a * (p - n)\"\nproof -\n  have \"f m - f n = (a * m + b) - (a * n + b)\"\n    using assms(1) by auto\n  then have \"f m - f n = a * (m - n)\" by (auto simp: field_simps)\n  then have \"a * (m - n) = k\" using assms(2) by (metis)\n  have \"f p - f n = (a * p + b) - (a * n + b)\"\n    using assms(1) by auto\n  then have \"f p - f n = a * (p - n)\" by (auto simp: field_simps)\n  thus ?thesis by simp\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "amc12b_2003_p9_generalizedV4": {"skill_name": "amc12b_2003_p9_generalizedV4", "marker": "theorem amc12b_2003_p9_generalized:\n  fixes a b x y z :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> t. f t = a * t + b\"\n    and \"f x - f y = (x - y) * a\"\n  shows \"f z - f y = (z - y) * a\"\nproof -\n  have \"f z - f y = (a * z + b) - (a * y + b)\"\n    using assms(1) by auto\n  then have \"f z - f y = a * (z - y)\" by (auto simp: field_simps)\n  thus ?thesis using assms(2) by simp\nqed", "description": "-", "full_code": "theorem amc12b_2003_p9_generalized:\n  fixes a b x y z :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> t. f t = a * t + b\"\n    and \"f x - f y = (x - y) * a\"\n  shows \"f z - f y = (z - y) * a\"\nproof -\n  have \"f z - f y = (a * z + b) - (a * y + b)\"\n    using assms(1) by auto\n  then have \"f z - f y = a * (z - y)\" by (auto simp: field_simps)\n  thus ?thesis using assms(2) by simp\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "amc12b_2003_p9_high_dimension": {"skill_name": "amc12b_2003_p9_high_dimension", "marker": "theorem amc12b_2003_p9_high_dimension:\n  fixes a :: \"real\" and b :: \"real\" and f :: \"real list \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * (x ! 0) + b\"  \n    and \"f [6, 0] - f [2, 0] = 12\"\n  shows \"f [12, 0] - f [2, 0] = 30\"\nproof -\n  have \"f [6, 0] - f [2, 0] = (a * (6) + b) - (a * (2) + b)\"\n    using assms(1) by auto\n  then have \"f [6, 0] - f [2, 0] = 4 * a\" by simp\n  have \"4 * a = 12\" using assms(2) by (metis \\<open>f [6, 0] - f [2, 0] = 4 * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f [12, 0] - f [2, 0] = (a * (12) + b) - (a * (2) + b)\"\n    using assms(1) by auto\n  then have \"f [12, 0] - f [2, 0] = 10 * a\" by simp\n  have \"10 * a = 10 * 3\" using `a = 3` by simp\n  thus \"f [12, 0] - f [2, 0] = 30\" by (smt (verit) \\<open>f [12, 0] - f [2, 0] = 10 * a\\<close>)\nqed", "description": "-", "full_code": "theorem amc12b_2003_p9_high_dimension:\n  fixes a :: \"real\" and b :: \"real\" and f :: \"real list \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * (x ! 0) + b\"  \n    and \"f [6, 0] - f [2, 0] = 12\"\n  shows \"f [12, 0] - f [2, 0] = 30\"\nproof -\n  have \"f [6, 0] - f [2, 0] = (a * (6) + b) - (a * (2) + b)\"\n    using assms(1) by auto\n  then have \"f [6, 0] - f [2, 0] = 4 * a\" by simp\n  have \"4 * a = 12\" using assms(2) by (metis \\<open>f [6, 0] - f [2, 0] = 4 * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f [12, 0] - f [2, 0] = (a * (12) + b) - (a * (2) + b)\"\n    using assms(1) by auto\n  then have \"f [12, 0] - f [2, 0] = 10 * a\" by simp\n  have \"10 * a = 10 * 3\" using `a = 3` by simp\n  thus \"f [12, 0] - f [2, 0] = 30\" by (smt (verit) \\<open>f [12, 0] - f [2, 0] = 10 * a\\<close>)\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "amc12b_2003_p9_multiV3": {"skill_name": "amc12b_2003_p9_multiV3", "marker": "theorem amc12b_2003_p9_multi:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real \\<Rightarrow> real\"\n  assumes \"\\<forall> x y. f x y = a * x + b * y\"\n    and \"f 6 0 - f 2 0 = 12\"\n  shows \"f 12 0 - f 2 0 = 30\"\nproof -\n  have \"f 6 0 - f 2 0 = (a * 6 + b * 0) - (a * 2 + b * 0)\"\n    using assms(1) by auto\n  then have \"f 6 0 - f 2 0 = 4 * a\" by simp\n  have \"4 * a = 12\" using assms(2) by (metis \\<open>f 6 0 - f 2 0 = 4 * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f 12 0 - f 2 0 = (a * 12 + b * 0) - (a * 2 + b * 0)\"\n    using assms(1) by auto\n  then have \"f 12 0 - f 2 0 = 10 * a\" by simp\n  have \"10 * a = 10 * 3\" using `a = 3` by simp\n  thus \"f 12 0 - f 2 0 = 30\" by (smt (verit) \\<open>f 12 0 - f 2 0 = 10 * a\\<close>)\nqed", "description": "-", "full_code": "theorem amc12b_2003_p9_multi:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real \\<Rightarrow> real\"\n  assumes \"\\<forall> x y. f x y = a * x + b * y\"\n    and \"f 6 0 - f 2 0 = 12\"\n  shows \"f 12 0 - f 2 0 = 30\"\nproof -\n  have \"f 6 0 - f 2 0 = (a * 6 + b * 0) - (a * 2 + b * 0)\"\n    using assms(1) by auto\n  then have \"f 6 0 - f 2 0 = 4 * a\" by simp\n  have \"4 * a = 12\" using assms(2) by (metis \\<open>f 6 0 - f 2 0 = 4 * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f 12 0 - f 2 0 = (a * 12 + b * 0) - (a * 2 + b * 0)\"\n    using assms(1) by auto\n  then have \"f 12 0 - f 2 0 = 10 * a\" by simp\n  have \"10 * a = 10 * 3\" using `a = 3` by simp\n  thus \"f 12 0 - f 2 0 = 30\" by (smt (verit) \\<open>f 12 0 - f 2 0 = 10 * a\\<close>)\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "linear_function_differenceV9": {"skill_name": "linear_function_differenceV9", "marker": "lemma linear_function_difference:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n  shows \"f x - f y = a * (x - y)\"\nproof -\n  let ?fx = \"f x\" and ?fy = \"f y\"\n  have \"?fx = a * x + b\" and \"?fy = a * y + b\" using assms by auto\n  then show ?thesis by (auto simp: field_simps)\nqed", "description": "-", "full_code": "lemma linear_function_difference:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n  shows \"f x - f y = a * (x - y)\"\nproof -\n  let ?fx = \"f x\" and ?fy = \"f y\"\n  have \"?fx = a * x + b\" and \"?fy = a * y + b\" using assms by auto\n  then show ?thesis by (auto simp: field_simps)\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "linear_function_differenceV10": {"skill_name": "linear_function_differenceV10", "marker": "lemma linear_function_difference:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall>x. f x = a * x + b\"\n  shows \"f x - f y = a * (x - y)\"\nproof -\n  have \"f x = a * x + b\" and \"f y = a * y + b\" using assms by auto\n  then show ?thesis by (simp add: algebra_simps)\nqed", "description": "-", "full_code": "lemma linear_function_difference:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall>x. f x = a * x + b\"\n  shows \"f x - f y = a * (x - y)\"\nproof -\n  have \"f x = a * x + b\" and \"f y = a * y + b\" using assms by auto\n  then show ?thesis by (simp add: algebra_simps)\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "amc12b_simple": {"skill_name": "amc12b_simple", "marker": "theorem amc12b_simple:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f 3 - f 1 = 6\"\n  shows \"f 5 - f 1 = 12\"\nproof -\n  have \"f 3 - f 1 = (a * 3 + b) - (a * 1 + b)\"\n    using assms(1) by auto\n  then have \"f 3 - f 1 = 2 * a\" by simp\n  have \"2 * a = 6\" using assms(2) by (metis \\<open>f 3 - f 1 = 2 * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f 5 - f 1 = (a * 5 + b) - (a * 1 + b)\"\n    using assms(1) by auto\n  then have \"f 5 - f 1 = 4 * a\" by simp\n  have \"4 * a = 4 * 3\" using `a = 3` by simp\n  thus \"f 5 - f 1 = 12\" by (smt (verit) \\<open>f 5 - f 1 = 4 * a\\<close>)\nqed", "description": "-", "full_code": "theorem amc12b_simple:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f 3 - f 1 = 6\"\n  shows \"f 5 - f 1 = 12\"\nproof -\n  have \"f 3 - f 1 = (a * 3 + b) - (a * 1 + b)\"\n    using assms(1) by auto\n  then have \"f 3 - f 1 = 2 * a\" by simp\n  have \"2 * a = 6\" using assms(2) by (metis \\<open>f 3 - f 1 = 2 * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f 5 - f 1 = (a * 5 + b) - (a * 1 + b)\"\n    using assms(1) by auto\n  then have \"f 5 - f 1 = 4 * a\" by simp\n  have \"4 * a = 4 * 3\" using `a = 3` by simp\n  thus \"f 5 - f 1 = 12\" by (smt (verit) \\<open>f 5 - f 1 = 4 * a\\<close>)\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "amc12b_2003_p9_generalizedV5": {"skill_name": "amc12b_2003_p9_generalizedV5", "marker": "theorem amc12b_2003_p9_generalized:\n  fixes a b c d :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f c - f d = e\"\n  shows \"f (c + 10) - f d = 10 * a + e\"\nproof -\n  have \"f c - f d = (a * c + b) - (a * d + b)\"\n    using assms(1) by auto\n  then have \"f c - f d = a * (c - d)\" by (auto simp: field_simps)\n  then have \"a * (c - d) = e\" using assms(2) by (metis)\n  have \"f (c + 10) - f d = (a * (c + 10) + b) - (a * d + b)\"\n    using assms(1) by auto\n  then have \"f (c + 10) - f d = a * (c + 10 - d)\" by (auto simp: field_simps)\n  then have \"f (c + 10) - f d = a * (c - d) + 10 * a\" by (simp add: algebra_simps)\n  thus ?thesis using `a * (c - d) = e` by simp\nqed", "description": "-", "full_code": "theorem amc12b_2003_p9_generalized:\n  fixes a b c d :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f c - f d = e\"\n  shows \"f (c + 10) - f d = 10 * a + e\"\nproof -\n  have \"f c - f d = (a * c + b) - (a * d + b)\"\n    using assms(1) by auto\n  then have \"f c - f d = a * (c - d)\" by (auto simp: field_simps)\n  then have \"a * (c - d) = e\" using assms(2) by (metis)\n  have \"f (c + 10) - f d = (a * (c + 10) + b) - (a * d + b)\"\n    using assms(1) by auto\n  then have \"f (c + 10) - f d = a * (c + 10 - d)\" by (auto simp: field_simps)\n  then have \"f (c + 10) - f d = a * (c - d) + 10 * a\" by (simp add: algebra_simps)\n  thus ?thesis using `a * (c - d) = e` by simp\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "linear_function_differenceV11": {"skill_name": "linear_function_differenceV11", "marker": "theorem linear_function_difference:\n  fixes a b x1 x2 :: real\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"x1 < x2\"\n  shows \"f x2 - f x1 = (x2 - x1) * a\"\nproof -\n  have \"f x2 - f x1 = (a * x2 + b) - (a * x1 + b)\" using assms(1) by auto\n  then show ?thesis by (auto simp: field_simps)\nqed", "description": "-", "full_code": "theorem linear_function_difference:\n  fixes a b x1 x2 :: real\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"x1 < x2\"\n  shows \"f x2 - f x1 = (x2 - x1) * a\"\nproof -\n  have \"f x2 - f x1 = (a * x2 + b) - (a * x1 + b)\" using assms(1) by auto\n  then show ?thesis by (auto simp: field_simps)\nqed", "origin": "amc12b_2003_p9", "update_count": 0}, "amc12b_2003_p9_extendedV5": {"skill_name": "amc12b_2003_p9_extendedV5", "marker": "theorem amc12b_2003_p9_extended:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f 6 - f 2 = 12\"\n  shows \"f n - f m = (n - m) * a\"\nproof -\n  have \"f 6 - f 2 = (a * 6 + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f 6 - f 2 = (6 - 2) * a\" by simp\n  have \"(6 - 2) * a = 12\" using assms(2) by (metis \\<open>f 6 - f 2 = (6 - 2) * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f n - f m = (a * n + b) - (a * m + b)\"\n    using assms(1) by auto\n  then have \"f n - f m = (n - m) * a\" by (auto simp: field_simps)\n  have \"f n - f m = (n - m) * 3\" using `a = 3` by (metis add.commute add_diff_cancel_left assms(1) diff_conv_add_uminus mult.commute right_diff_distrib uminus_add_conv_diff)\n  thus ?thesis by (metis \\<open>f n - f m = (n - m) * a\\<close> uminus_add_conv_diff)\nqed", "description": "-", "full_code": "theorem amc12b_2003_p9_extended:\n  fixes a b :: real and f :: \"real \\<Rightarrow> real\"\n  assumes \"\\<forall> x. f x = a * x + b\"\n    and \"f 6 - f 2 = 12\"\n  shows \"f n - f m = (n - m) * a\"\nproof -\n  have \"f 6 - f 2 = (a * 6 + b) - (a * 2 + b)\"\n    using assms(1) by auto\n  then have \"f 6 - f 2 = (6 - 2) * a\" by simp\n  have \"(6 - 2) * a = 12\" using assms(2) by (metis \\<open>f 6 - f 2 = (6 - 2) * a\\<close> dbl_simps(3))\n  then have \"a = 3\" by (simp add: divide_simps)\n  have \"f n - f m = (a * n + b) - (a * m + b)\"\n    using assms(1) by auto\n  then have \"f n - f m = (n - m) * a\" by (auto simp: field_simps)\n  have \"f n - f m = (n - m) * 3\" using `a = 3` by (metis add.commute add_diff_cancel_left assms(1) diff_conv_add_uminus mult.commute right_diff_distrib uminus_add_conv_diff)\n  thus ?thesis by (metis \\<open>f n - f m = (n - m) * a\\<close> uminus_add_conv_diff)\nqed", "origin": "amc12b_2003_p9", "update_count": 0}}