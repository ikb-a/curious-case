{"cal_log_value": {"skill_name": "cal_log_value", "marker": "lemma cal_log_value:\n  assumes \"a > 0\" and \"a \u2260 1\" and \"b > 0\" and \"log a b = c\"\n  shows \"b = a ^ c\"\nby (metis assms(1) assms(2) assms(3) assms(4) powr_log_cancel powr_realpow)", "description": "This skill calculates the value of a number given its logarithm. It is a general mathematical property and can be used in any context where logarithms are involved. The skill takes four arguments: two real numbers 'a' and 'b' which are greater than 0 and 'a' is not equal to 1, and a real number 'c' which is the logarithm base 'a' of 'b'. It returns the value of 'b', which is equal to 'a' raised to the power 'c'.", "full_code": "lemma cal_log_value:\n  assumes \"a > 0\" and \"a \u2260 1\" and \"b > 0\" and \"log a b = c\"\n  shows \"b = a ^ c\"\nby (metis assms(1) assms(2) assms(3) assms(4) powr_log_cancel powr_realpow)", "origin": "", "update_count": 0}, "mod_add_power": {"skill_name": "mod_add_power", "marker": "lemma mod_add_power:\n  fixes x n a b c :: nat\n  assumes \"n > 0\" \"b > 0\" \"c > 0\" \"x mod n = a\"\n  shows \"((x + b)^c) mod n = ((a + b)^c) mod n\"\nproof -\n  have \"(x + b)^c mod n = ((x mod n) + b)^c mod n\"\n    by (smt (verit) mod_add_left_eq power_mod)\n  also have \"... = (a + b)^c mod n\"\n    using assms(4) by auto\n  finally show ?thesis by auto\nqed", "description": "This skill is a mathematical property that states that if `x mod n = a`, then the modulus of the power of `(x + b)` and `(a + b)` with respect to `n` are equal. This skill can be used in any context where the modulus of the power of two numbers is required.", "full_code": "lemma mod_add_power:\n  fixes x n a b c :: nat\n  assumes \"n > 0\" \"b > 0\" \"c > 0\" \"x mod n = a\"\n  shows \"((x + b)^c) mod n = ((a + b)^c) mod n\"\nproof -\n  have \"(x + b)^c mod n = ((x mod n) + b)^c mod n\"\n    by (smt (verit) mod_add_left_eq power_mod)\n  also have \"... = (a + b)^c mod n\"\n    using assms(4) by auto\n  finally show ?thesis by auto\nqed", "origin": "", "update_count": 0}, "cancle_div": {"skill_name": "cancle_div", "marker": "lemma cancle_div:\n  fixes x a b c:: real\n  assumes \"x > 0\" \"a + b / x = c\"\n  shows \"a * x + b = c * x\"\nproof -\n  have \"x * (a + b / x) = c * x\"\n    using assms(2) by auto\n  then have \"x * a + x * (b / x) = c * x\"\n    by (simp add: distrib_left)\n  then show ?thesis\n    using assms(1) by (simp add: mult.commute)\nqed", "description": "This skill is a mathematical property that can be used to simplify expressions involving division and multiplication. If you have an equation of the form \"a + b / x = c\" for some real numbers a, b, c, and x (where x > 0), you can use this skill to transform the equation into \"a * x + b = c * x\". This can be useful in many mathematical proofs where simplification of expressions is required.", "full_code": "lemma cancle_div:\n  fixes x a b c:: real\n  assumes \"x > 0\" \"a + b / x = c\"\n  shows \"a * x + b = c * x\"\nproof -\n  have \"x * (a + b / x) = c * x\"\n    using assms(2) by auto\n  then have \"x * a + x * (b / x) = c * x\"\n    by (simp add: distrib_left)\n  then show ?thesis\n    using assms(1) by (simp add: mult.commute)\nqed", "origin": "", "update_count": 0}, "multi_distrib_complex": {"skill_name": "multi_distrib_complex", "marker": "lemma multi_distrib_complex:\n  fixes a b c d :: complex\n  shows \"(a + b) * (c + d) = a * c + a * d + b * c + b * d\"\n  by (simp add: distrib_left distrib_right)", "description": "This skill is a generalization of the distributive property of multiplication over addition for complex numbers. It can be used in any context where the distributive property of multiplication over addition for complex numbers is needed. To use this skill, you need to provide four complex numbers a, b, c, and d. The skill will then prove that the product of the sum of a and b and the sum of c and d is equal to the sum of the products of each pair of complex numbers.", "full_code": "lemma multi_distrib_complex:\n  fixes a b c d :: complex\n  shows \"(a + b) * (c + d) = a * c + a * d + b * c + b * d\"\n  by (simp add: distrib_left distrib_right)", "origin": "", "update_count": 0}, "cal_log_exp_value": {"skill_name": "cal_log_exp_value", "marker": "lemma cal_log_exp_value:\n  fixes a :: real\n  assumes \"a > 0\" \"a \u2260 1\" \"n > 0\"\n  shows \"log a (a^n) = n\"\nproof -\n  have c0: \"log a a = 1\"\n    by (simp add: assms(1) assms(2))\n  have \"log a (a^n) = n * (log a a)\"\n    using log_nat_power[of a a n] by (simp add: assms(1))\n  then have c1: \"log a (a^n) = n\"\n    using c0 by simp\n  then show ?thesis \n    by (simp add: c1)\nqed", "description": "This skill calculates the logarithm of a number raised to a power. It is a general mathematical property and can be used in any context where logarithms are involved. The skill takes three arguments: a real number 'a' which is greater than 0 and not equal to 1, and a positive integer 'n'. It returns the logarithm base 'a' of 'a' raised to the power 'n', which is equal to 'n'.", "full_code": "lemma cal_log_exp_value:\n  fixes a :: real\n  assumes \"a > 0\" \"a \u2260 1\" \"n > 0\"\n  shows \"log a (a^n) = n\"\nproof -\n  have c0: \"log a a = 1\"\n    by (simp add: assms(1) assms(2))\n  have \"log a (a^n) = n * (log a a)\"\n    using log_nat_power[of a a n] by (simp add: assms(1))\n  then have c1: \"log a (a^n) = n\"\n    using c0 by simp\n  then show ?thesis \n    by (simp add: c1)\nqed", "origin": "", "update_count": 0}, "a_times_vera": {"skill_name": "a_times_vera", "marker": "lemma a_times_vera:\n  fixes a :: real\n  assumes \"a \u2260 0\"\n  shows \" a * (1 / a) = 1\"\n  by (simp add: assms)", "description": "This skill demonstrates the property of any non-zero real number that when it is multiplied by its reciprocal, the result is 1. This is a fundamental property of division and multiplication in the field of real numbers. This skill can be used in any context where this property needs to be proven or used.", "full_code": "lemma a_times_vera:\n  fixes a :: real\n  assumes \"a \u2260 0\"\n  shows \" a * (1 / a) = 1\"\n  by (simp add: assms)", "origin": "", "update_count": 0}, "linear_eq_substitution": {"skill_name": "linear_eq_substitution", "marker": "lemma linear_eq_substitution:\n  fixes x e :: complex\n  assumes \"x + e = 7\" and \"2 * x + e = 3\"\n  shows \"e = 7 - x\"\nproof -\n  have \"e = 7 - x\"\n  proof -\n    from assms(1) have \"e = 7 - x\" \n      by (auto simp: field_simps)\n    then show ?thesis\n      by (simp)\n  qed\n  moreover have \"2 * x + e = 3\" \n    using assms(2) by simp\n  ultimately show ?thesis \n    by (simp add: assms(1))\nqed", "description": "-", "full_code": "lemma linear_eq_substitution:\n  fixes x e :: complex\n  assumes \"x + e = 7\" and \"2 * x + e = 3\"\n  shows \"e = 7 - x\"\nproof -\n  have \"e = 7 - x\"\n  proof -\n    from assms(1) have \"e = 7 - x\" \n      by (auto simp: field_simps)\n    then show ?thesis\n      by (simp)\n  qed\n  moreover have \"2 * x + e = 3\" \n    using assms(2) by simp\n  ultimately show ?thesis \n    by (simp add: assms(1))\nqed", "origin": "do_request", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e=11 \\<and> x= (-4)\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  have x_value: \"x = 3 - 7\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have x_result: \"x = -4\" by simp\n  have e_value: \"e = 7 - (-4)\" using e_eq x_result by simp\n  then have e_result: \"e = 11\" by simp\n  show ?thesis using x_result e_result by auto\nqed", "description": "", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e=11 \\<and> x= (-4)\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  have x_value: \"x = 3 - 7\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have x_result: \"x = -4\" by simp\n  have e_value: \"e = 7 - (-4)\" using e_eq x_result by simp\n  then have e_result: \"e = 11\" by simp\n  show ?thesis using x_result e_result by auto\nqed", "origin": "data/full_data/debug/valid_rand/algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4.json_v0", "update_count": -1}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_evolved": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_evolved", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_evolved:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  have x_value: \"x = 3 - 7\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  then have x_result: \"x = -4\" by simp\n  have e_value: \"e = 7 - (-4)\" using e_eq x_result by simp\n  then have e_result: \"e = 11\" by simp\n  show ?thesis using x_result e_result by auto\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_evolved:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  have x_value: \"x = 3 - 7\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  then have x_result: \"x = -4\" by simp\n  have e_value: \"e = 7 - (-4)\" using e_eq x_result by simp\n  then have e_result: \"e = 11\" by simp\n  show ?thesis using x_result e_result by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlinear_eq": {"skill_name": "algebra_2varlinear_eq", "marker": "theorem algebra_2varlinear_eq:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  then have simplified_eq: \"x + 7 = 3\" by simp\n  have x_value: \"x = 3 - 7\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  then have x_result: \"x = -4\" by simp\n  have e_value: \"e = 7 - (-4)\" using e_eq x_result by simp\n  then have e_result: \"e = 11\" by simp\n  show ?thesis using x_result e_result by auto\nqed", "description": "-", "full_code": "theorem algebra_2varlinear_eq:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  then have simplified_eq: \"x + 7 = 3\" by simp\n  have x_value: \"x = 3 - 7\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  then have x_result: \"x = -4\" by simp\n  have e_value: \"e = 7 - (-4)\" using e_eq x_result by simp\n  then have e_result: \"e = 11\" by simp\n  show ?thesis using x_result e_result by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlinear_solve": {"skill_name": "algebra_2varlinear_solve", "marker": "lemma algebra_2varlinear_solve:\n  fixes x e :: complex\n  assumes \"x + e = a\" and \"2 * x + e = b\"\n  shows \"e = a - x \\<and> x = (b - a) / 1\"\nproof -\n  have e_eq: \"e = a - x\" using assms(1) by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using e_eq assms(2) by simp\n  have simplified_eq: \"x + a = b\" using substitution by (simp add: field_simps)\n  thus ?thesis using e_eq by auto\nqed", "description": "-", "full_code": "lemma algebra_2varlinear_solve:\n  fixes x e :: complex\n  assumes \"x + e = a\" and \"2 * x + e = b\"\n  shows \"e = a - x \\<and> x = (b - a) / 1\"\nproof -\n  have e_eq: \"e = a - x\" using assms(1) by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using e_eq assms(2) by simp\n  have simplified_eq: \"x + a = b\" using substitution by (simp add: field_simps)\n  thus ?thesis using e_eq by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_general": {"skill_name": "algebra_2varlineareq_general", "marker": "theorem algebra_2varlineareq_general:\n  fixes x e :: real\n  assumes h0 : \"x + e = a\"\n    and h1 : \"2 * x + e = b\"\n  shows \"e = (2*a - b) / 1 \\<and> x = (b - a) / 1\"\nproof -\n  have e_eq: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using e_eq h1 by simp\n  have simplified_eq: \"x + a = b\" using substitution by simp\n  have x_value: \"x = b - a\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  then have x_result: \"x = (b - a)\" by simp\n  have e_value: \"e = a - (b - a)\" using e_eq x_result by simp\n  then have e_result: \"e = (2*a - b)\" by simp\n  show ?thesis using x_result e_result by auto\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_general:\n  fixes x e :: real\n  assumes h0 : \"x + e = a\"\n    and h1 : \"2 * x + e = b\"\n  shows \"e = (2*a - b) / 1 \\<and> x = (b - a) / 1\"\nproof -\n  have e_eq: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using e_eq h1 by simp\n  have simplified_eq: \"x + a = b\" using substitution by simp\n  have x_value: \"x = b - a\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  then have x_result: \"x = (b - a)\" by simp\n  have e_value: \"e = a - (b - a)\" using e_eq x_result by simp\n  then have e_result: \"e = (2*a - b)\" by simp\n  show ?thesis using x_result e_result by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_generalized": {"skill_name": "algebra_2varlineareq_generalized", "marker": "theorem algebra_2varlineareq_generalized:\n  fixes x y :: complex\n  assumes h0 : \"x + y = a\"\n    and h1 : \"2 * x + y = b\"\n  shows \"y = a - x \\<and> x = (b - a) / 1\" \nproof -\n  have y_eq: \"y = a - x\" using h0 by auto\n  have substitution: \"2 * x + (a - x) = b\" using y_eq h1 by simp\n  have simplified_eq: \"x + a = b\" using substitution by (simp add: algebra_simps)\n  have x_value: \"x = b - a\" using simplified_eq by auto\n  show ?thesis using y_eq x_value by auto\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_generalized:\n  fixes x y :: complex\n  assumes h0 : \"x + y = a\"\n    and h1 : \"2 * x + y = b\"\n  shows \"y = a - x \\<and> x = (b - a) / 1\" \nproof -\n  have y_eq: \"y = a - x\" using h0 by auto\n  have substitution: \"2 * x + (a - x) = b\" using y_eq h1 by simp\n  have simplified_eq: \"x + a = b\" using substitution by (simp add: algebra_simps)\n  have x_value: \"x = b - a\" using simplified_eq by auto\n  show ?thesis using y_eq x_value by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_generalizedV2": {"skill_name": "algebra_2varlineareq_generalizedV2", "marker": "theorem algebra_2varlineareq_generalized:\n  fixes x y :: complex\n  assumes h0 : \"x + y = a\"\n    and h1 : \"2 * x + y = b\"\n  shows \"y = b - 2 * (a - y) \\<and> x = (a - y)\"\nproof -\n  have y_eq: \"y = a - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using y_eq h1 by simp\n  have simplified_eq: \"x + a = b\" using substitution by simp\n  have x_value: \"x = b - a\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  then have x_result: \"x = (a - y)\" by (metis add.commute add_scale_eq_noteq cancel_ab_semigroup_add_class.diff_right_commute diff_add_eq_diff_diff_swap diff_eq_diff_eq eq_iff_diff_eq_0 h0 mult_cancel_right2 mult_delta_right zero_neq_one)\n  have y_value: \"y = a - x\" using y_eq by simp\n  show ?thesis using y_value x_result by (metis add.commute add_right_imp_eq cancel_ab_semigroup_add_class.diff_right_commute diff_add_cancel diff_add_eq_diff_diff_swap diff_diff_eq2 diff_eq_diff_eq group_cancel.sub1 mult.commute mult_2_right simplified_eq)\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_generalized:\n  fixes x y :: complex\n  assumes h0 : \"x + y = a\"\n    and h1 : \"2 * x + y = b\"\n  shows \"y = b - 2 * (a - y) \\<and> x = (a - y)\"\nproof -\n  have y_eq: \"y = a - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using y_eq h1 by simp\n  have simplified_eq: \"x + a = b\" using substitution by simp\n  have x_value: \"x = b - a\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  then have x_result: \"x = (a - y)\" by (metis add.commute add_scale_eq_noteq cancel_ab_semigroup_add_class.diff_right_commute diff_add_eq_diff_diff_swap diff_eq_diff_eq eq_iff_diff_eq_0 h0 mult_cancel_right2 mult_delta_right zero_neq_one)\n  have y_value: \"y = a - x\" using y_eq by simp\n  show ?thesis using y_value x_result by (metis add.commute add_right_imp_eq cancel_ab_semigroup_add_class.diff_right_commute diff_add_cancel diff_add_eq_diff_diff_swap diff_diff_eq2 diff_eq_diff_eq group_cancel.sub1 mult.commute mult_2_right simplified_eq)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_nvarlineareq": {"skill_name": "algebra_nvarlineareq", "marker": "theorem algebra_nvarlineareq:\n  fixes x1 x2 e1 e2 :: complex\n  assumes h0 : \"x1 + e1 = a\"\n    and h1 : \"b * x1 + c * x2 + e2 = d\"\n  shows \"e1 = a - x1 \\<and> e2 = d - (b * x1 + c * x2)\"\nproof -\n  have e1_eq: \"e1 = a - x1\" using h0 by (auto simp: field_simps)\n  have e2_eq: \"e2 = d - (b * x1 + c * x2)\" using h1 by (auto simp: field_simps)\n  show ?thesis using e1_eq e2_eq by auto\nqed", "description": "-", "full_code": "theorem algebra_nvarlineareq:\n  fixes x1 x2 e1 e2 :: complex\n  assumes h0 : \"x1 + e1 = a\"\n    and h1 : \"b * x1 + c * x2 + e2 = d\"\n  shows \"e1 = a - x1 \\<and> e2 = d - (b * x1 + c * x2)\"\nproof -\n  have e1_eq: \"e1 = a - x1\" using h0 by (auto simp: field_simps)\n  have e2_eq: \"e2 = d - (b * x1 + c * x2)\" using h1 by (auto simp: field_simps)\n  show ?thesis using e1_eq e2_eq by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_simplified": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_simplified", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_simplified:\n  fixes x e :: real\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (simp)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have \"x + 7 = 3\" using substitution by simp\n  then have \"x = -4\" by simp\n  then have \"e = 7 - (-4)\" using e_eq by simp\n  then show ?thesis by (smt (verit) \\<open>x = - 4\\<close>)\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_simplified:\n  fixes x e :: real\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (simp)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have \"x + 7 = 3\" using substitution by simp\n  then have \"x = -4\" by simp\n  then have \"e = 7 - (-4)\" using e_eq by simp\n  then show ?thesis by (smt (verit) \\<open>x = - 4\\<close>)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_extended": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_extended", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_extended:\n  fixes x e z :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n    and h2 : \"x + z = 5\"\n  shows \"e = 11 \\<and> x = -4 \\<and> z = 9\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  have x_value: \"x = 3 - 7\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have x_result: \"x = -4\" by simp\n  have e_value: \"e = 7 - (-4)\" using e_eq x_result by simp\n  then have e_result: \"e = 11\" by simp\n  have z_value: \"z = 5 - (-4)\" using h2 x_result by simp\n  then have z_result: \"z = 9\" by simp\n  show ?thesis using x_result e_result z_result by auto\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_extended:\n  fixes x e z :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n    and h2 : \"x + z = 5\"\n  shows \"e = 11 \\<and> x = -4 \\<and> z = 9\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  have x_value: \"x = 3 - 7\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have x_result: \"x = -4\" by simp\n  have e_value: \"e = 7 - (-4)\" using e_eq x_result by simp\n  then have e_result: \"e = 11\" by simp\n  have z_value: \"z = 5 - (-4)\" using h2 x_result by simp\n  then have z_result: \"z = 9\" by simp\n  show ?thesis using x_result e_result z_result by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "linear_equation_system": {"skill_name": "linear_equation_system", "marker": "lemma linear_equation_system:\n  fixes x e :: complex\n  assumes h0 : \"x + e = a\"\n    and h1 : \"2 * x + e = b\"\n  shows \"e = (a - x) \\<and> x = (b - a) / (2 - 1)\"\nproof -\n  have e_eq: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using e_eq h1 by simp\n  have simplified_eq: \"x + a = b\" using substitution by simp\n  have x_value: \"x = b - a\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq)\n  then show ?thesis using e_eq by auto\nqed", "description": "-", "full_code": "lemma linear_equation_system:\n  fixes x e :: complex\n  assumes h0 : \"x + e = a\"\n    and h1 : \"2 * x + e = b\"\n  shows \"e = (a - x) \\<and> x = (b - a) / (2 - 1)\"\nproof -\n  have e_eq: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using e_eq h1 by simp\n  have simplified_eq: \"x + a = b\" using substitution by simp\n  have x_value: \"x = b - a\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq)\n  then show ?thesis using e_eq by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlinear_eq_multiple_conditions": {"skill_name": "algebra_2varlinear_eq_multiple_conditions", "marker": "theorem algebra_2varlinear_eq_multiple_conditions:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n    and h2 : \"x + e = 11\" \n  shows \"x = -4 \\<and> e = 11\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  have x_value: \"x = 3 - 7\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have x_result: \"x = -4\" by simp\n  have e_value: \"e = 7 - (-4)\" using e_eq x_result by simp\n  then have e_result: \"e = 11\" by simp\n  have h2_check: \"(-4) + e = 11\" using e_result by (metis diff_minus_eq_add h2 x_result)\n  show ?thesis using x_result e_result h2_check by auto\nqed", "description": "-", "full_code": "theorem algebra_2varlinear_eq_multiple_conditions:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n    and h2 : \"x + e = 11\" \n  shows \"x = -4 \\<and> e = 11\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  have x_value: \"x = 3 - 7\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have x_result: \"x = -4\" by simp\n  have e_value: \"e = 7 - (-4)\" using e_eq x_result by simp\n  then have e_result: \"e = 11\" by simp\n  have h2_check: \"(-4) + e = 11\" using e_result by (metis diff_minus_eq_add h2 x_result)\n  show ?thesis using x_result e_result h2_check by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "linear_equations_solve": {"skill_name": "linear_equations_solve", "marker": "lemma linear_equations_solve:\n  fixes x e :: complex\n  assumes h0: \"x + e = c\"  \n    and h1: \"2 * x + e = d\" \n  shows \"e = d - 2 * c + 2 * e\"  \nproof -\n  have e_eq: \"e = c - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (c - x) = d\" using e_eq h1 by simp\n  then have \"x + c = d\" by auto\n  hence \"x = d - c\" by (metis add.commute add_diff_cancel)\n  then show ?thesis using e_eq by simp\nqed", "description": "-", "full_code": "lemma linear_equations_solve:\n  fixes x e :: complex\n  assumes h0: \"x + e = c\"  \n    and h1: \"2 * x + e = d\" \n  shows \"e = d - 2 * c + 2 * e\"  \nproof -\n  have e_eq: \"e = c - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (c - x) = d\" using e_eq h1 by simp\n  then have \"x + c = d\" by auto\n  hence \"x = d - c\" by (metis add.commute add_diff_cancel)\n  then show ?thesis using e_eq by simp\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_simpler": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_simpler", "marker": "lemma algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_simpler:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n  shows \"e = 7 - x\"\n  using h0 by (auto simp: field_simps)", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  have x_value: \"x = 3 - 7\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have x_result: \"x = -4\" by simp\n  have e_value: \"e = 7 - (-4)\" using e_eq x_result by simp\n  then have e_result: \"e = 11\" by simp\n  show ?thesis using x_result e_result by auto\nqed\n\nlemma algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_simpler:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n  shows \"e = 7 - x\"\n  using h0 by (auto simp: field_simps)", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_generalized": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_generalized", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_generalized:\n  fixes x e a b c :: complex\n  assumes h0 : \"x + e = a\"\n    and h1 : \"2 * x + e = b\"\n  shows \"e = a - x \\<and> x = (b - a) / (2 - 1)\"\nproof -\n  have e_eq: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using e_eq h1 by simp\n  have simplified_eq: \"x + a = b\" using substitution by simp\n  have x_value: \"x = b - a\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  then have x_result: \"x = (b - a) / 1\" by simp\n  show ?thesis using e_eq x_result by auto\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_generalized:\n  fixes x e a b c :: complex\n  assumes h0 : \"x + e = a\"\n    and h1 : \"2 * x + e = b\"\n  shows \"e = a - x \\<and> x = (b - a) / (2 - 1)\"\nproof -\n  have e_eq: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using e_eq h1 by simp\n  have simplified_eq: \"x + a = b\" using substitution by simp\n  have x_value: \"x = b - a\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  then have x_result: \"x = (b - a) / 1\" by simp\n  show ?thesis using e_eq x_result by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "linear_equations": {"skill_name": "linear_equations", "marker": "lemma linear_equations:\n  fixes x e :: complex\n  assumes h0: \"x + e = a\"\n    and h1: \"2 * x + e = b\"\n  shows \"e = a - x \\<and> x = (b - a) / 1\"\nproof -\n  have e_eq: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using e_eq h1 by simp\n  then have \"x + a = b\" by simp\n  then have x_value: \"x = b - a\" by (metis add.commute add_diff_cancel diff_add_eq)\n  then have e_value: \"e = a - (b - a)\" using e_eq x_value by simp\n  then show ?thesis using x_value e_value by auto\nqed", "description": "-", "full_code": "lemma linear_equations:\n  fixes x e :: complex\n  assumes h0: \"x + e = a\"\n    and h1: \"2 * x + e = b\"\n  shows \"e = a - x \\<and> x = (b - a) / 1\"\nproof -\n  have e_eq: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using e_eq h1 by simp\n  then have \"x + a = b\" by simp\n  then have x_value: \"x = b - a\" by (metis add.commute add_diff_cancel diff_add_eq)\n  then have e_value: \"e = a - (b - a)\" using e_eq x_value by simp\n  then show ?thesis using x_value e_value by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "linear_substitution": {"skill_name": "linear_substitution", "marker": "lemma linear_substitution:\n  fixes x e :: real\n  assumes h0: \"x + e = c\"\n    and h1: \"m * x + e = d\"\n  shows \"e = c - x \\<and> (m - 1) * x = d - c\"\nproof -\n  have e_eq: \"e = c - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"m * x + (c - x) = d\" using e_eq h1 by simp\n  then have \"(m - 1) * x = d - c\" by (simp add: algebra_simps)\n  thus ?thesis using e_eq by auto\nqed", "description": "-", "full_code": "lemma linear_substitution:\n  fixes x e :: real\n  assumes h0: \"x + e = c\"\n    and h1: \"m * x + e = d\"\n  shows \"e = c - x \\<and> (m - 1) * x = d - c\"\nproof -\n  have e_eq: \"e = c - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"m * x + (c - x) = d\" using e_eq h1 by simp\n  then have \"(m - 1) * x = d - c\" by (simp add: algebra_simps)\n  thus ?thesis using e_eq by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "solve_linear_system": {"skill_name": "solve_linear_system", "marker": "lemma solve_linear_system:\n  fixes x e :: complex\n  assumes \"x + e = a\"\n    and \"2 * x + e = b\"\n  shows \"e = (a - x) \\<and> x = (b - a) / 1\"\nproof -\n  have e_eq: \"e = a - x\" using assms(1) by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using e_eq assms(2) by simp\n  have simplified_eq: \"x + a = b\" using substitution by simp\n  have x_value: \"x = b - a\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have x_result: \"x = (b - a)\" by simp\n  have e_value: \"e = a - (b - a)\" using e_eq x_result by simp\n  then have e_result: \"e = (2 * a - b)\" by simp\n  show ?thesis using x_result e_result by auto\nqed", "description": "-", "full_code": "lemma solve_linear_system:\n  fixes x e :: complex\n  assumes \"x + e = a\"\n    and \"2 * x + e = b\"\n  shows \"e = (a - x) \\<and> x = (b - a) / 1\"\nproof -\n  have e_eq: \"e = a - x\" using assms(1) by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using e_eq assms(2) by simp\n  have simplified_eq: \"x + a = b\" using substitution by simp\n  have x_value: \"x = b - a\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have x_result: \"x = (b - a)\" by simp\n  have e_value: \"e = a - (b - a)\" using e_eq x_result by simp\n  then have e_result: \"e = (2 * a - b)\" by simp\n  show ?thesis using x_result e_result by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq": {"skill_name": "algebra_2varlineareq", "marker": "theorem algebra_2varlineareq:\n  fixes x e a b c :: complex\n  assumes h0 : \"x + e = a\"\n    and h1 : \"2 * x + e = b\"\n  shows \"e = (a - x) \\<and> x = (b - a) / 1\"\nproof -\n  have e_eq: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using e_eq h1 by simp\n  have simplified_eq: \"x + a = b\" using substitution by simp\n  have x_value: \"x = b - a\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  then have x_result: \"x = (b - a) / 1\" by simp\n  have e_value: \"e = a - (b - a)\" using e_eq x_result by simp\n  then have e_result: \"e = 2*a - b\" by simp\n  show ?thesis using x_result e_result by auto\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq:\n  fixes x e a b c :: complex\n  assumes h0 : \"x + e = a\"\n    and h1 : \"2 * x + e = b\"\n  shows \"e = (a - x) \\<and> x = (b - a) / 1\"\nproof -\n  have e_eq: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using e_eq h1 by simp\n  have simplified_eq: \"x + a = b\" using substitution by simp\n  have x_value: \"x = b - a\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  then have x_result: \"x = (b - a) / 1\" by simp\n  have e_value: \"e = a - (b - a)\" using e_eq x_result by simp\n  then have e_result: \"e = 2*a - b\" by simp\n  show ?thesis using x_result e_result by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_extendedV2": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_extendedV2", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_extended:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 7 - x \\<and> x = (-4)\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  have x_value: \"x = 3 - 7\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have x_result: \"x = -4\" by simp\n  have e_value: \"e = 7 - (-4)\" using e_eq x_result by simp\n  then have e_result: \"e = 11\" by simp\n  show ?thesis using x_result e_result by auto\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_extended:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 7 - x \\<and> x = (-4)\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  have x_value: \"x = 3 - 7\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have x_result: \"x = -4\" by simp\n  have e_value: \"e = 7 - (-4)\" using e_eq x_result by simp\n  then have e_result: \"e = 11\" by simp\n  show ?thesis using x_result e_result by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "extended_linear_equations": {"skill_name": "extended_linear_equations", "marker": "lemma extended_linear_equations:\n  fixes x e :: \"complex\"\n  assumes h0 : \"x + e = c\"\n    and h1 : \"2 * x + e = d\" \n    and c: \"c = 7\" and d: \"d = 3\"\n  shows \"e = c - x \\<and> x = (-4)\"\nproof -\n  have e_eq: \"e = c - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (c - x) = d\" using e_eq h1 by simp\n  have simplified_eq: \"x + c = d\" using substitution by simp\n  have x_value: \"x = d - c\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have x_result: \"x = d - c\" using c d by simp\n  have e_value: \"e = c - (d - c)\" using e_eq x_result by simp\n  then have e_result: \"e = 2*c - d\" using c d by simp\n  show ?thesis using x_result e_result by (metis ab_group_add_class.ab_diff_conv_add_uminus add.commute add_diff_cancel add_diff_cancel_left' add_minus_cancel algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_extended c cancel_ab_semigroup_add_class.diff_right_commute d diff_add_cancel diff_add_eq diff_diff_eq diff_diff_eq2 diff_minus_eq_add e_eq group_cancel.sub1 minus_diff_commute minus_diff_eq mult.commute mult_2_right simplified_eq)\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_extended:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 7 - x \\<and> x = (-4)\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  have x_value: \"x = 3 - 7\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have x_result: \"x = -4\" by simp\n  have e_value: \"e = 7 - (-4)\" using e_eq x_result by simp\n  then have e_result: \"e = 11\" by simp\n  show ?thesis using x_result e_result by auto\nqed\n\nlemma extended_linear_equations:\n  fixes x e :: \"complex\"\n  assumes h0 : \"x + e = c\"\n    and h1 : \"2 * x + e = d\" \n    and c: \"c = 7\" and d: \"d = 3\"\n  shows \"e = c - x \\<and> x = (-4)\"\nproof -\n  have e_eq: \"e = c - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (c - x) = d\" using e_eq h1 by simp\n  have simplified_eq: \"x + c = d\" using substitution by simp\n  have x_value: \"x = d - c\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have x_result: \"x = d - c\" using c d by simp\n  have e_value: \"e = c - (d - c)\" using e_eq x_result by simp\n  then have e_result: \"e = 2*c - d\" using c d by simp\n  show ?thesis using x_result e_result by (metis ab_group_add_class.ab_diff_conv_add_uminus add.commute add_diff_cancel add_diff_cancel_left' add_minus_cancel algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_extended c cancel_ab_semigroup_add_class.diff_right_commute d diff_add_cancel diff_add_eq diff_diff_eq diff_diff_eq2 diff_minus_eq_add e_eq group_cancel.sub1 minus_diff_commute minus_diff_eq mult.commute mult_2_right simplified_eq)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "linear_system_solution": {"skill_name": "linear_system_solution", "marker": "lemma linear_system_solution:\n  fixes x e :: complex\n  assumes h0 : \"x + e = c\"  \n    and h1 : \"2 * x + e = d\" \n  shows \"e = c - x \\<and> x = (d - c) / (2 - 1)\" \nproof -\n  have e_eq: \"e = c - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (c - x) = d\" using e_eq h1 by simp\n  have simplified_eq: \"x + c = d\" using substitution by simp\n  have x_value: \"x = d - c\" using simplified_eq by auto\n  then have e_value: \"e = c - (d - c)\" using e_eq by simp\n  show ?thesis using x_value e_value by auto\nqed", "description": "-", "full_code": "lemma linear_system_solution:\n  fixes x e :: complex\n  assumes h0 : \"x + e = c\"  \n    and h1 : \"2 * x + e = d\" \n  shows \"e = c - x \\<and> x = (d - c) / (2 - 1)\" \nproof -\n  have e_eq: \"e = c - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (c - x) = d\" using e_eq h1 by simp\n  have simplified_eq: \"x + c = d\" using substitution by simp\n  have x_value: \"x = d - c\" using simplified_eq by auto\n  then have e_value: \"e = c - (d - c)\" using e_eq by simp\n  show ?thesis using x_value e_value by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "linear_substitutionV2": {"skill_name": "linear_substitutionV2", "marker": "lemma linear_substitution:\n  fixes x e :: complex\n  assumes h0: \"x + e = a\"\n    and h1: \"2 * x + e = b\"\n  shows \"e = a - x \\<and> x = (b - a) / 1\"\nproof -\n  have e_eq: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using e_eq h1 by simp\n  have simplified_eq: \"x + a = b\" using substitution by simp\n  then have x_value: \"x = b - a\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  then show ?thesis using e_eq x_value by auto\nqed", "description": "-", "full_code": "lemma linear_substitution:\n  fixes x e :: complex\n  assumes h0: \"x + e = a\"\n    and h1: \"2 * x + e = b\"\n  shows \"e = a - x \\<and> x = (b - a) / 1\"\nproof -\n  have e_eq: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using e_eq h1 by simp\n  have simplified_eq: \"x + a = b\" using substitution by simp\n  then have x_value: \"x = b - a\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  then show ?thesis using e_eq x_value by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_nvarlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4": {"skill_name": "algebra_nvarlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "marker": "theorem algebra_nvarlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 7 - x \\<and> x = -4\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  have x_value: \"x = 3 - 7\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have x_result: \"x = -4\" by simp\n  have e_value: \"e = 7 - (-4)\" using e_eq x_result by simp\n  then have e_result: \"e = 11\" by simp\n  show ?thesis using x_result e_result by auto\nqed", "description": "-", "full_code": "theorem algebra_nvarlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 7 - x \\<and> x = -4\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  have x_value: \"x = 3 - 7\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have x_result: \"x = -4\" by simp\n  have e_value: \"e = 7 - (-4)\" using e_eq x_result by simp\n  then have e_result: \"e = 11\" by simp\n  show ?thesis using x_result e_result by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "system_of_equations": {"skill_name": "system_of_equations", "marker": "lemma system_of_equations:\n  fixes x e :: complex\n  assumes h0 : \"x + e = a\"\n    and h1 : \"2 * x + e = b\"\n  shows \"e = (a - x) \\<and> x = (b - a) / 1\"\nproof -\n  have e_eq: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using e_eq h1 by simp\n  then have \"x + a = b\" by simp\n  then have \"x = b - a\" by auto\n  then show ?thesis using e_eq by auto\nqed", "description": "-", "full_code": "lemma system_of_equations:\n  fixes x e :: complex\n  assumes h0 : \"x + e = a\"\n    and h1 : \"2 * x + e = b\"\n  shows \"e = (a - x) \\<and> x = (b - a) / 1\"\nproof -\n  have e_eq: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using e_eq h1 by simp\n  then have \"x + a = b\" by simp\n  then have \"x = b - a\" by auto\n  then show ?thesis using e_eq by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_evolvedV2": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_evolvedV2", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_evolved:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  then have x_value: \"x = -4\" by (metis add.commute add_diff_cancel_right' dbl_simps(1) dbl_simps(5) diff_add_cancel diff_numeral_simps(1) diff_numeral_special(1) sub_num_simps(3) sub_num_simps(6) sub_num_simps(9))\n  hence e_value: \"e = 7 - (-4)\" using e_eq by simp\n  thus \"e = 11 \\<and> x = -4\" by (metis add.commute add.inverse_inverse add_diff_cancel diff_add_cancel h0 minus_diff_eq numeral_plus_numeral semiring_norm(2) semiring_norm(9) x_value)\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_evolved:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  then have x_value: \"x = -4\" by (metis add.commute add_diff_cancel_right' dbl_simps(1) dbl_simps(5) diff_add_cancel diff_numeral_simps(1) diff_numeral_special(1) sub_num_simps(3) sub_num_simps(6) sub_num_simps(9))\n  hence e_value: \"e = 7 - (-4)\" using e_eq by simp\n  thus \"e = 11 \\<and> x = -4\" by (metis add.commute add.inverse_inverse add_diff_cancel diff_add_cancel h0 minus_diff_eq numeral_plus_numeral semiring_norm(2) semiring_norm(9) x_value)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_extendedV3": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_extendedV3", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_extended:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e=11 \\<and> x= (-4) \\<or> (e = 7 - x \\<and> e = 2 * x + 3)\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  have x_value: \"x = 3 - 7\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  have x_result: \"x = -4\" by (smt (verit) add.commute add_diff_add add_implies_diff add_neg_numeral_simps(2) add_neg_numeral_special(8) add_right_imp_eq diff_add_eq diff_diff_eq diff_diff_eq2 diff_numeral_simps(3) diff_self e_eq h0 numeral_Bit1 one_plus_BitM semiring_norm(165) semiring_norm(26) semiring_norm(27) simplified_eq uminus_numeral_One x_value)\n  have e_value: \"e = 7 - (-4)\" using e_eq x_result by simp\n  have e_result: \"e = 11\" by (metis add.commute diff_minus_eq_add e_eq numeral_Bit0 numeral_eq_iff numeral_plus_numeral semiring_norm(7) x_result)\n  show ?thesis \n  proof (cases \"e = 11\")\n    case True\n    then show ?thesis using x_result e_result by auto\n  next\n    case False\n    then show ?thesis using e_eq h1 by (metis BitM_plus_one add.commute crossproduct_eq diff_diff_eq diff_minus_eq_add diff_numeral_special(4) e_result minus_diff_commute minus_equation_iff minus_mult_commute mult.commute mult_minus_right neg_equal_iff_equal one_add_one right_diff_distrib semiring_norm(5))\n  qed\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_extended:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e=11 \\<and> x= (-4) \\<or> (e = 7 - x \\<and> e = 2 * x + 3)\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  have x_value: \"x = 3 - 7\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  have x_result: \"x = -4\" by (smt (verit) add.commute add_diff_add add_implies_diff add_neg_numeral_simps(2) add_neg_numeral_special(8) add_right_imp_eq diff_add_eq diff_diff_eq diff_diff_eq2 diff_numeral_simps(3) diff_self e_eq h0 numeral_Bit1 one_plus_BitM semiring_norm(165) semiring_norm(26) semiring_norm(27) simplified_eq uminus_numeral_One x_value)\n  have e_value: \"e = 7 - (-4)\" using e_eq x_result by simp\n  have e_result: \"e = 11\" by (metis add.commute diff_minus_eq_add e_eq numeral_Bit0 numeral_eq_iff numeral_plus_numeral semiring_norm(7) x_result)\n  show ?thesis \n  proof (cases \"e = 11\")\n    case True\n    then show ?thesis using x_result e_result by auto\n  next\n    case False\n    then show ?thesis using e_eq h1 by (metis BitM_plus_one add.commute crossproduct_eq diff_diff_eq diff_minus_eq_add diff_numeral_special(4) e_result minus_diff_commute minus_equation_iff minus_mult_commute mult.commute mult_minus_right neg_equal_iff_equal one_add_one right_diff_distrib semiring_norm(5))\n  qed\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_more_general": {"skill_name": "algebra_2varlineareq_more_general", "marker": "theorem algebra_2varlineareq_more_general:\n  fixes x e c d :: complex\n  assumes h0 : \"x + e = c\" \n    and h1 : \"2 * x + e = d\"\n  shows \"e = c - x \\<and> x = (d - c) / (2 - 1)\"\nproof -\n  have e_eq: \"e = c - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (c - x) = d\" using e_eq h1 by simp\n  have simplified_eq: \"x + c = d\" using substitution by simp\n  have x_value: \"x = d - c\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  then have x_result: \"x = (d - c)\" by simp\n  have e_value: \"e = c - (d - c)\" using e_eq x_result by simp\n  then have e_result: \"e = 2*c - d\" by simp\n  show ?thesis using x_result e_result by auto\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_more_general:\n  fixes x e c d :: complex\n  assumes h0 : \"x + e = c\" \n    and h1 : \"2 * x + e = d\"\n  shows \"e = c - x \\<and> x = (d - c) / (2 - 1)\"\nproof -\n  have e_eq: \"e = c - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (c - x) = d\" using e_eq h1 by simp\n  have simplified_eq: \"x + c = d\" using substitution by simp\n  have x_value: \"x = d - c\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  then have x_result: \"x = (d - c)\" by simp\n  have e_value: \"e = c - (d - c)\" using e_eq x_result by simp\n  then have e_result: \"e = 2*c - d\" by simp\n  show ?thesis using x_result e_result by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4V2": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4V2", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"2 * x + 7 - x = 3\" using substitution by simp\n  have \"x + 7 = 3\" using simplified_eq by simp\n  hence \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  hence \"x = -4\" by simp\n  moreover have \"e = 7 - (-4)\" using e_eq `x = -4` by simp\n  ultimately show ?thesis by simp\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"2 * x + 7 - x = 3\" using substitution by simp\n  have \"x + 7 = 3\" using simplified_eq by simp\n  hence \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  hence \"x = -4\" by simp\n  moreover have \"e = 7 - (-4)\" using e_eq `x = -4` by simp\n  ultimately show ?thesis by simp\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "linear_equation_substitution": {"skill_name": "linear_equation_substitution", "marker": "lemma linear_equation_substitution:\n  fixes x e :: complex\n  assumes h0 : \"x + e = a\"\n    and h1 : \"2 * x + e = b\"\n  shows \"e = a - x \\<and> x = (b - a) / 1\"\nproof -\n  have e_eq: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using e_eq h1 by simp\n  then have \"x + a = b\" by simp\n  then have \"x = b - a\" by (metis add.commute add_diff_cancel)\n  show ?thesis using e_eq by (metis \\<open>x = b - a\\<close> div_by_1)\nqed", "description": "-", "full_code": "lemma linear_equation_substitution:\n  fixes x e :: complex\n  assumes h0 : \"x + e = a\"\n    and h1 : \"2 * x + e = b\"\n  shows \"e = a - x \\<and> x = (b - a) / 1\"\nproof -\n  have e_eq: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using e_eq h1 by simp\n  then have \"x + a = b\" by simp\n  then have \"x = b - a\" by (metis add.commute add_diff_cancel)\n  show ?thesis using e_eq by (metis \\<open>x = b - a\\<close> div_by_1)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_generalizedV2": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_generalizedV2", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_generalized:\n  fixes x y e :: complex\n  assumes h0 : \"x + y = 7\"\n    and h1 : \"2 * x + y = 3\"\n  shows \"y = 7 - x \\<and> x = -4\"\nproof -\n  have y_eq: \"y = 7 - x\" using h0 by (simp add: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using y_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel minus_equation_iff neg_numeral_neq_numeral numeral_times_minus_swap square_eq_iff uminus_add_conv_diff)\n  then have \"x = -4\" by simp\n  then have \"y = 7 - (-4)\" using y_eq by simp\n  thus ?thesis by (metis \\<open>x = - 4\\<close> uminus_add_conv_diff y_eq)\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_generalized:\n  fixes x y e :: complex\n  assumes h0 : \"x + y = 7\"\n    and h1 : \"2 * x + y = 3\"\n  shows \"y = 7 - x \\<and> x = -4\"\nproof -\n  have y_eq: \"y = 7 - x\" using h0 by (simp add: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using y_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel minus_equation_iff neg_numeral_neq_numeral numeral_times_minus_swap square_eq_iff uminus_add_conv_diff)\n  then have \"x = -4\" by simp\n  then have \"y = 7 - (-4)\" using y_eq by simp\n  thus ?thesis by (metis \\<open>x = - 4\\<close> uminus_add_conv_diff y_eq)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_simplifiedV2": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_simplifiedV2", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_simplified:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"x = -4 \\<and> e = 11\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (simp add: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"x = -4\" by simp\n  then have \"e = 7 - (-4)\" using e_eq by simp\n  thus ?thesis by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_Bit0 numeral_eq_iff numeral_plus_numeral semiring_norm(7))\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_simplified:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"x = -4 \\<and> e = 11\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (simp add: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  then have \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"x = -4\" by simp\n  then have \"e = 7 - (-4)\" using e_eq by simp\n  thus ?thesis by (metis \\<open>x = - 4\\<close> add.commute diff_minus_eq_add numeral_Bit0 numeral_eq_iff numeral_plus_numeral semiring_norm(7))\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "linear_substitutionV3": {"skill_name": "linear_substitutionV3", "marker": "lemma linear_substitution:\n  fixes x e :: complex\n  assumes h0: \"x + e = c\"  \n  shows \"e = c - x\"\nproof -\n  show \"e = c - x\" using h0 by (auto simp: field_simps)\nqed", "description": "-", "full_code": "lemma linear_substitution:\n  fixes x e :: complex\n  assumes h0: \"x + e = c\"  \n  shows \"e = c - x\"\nproof -\n  show \"e = c - x\" using h0 by (auto simp: field_simps)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_scaled": {"skill_name": "algebra_2varlineareq_scaled", "marker": "theorem algebra_2varlineareq_scaled:\n  fixes x e :: real\n  assumes h0 : \"x + e = 14\"  \n    and h1 : \"2 * x + e = 6\"  \n  shows \"e=22 \\<and> x= (-8)\"\nproof -\n  have e_eq: \"e = 14 - x\" using h0 by (simp add: field_simps)\n  have substitution: \"2 * x + (14 - x) = 6\" using e_eq h1 by simp\n  have simplified_eq: \"x + 14 = 6\" using substitution by simp\n  have x_value: \"x = 6 - 14\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have x_result: \"x = -8\" by simp\n  have e_value: \"e = 14 - (-8)\" using e_eq x_result by simp\n  then have e_result: \"e = 22\" by simp\n  show ?thesis using x_result e_result by auto\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_scaled:\n  fixes x e :: real\n  assumes h0 : \"x + e = 14\"  \n    and h1 : \"2 * x + e = 6\"  \n  shows \"e=22 \\<and> x= (-8)\"\nproof -\n  have e_eq: \"e = 14 - x\" using h0 by (simp add: field_simps)\n  have substitution: \"2 * x + (14 - x) = 6\" using e_eq h1 by simp\n  have simplified_eq: \"x + 14 = 6\" using substitution by simp\n  have x_value: \"x = 6 - 14\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have x_result: \"x = -8\" by simp\n  have e_value: \"e = 14 - (-8)\" using e_eq x_result by simp\n  then have e_result: \"e = 22\" by simp\n  show ?thesis using x_result e_result by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_extended": {"skill_name": "algebra_2varlineareq_extended", "marker": "theorem algebra_2varlineareq_extended:\n  fixes x y e :: complex\n  assumes h0: \"x + y = 7\"\n    and h1: \"2 * x + y = 3\"\n    and h2: \"x - y = 4\"\n  shows \"e = 11 \\<and> x = -4 \\<and> y = 11\"\nproof -\n  have e_eq: \"y = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  have x_value: \"x = 3 - 7\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have x_result: \"x = -4\" by simp\n  have y_value: \"y = 7 - (-4)\" using e_eq x_result by simp\n  then have y_result: \"y = 11\" by simp\n  have e_value: \"e = y + 4\" using h2 by (metis BitM_inc_eq ab_group_add_class.ab_diff_conv_add_uminus add.commute add_diff_cancel_left' add_minus_cancel dbl_def dbl_simps(5) diff_add_cancel inc.simps(1) inc.simps(2) inc.simps(3) minus_diff_eq numeral_neq_neg_numeral semiring_norm(27) uminus_add_conv_diff verit_minus_simplify(4) x_result y_result)\n  then have e_result: \"e = 11\" using y_result by (metis ab_group_add_class.ab_diff_conv_add_uminus add_diff_cancel_left' add_minus_cancel dbl_def dbl_simps(5) diff_add_cancel h2 minus_add_cancel minus_diff_eq numeral_neq_neg_numeral semiring_norm(27) semiring_norm(28) uminus_add_conv_diff verit_minus_simplify(4) x_result)\n  show ?thesis using x_result y_result e_result by auto\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_extended:\n  fixes x y e :: complex\n  assumes h0: \"x + y = 7\"\n    and h1: \"2 * x + y = 3\"\n    and h2: \"x - y = 4\"\n  shows \"e = 11 \\<and> x = -4 \\<and> y = 11\"\nproof -\n  have e_eq: \"y = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  have x_value: \"x = 3 - 7\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have x_result: \"x = -4\" by simp\n  have y_value: \"y = 7 - (-4)\" using e_eq x_result by simp\n  then have y_result: \"y = 11\" by simp\n  have e_value: \"e = y + 4\" using h2 by (metis BitM_inc_eq ab_group_add_class.ab_diff_conv_add_uminus add.commute add_diff_cancel_left' add_minus_cancel dbl_def dbl_simps(5) diff_add_cancel inc.simps(1) inc.simps(2) inc.simps(3) minus_diff_eq numeral_neq_neg_numeral semiring_norm(27) uminus_add_conv_diff verit_minus_simplify(4) x_result y_result)\n  then have e_result: \"e = 11\" using y_result by (metis ab_group_add_class.ab_diff_conv_add_uminus add_diff_cancel_left' add_minus_cancel dbl_def dbl_simps(5) diff_add_cancel h2 minus_add_cancel minus_diff_eq numeral_neq_neg_numeral semiring_norm(27) semiring_norm(28) uminus_add_conv_diff verit_minus_simplify(4) x_result)\n  show ?thesis using x_result y_result e_result by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "linear_equations_solver": {"skill_name": "linear_equations_solver", "marker": "lemma linear_equations_solver:\n  fixes x e :: complex\n  assumes h0 : \"x + e = a\"  \n    and h1 : \"2 * x + e = b\"  \n  shows \"e = a - x \\<and> x = (b - a) / 1\"  \nproof -\n  have e_eq: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using e_eq h1 by simp\n  have simplified_eq: \"x + a = b\" using substitution by simp\n  have x_value: \"x = b - a\" using simplified_eq by (metis add.commute add_diff_cancel)\n  then have x_result: \"x = (b - a)\" by simp\n  have e_value: \"e = a - (b - a)\" using e_eq x_result by simp\n  then have e_result: \"e = 2 * a - b\" by simp\n  show ?thesis using x_result e_result by auto\nqed", "description": "-", "full_code": "lemma linear_equations_solver:\n  fixes x e :: complex\n  assumes h0 : \"x + e = a\"  \n    and h1 : \"2 * x + e = b\"  \n  shows \"e = a - x \\<and> x = (b - a) / 1\"  \nproof -\n  have e_eq: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using e_eq h1 by simp\n  have simplified_eq: \"x + a = b\" using substitution by simp\n  have x_value: \"x = b - a\" using simplified_eq by (metis add.commute add_diff_cancel)\n  then have x_result: \"x = (b - a)\" by simp\n  have e_value: \"e = a - (b - a)\" using e_eq x_result by simp\n  then have e_result: \"e = 2 * a - b\" by simp\n  show ?thesis using x_result e_result by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "linear_substitutionV4": {"skill_name": "linear_substitutionV4", "marker": "lemma linear_substitution:\n  fixes x e :: complex\n  assumes h0: \"x + e = c\"  \n  and h1: \"a * x + e = b\"  \n  shows \"e = c - x\" and \"a * x + (c - x) = b\"\nproof -\n  have e_eq: \"e = c - x\" using h0 by (simp add: field_simps)\n  show \"e = c - x\" by fact\n  show \"a * x + (c - x) = b\" using e_eq h1 by simp\nqed", "description": "-", "full_code": "lemma linear_substitution:\n  fixes x e :: complex\n  assumes h0: \"x + e = c\"  \n  and h1: \"a * x + e = b\"  \n  shows \"e = c - x\" and \"a * x + (c - x) = b\"\nproof -\n  have e_eq: \"e = c - x\" using h0 by (simp add: field_simps)\n  show \"e = c - x\" by fact\n  show \"a * x + (c - x) = b\" using e_eq h1 by simp\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_evolvedV3": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_evolvedV3", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_evolved:\n  fixes x e :: real\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (simp add: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by (simp add: field_simps)\n  have x_value: \"x + 7 = 3\" by (metis diff_minus_eq_add simplified_eq)\n  then have x_result: \"x = 3 - 7\" by (simp) \n  then have x_result_eq: \"x = -4\" by simp\n  have e_value: \"e = 7 - (-4)\" using e_eq x_result_eq by simp\n  then have e_result: \"e = 11\" by simp\n  show ?thesis using x_result_eq e_result by auto\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_evolved:\n  fixes x e :: real\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (simp add: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by (simp add: field_simps)\n  have x_value: \"x + 7 = 3\" by (metis diff_minus_eq_add simplified_eq)\n  then have x_result: \"x = 3 - 7\" by (simp) \n  then have x_result_eq: \"x = -4\" by simp\n  have e_value: \"e = 7 - (-4)\" using e_eq x_result_eq by simp\n  then have e_result: \"e = 11\" by simp\n  show ?thesis using x_result_eq e_result by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlinear_eq_xpeeq7_2xpeeq3_eeq11_xeqn4_simplified": {"skill_name": "algebra_2varlinear_eq_xpeeq7_2xpeeq3_eeq11_xeqn4_simplified", "marker": "theorem algebra_2varlinear_eq_xpeeq7_2xpeeq3_eeq11_xeqn4_simplified:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have \"e = 7 - x\" using h0 by (simp add: field_simps)\n  hence \"2 * x + (7 - x) = 3\" using h1 by simp\n  then have \"x + 7 = 3\" by simp\n  hence \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"x = -4\" by simp\n  then show \"e = 11 \\<and> x = -4\" using `e = 7 - x` by simp\nqed", "description": "-", "full_code": "theorem algebra_2varlinear_eq_xpeeq7_2xpeeq3_eeq11_xeqn4_simplified:\n  fixes x e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n  shows \"e = 11 \\<and> x = -4\"\nproof -\n  have \"e = 7 - x\" using h0 by (simp add: field_simps)\n  hence \"2 * x + (7 - x) = 3\" using h1 by simp\n  then have \"x + 7 = 3\" by simp\n  hence \"x = 3 - 7\" by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have \"x = -4\" by simp\n  then show \"e = 11 \\<and> x = -4\" using `e = 7 - x` by simp\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "linear_system_solutionV2": {"skill_name": "linear_system_solutionV2", "marker": "lemma linear_system_solution:\n  fixes x e :: complex\n  assumes h0 : \"x + e = a\"  \n    and h1 : \"2 * x + e = b\"\n  shows \"e = b - 2 * (a - e) \\<and> x = (b - e) / 2\"\nproof -\n  have e_eq: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using e_eq h1 by simp\n  have simplified_eq: \"x + a = b\" using substitution by auto\n  then have x_value: \"x = b - a\" by auto\n  then have e_value: \"e = a - (b - a)\" using e_eq x_value by simp\n  then show ?thesis using e_value x_value by auto\nqed", "description": "-", "full_code": "lemma linear_system_solution:\n  fixes x e :: complex\n  assumes h0 : \"x + e = a\"  \n    and h1 : \"2 * x + e = b\"\n  shows \"e = b - 2 * (a - e) \\<and> x = (b - e) / 2\"\nproof -\n  have e_eq: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using e_eq h1 by simp\n  have simplified_eq: \"x + a = b\" using substitution by auto\n  then have x_value: \"x = b - a\" by auto\n  then have e_value: \"e = a - (b - a)\" using e_eq x_value by simp\n  then show ?thesis using e_value x_value by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "linear_equation_substitutionV2": {"skill_name": "linear_equation_substitutionV2", "marker": "lemma linear_equation_substitution:\n  fixes x e :: complex\n  assumes h0 : \"x + e = c\"  \n    and h1 : \"a * x + e = d\"  \n  shows \"e = c - x\"  \n  and \"a * x + (c - x) = d\"  \nproof -\n  have e_eq: \"e = c - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"a * x + (c - x) = d\" using e_eq h1 by simp\n  show \"e = c - x\" \"a * x + (c - x) = d\" by (auto simp: e_eq substitution)\nqed", "description": "-", "full_code": "lemma linear_equation_substitution:\n  fixes x e :: complex\n  assumes h0 : \"x + e = c\"  \n    and h1 : \"a * x + e = d\"  \n  shows \"e = c - x\"  \n  and \"a * x + (c - x) = d\"  \nproof -\n  have e_eq: \"e = c - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"a * x + (c - x) = d\" using e_eq h1 by simp\n  show \"e = c - x\" \"a * x + (c - x) = d\" by (auto simp: e_eq substitution)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "linear_equationsV2": {"skill_name": "linear_equationsV2", "marker": "lemma linear_equations:\n  fixes x e :: complex\n  assumes h0 : \"x + e = a\"  \n    and h1 : \"2 * x + e = b\" \n  shows \"e = a - x \\<and> x = (b - a) / 1\"  \nproof -  \n  have e_eq: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using e_eq h1 by simp\n  then have simplified_eq: \"x + a = b\" by simp\n  have x_value: \"x = b - a\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  then show ?thesis using e_eq by auto\nqed", "description": "-", "full_code": "lemma linear_equations:\n  fixes x e :: complex\n  assumes h0 : \"x + e = a\"  \n    and h1 : \"2 * x + e = b\" \n  shows \"e = a - x \\<and> x = (b - a) / 1\"  \nproof -  \n  have e_eq: \"e = a - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (a - x) = b\" using e_eq h1 by simp\n  then have simplified_eq: \"x + a = b\" by simp\n  have x_value: \"x = b - a\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  then show ?thesis using e_eq by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_extendedV4": {"skill_name": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_extendedV4", "marker": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_extended:\n  fixes x y e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n    and h2 : \"y + e = 10\"\n  shows \"e = 11 \\<and> x = -4 \\<and> y = -1\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  have x_value: \"x = 3 - 7\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have x_result: \"x = -4\" by simp\n  have e_value: \"e = 7 - (-4)\" using e_eq x_result by simp\n  then have e_result: \"e = 11\" by simp\n  have y_value: \"y + 11 = 10\" using h2 e_result by simp\n  then have y_result: \"y = 10 - 11\" by (metis add_diff_cancel_right' diff_minus_eq_add e_result h2)\n  then show ?thesis using x_result e_result y_result by auto\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4_extended:\n  fixes x y e :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n    and h2 : \"y + e = 10\"\n  shows \"e = 11 \\<and> x = -4 \\<and> y = -1\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  have x_value: \"x = 3 - 7\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have x_result: \"x = -4\" by simp\n  have e_value: \"e = 7 - (-4)\" using e_eq x_result by simp\n  then have e_result: \"e = 11\" by simp\n  have y_value: \"y + 11 = 10\" using h2 e_result by simp\n  then have y_result: \"y = 10 - 11\" by (metis add_diff_cancel_right' diff_minus_eq_add e_result h2)\n  then show ?thesis using x_result e_result y_result by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_2varlineareq_extendedV2": {"skill_name": "algebra_2varlineareq_extendedV2", "marker": "theorem algebra_2varlineareq_extended:\n  fixes x e f :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n    and h2 : \"f = 2 * x + 3 * e\"\n  shows \"e = 11 \\<and> x = (-4) \\<and> f = 2 * (-4) + 3 * 11\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  have x_value: \"x = 3 - 7\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have x_result: \"x = -4\" by simp\n  have e_value: \"e = 7 - (-4)\" using e_eq x_result by simp\n  then have e_result: \"e = 11\" by simp\n  have f_value: \"f = 2 * (-4) + 3 * 11\" by (metis dbl_inc_simps(3) dbl_simps(3) e_result h2 x_result)\n  then show ?thesis using x_result e_result f_value by auto\nqed", "description": "-", "full_code": "theorem algebra_2varlineareq_extended:\n  fixes x e f :: complex\n  assumes h0 : \"x + e = 7\"\n    and h1 : \"2 * x + e = 3\"\n    and h2 : \"f = 2 * x + 3 * e\"\n  shows \"e = 11 \\<and> x = (-4) \\<and> f = 2 * (-4) + 3 * 11\"\nproof -\n  have e_eq: \"e = 7 - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x) = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by simp\n  have x_value: \"x = 3 - 7\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have x_result: \"x = -4\" by simp\n  have e_value: \"e = 7 - (-4)\" using e_eq x_result by simp\n  then have e_result: \"e = 11\" by simp\n  have f_value: \"f = 2 * (-4) + 3 * 11\" by (metis dbl_inc_simps(3) dbl_simps(3) e_result h2 x_result)\n  then show ?thesis using x_result e_result f_value by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "algebra_nvarlineareqV2": {"skill_name": "algebra_nvarlineareqV2", "marker": "theorem algebra_nvarlineareq:\n  fixes x e z :: complex\n  assumes h0 : \"x + e + z = 7\"\n    and h1 : \"2 * x + e + z = 3\"\n  shows \"e = 11 - z \\<and> x = (-4)\"\nproof -\n  have e_eq: \"e = 7 - x - z\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x - z) + z = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by auto\n  have x_value: \"x = 3 - 7\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have x_result: \"x = -4\" by simp\n  have e_value: \"e = 7 - (-4) - z\" using e_eq x_result by simp\n  then have e_result: \"e = 11 - z\" by simp\n  show ?thesis using x_result e_result by auto\nqed", "description": "-", "full_code": "theorem algebra_nvarlineareq:\n  fixes x e z :: complex\n  assumes h0 : \"x + e + z = 7\"\n    and h1 : \"2 * x + e + z = 3\"\n  shows \"e = 11 - z \\<and> x = (-4)\"\nproof -\n  have e_eq: \"e = 7 - x - z\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (7 - x - z) + z = 3\" using e_eq h1 by simp\n  have simplified_eq: \"x + 7 = 3\" using substitution by auto\n  have x_value: \"x = 3 - 7\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel numeral_neq_neg_numeral square_eq_iff uminus_add_conv_diff)\n  then have x_result: \"x = -4\" by simp\n  have e_value: \"e = 7 - (-4) - z\" using e_eq x_result by simp\n  then have e_result: \"e = 11 - z\" by simp\n  show ?thesis using x_result e_result by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "linear_equation_solver": {"skill_name": "linear_equation_solver", "marker": "lemma linear_equation_solver:\n  fixes x e :: complex\n  assumes h0 : \"x + e = c\"  \n    and h1 : \"2 * x + e = d\"  \n  shows \"e = c - x \\<and> x = (d - c) / 1\"  \nproof -\n  have e_eq: \"e = c - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (c - x) = d\" using e_eq h1 by simp\n  have simplified_eq: \"x + c = d\" using substitution by simp\n  have x_value: \"x = d - c\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  then have x_result: \"x = (d - c) / 1\" by simp  \n  have e_value: \"e = c - ((d - c) / 1)\" using e_eq x_result by simp\n  show ?thesis using x_result e_value by auto\nqed", "description": "-", "full_code": "lemma linear_equation_solver:\n  fixes x e :: complex\n  assumes h0 : \"x + e = c\"  \n    and h1 : \"2 * x + e = d\"  \n  shows \"e = c - x \\<and> x = (d - c) / 1\"  \nproof -\n  have e_eq: \"e = c - x\" using h0 by (auto simp: field_simps)\n  have substitution: \"2 * x + (c - x) = d\" using e_eq h1 by simp\n  have simplified_eq: \"x + c = d\" using substitution by simp\n  have x_value: \"x = d - c\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  then have x_result: \"x = (d - c) / 1\" by simp  \n  have e_value: \"e = c - ((d - c) / 1)\" using e_eq x_result by simp\n  show ?thesis using x_result e_value by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "linear_combination": {"skill_name": "linear_combination", "marker": "lemma linear_combination:\n  fixes a b c :: real\n  assumes h0: \"a + b = c\"\n    and h1: \"2 * a + b = d\"\n  shows \"b = c - a \\<and> a = (d - b) / 2\"\nproof -\n  have b_eq: \"b = c - a\" using h0 by simp\n  have a_eq: \"a = (d - (c - a)) / 2\" using h1 b_eq by simp\n  thus ?thesis using b_eq a_eq by auto\nqed", "description": "-", "full_code": "lemma linear_combination:\n  fixes a b c :: real\n  assumes h0: \"a + b = c\"\n    and h1: \"2 * a + b = d\"\n  shows \"b = c - a \\<and> a = (d - b) / 2\"\nproof -\n  have b_eq: \"b = c - a\" using h0 by simp\n  have a_eq: \"a = (d - (c - a)) / 2\" using h1 b_eq by simp\n  thus ?thesis using b_eq a_eq by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "generalized_linear_equation": {"skill_name": "generalized_linear_equation", "marker": "lemma generalized_linear_equation:\n  fixes a b c d :: complex\n  assumes h0 : \"a + b = c\"\n    and h1 : \"2 * a + b = d\"\n  shows \"b = c - a \\<and> a = (d - b) / 2\"\nproof -\n  have b_eq: \"b = c - a\" using h0 by (simp add: field_simps)\n  have substitution: \"2 * a + (c - a) = d\" using b_eq h1 by simp\n  have simplified_eq: \"a + c = d\" using substitution by simp\n  have a_value: \"a = d - c\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  show ?thesis using b_eq a_value by auto\nqed", "description": "-", "full_code": "lemma generalized_linear_equation:\n  fixes a b c d :: complex\n  assumes h0 : \"a + b = c\"\n    and h1 : \"2 * a + b = d\"\n  shows \"b = c - a \\<and> a = (d - b) / 2\"\nproof -\n  have b_eq: \"b = c - a\" using h0 by (simp add: field_simps)\n  have substitution: \"2 * a + (c - a) = d\" using b_eq h1 by simp\n  have simplified_eq: \"a + c = d\" using substitution by simp\n  have a_value: \"a = d - c\" using simplified_eq by (metis add.commute add_diff_cancel diff_add_eq minus_add_cancel)\n  show ?thesis using b_eq a_value by auto\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "linear_substitutionV5": {"skill_name": "linear_substitutionV5", "marker": "lemma linear_substitution:\n  fixes a b :: complex\n  assumes h0: \"a + b = c\"\n  shows \"b = c - a\"\nproof -\n  have \"b = c - a\" using h0 by (simp add: field_simps)\n  then show ?thesis by simp\nqed", "description": "-", "full_code": "lemma linear_substitution:\n  fixes a b :: complex\n  assumes h0: \"a + b = c\"\n  shows \"b = c - a\"\nproof -\n  have \"b = c - a\" using h0 by (simp add: field_simps)\n  then show ?thesis by simp\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}, "linear_combinationV2": {"skill_name": "linear_combinationV2", "marker": "lemma linear_combination:\n  fixes x y e :: complex\n  assumes h0: \"x + e = a\"\n    and h1: \"2 * x + e = b\"\n  shows \"e = a - x \\<and> x = (b - a) / 1\"\nproof -\n  have \"e = a - x\" using h0 by (auto simp: field_simps)\n  then have \"2 * x + (a - x) = b\" using h1 by simp\n  then have \"x + a = b\" by auto\n  then show ?thesis using h0 by (auto simp: field_simps)\nqed", "description": "-", "full_code": "lemma linear_combination:\n  fixes x y e :: complex\n  assumes h0: \"x + e = a\"\n    and h1: \"2 * x + e = b\"\n  shows \"e = a - x \\<and> x = (b - a) / 1\"\nproof -\n  have \"e = a - x\" using h0 by (auto simp: field_simps)\n  then have \"2 * x + (a - x) = b\" using h1 by simp\n  then have \"x + a = b\" by auto\n  then show ?thesis using h0 by (auto simp: field_simps)\nqed", "origin": "algebra_2varlineareq_xpeeq7_2xpeeq3_eeq11_xeqn4", "update_count": 0}}